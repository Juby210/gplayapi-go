// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.17.3
// source: GooglePlay.proto

package gpproto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type AndroidAppDeliveryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DownloadSize                  *int64               `protobuf:"varint,1,opt,name=downloadSize" json:"downloadSize,omitempty"`
	Sha1                          *string              `protobuf:"bytes,2,opt,name=sha1" json:"sha1,omitempty"`
	DownloadUrl                   *string              `protobuf:"bytes,3,opt,name=downloadUrl" json:"downloadUrl,omitempty"`
	AdditionalFile                []*AppFileMetadata   `protobuf:"bytes,4,rep,name=additionalFile" json:"additionalFile,omitempty"`
	DownloadAuthCookie            []*HttpCookie        `protobuf:"bytes,5,rep,name=downloadAuthCookie" json:"downloadAuthCookie,omitempty"`
	ForwardLocked                 *bool                `protobuf:"varint,6,opt,name=forwardLocked" json:"forwardLocked,omitempty"`
	RefundTimeout                 *int64               `protobuf:"varint,7,opt,name=refundTimeout" json:"refundTimeout,omitempty"`
	ServerInitiated               *bool                `protobuf:"varint,8,opt,name=serverInitiated,def=1" json:"serverInitiated,omitempty"`
	PostInstallRefundWindowMillis *int64               `protobuf:"varint,9,opt,name=postInstallRefundWindowMillis" json:"postInstallRefundWindowMillis,omitempty"`
	ImmediateStartNeeded          *bool                `protobuf:"varint,10,opt,name=immediateStartNeeded" json:"immediateStartNeeded,omitempty"`
	PatchData                     *AndroidAppPatchData `protobuf:"bytes,11,opt,name=patchData" json:"patchData,omitempty"`
	EncryptionParams              *EncryptionParams    `protobuf:"bytes,12,opt,name=encryptionParams" json:"encryptionParams,omitempty"`
	CompressedDownloadUrl         *string              `protobuf:"bytes,13,opt,name=compressedDownloadUrl" json:"compressedDownloadUrl,omitempty"`
	CompressedSize                *int64               `protobuf:"varint,14,opt,name=compressedSize" json:"compressedSize,omitempty"`
	SplitDeliveryData             []*SplitDeliveryData `protobuf:"bytes,15,rep,name=splitDeliveryData" json:"splitDeliveryData,omitempty"`
	InstallLocation               *int32               `protobuf:"varint,16,opt,name=installLocation" json:"installLocation,omitempty"`
	Type                          *int64               `protobuf:"varint,17,opt,name=type" json:"type,omitempty"`
	CompressedAppData             *CompressedAppData   `protobuf:"bytes,18,opt,name=compressedAppData" json:"compressedAppData,omitempty"`
	Sha256                        *string              `protobuf:"bytes,19,opt,name=sha256" json:"sha256,omitempty"`
}

// Default values for AndroidAppDeliveryData fields.
const (
	Default_AndroidAppDeliveryData_ServerInitiated = bool(true)
)

func (x *AndroidAppDeliveryData) Reset() {
	*x = AndroidAppDeliveryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidAppDeliveryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidAppDeliveryData) ProtoMessage() {}

func (x *AndroidAppDeliveryData) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidAppDeliveryData.ProtoReflect.Descriptor instead.
func (*AndroidAppDeliveryData) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{0}
}

func (x *AndroidAppDeliveryData) GetDownloadSize() int64 {
	if x != nil && x.DownloadSize != nil {
		return *x.DownloadSize
	}
	return 0
}

func (x *AndroidAppDeliveryData) GetSha1() string {
	if x != nil && x.Sha1 != nil {
		return *x.Sha1
	}
	return ""
}

func (x *AndroidAppDeliveryData) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

func (x *AndroidAppDeliveryData) GetAdditionalFile() []*AppFileMetadata {
	if x != nil {
		return x.AdditionalFile
	}
	return nil
}

func (x *AndroidAppDeliveryData) GetDownloadAuthCookie() []*HttpCookie {
	if x != nil {
		return x.DownloadAuthCookie
	}
	return nil
}

func (x *AndroidAppDeliveryData) GetForwardLocked() bool {
	if x != nil && x.ForwardLocked != nil {
		return *x.ForwardLocked
	}
	return false
}

func (x *AndroidAppDeliveryData) GetRefundTimeout() int64 {
	if x != nil && x.RefundTimeout != nil {
		return *x.RefundTimeout
	}
	return 0
}

func (x *AndroidAppDeliveryData) GetServerInitiated() bool {
	if x != nil && x.ServerInitiated != nil {
		return *x.ServerInitiated
	}
	return Default_AndroidAppDeliveryData_ServerInitiated
}

func (x *AndroidAppDeliveryData) GetPostInstallRefundWindowMillis() int64 {
	if x != nil && x.PostInstallRefundWindowMillis != nil {
		return *x.PostInstallRefundWindowMillis
	}
	return 0
}

func (x *AndroidAppDeliveryData) GetImmediateStartNeeded() bool {
	if x != nil && x.ImmediateStartNeeded != nil {
		return *x.ImmediateStartNeeded
	}
	return false
}

func (x *AndroidAppDeliveryData) GetPatchData() *AndroidAppPatchData {
	if x != nil {
		return x.PatchData
	}
	return nil
}

func (x *AndroidAppDeliveryData) GetEncryptionParams() *EncryptionParams {
	if x != nil {
		return x.EncryptionParams
	}
	return nil
}

func (x *AndroidAppDeliveryData) GetCompressedDownloadUrl() string {
	if x != nil && x.CompressedDownloadUrl != nil {
		return *x.CompressedDownloadUrl
	}
	return ""
}

func (x *AndroidAppDeliveryData) GetCompressedSize() int64 {
	if x != nil && x.CompressedSize != nil {
		return *x.CompressedSize
	}
	return 0
}

func (x *AndroidAppDeliveryData) GetSplitDeliveryData() []*SplitDeliveryData {
	if x != nil {
		return x.SplitDeliveryData
	}
	return nil
}

func (x *AndroidAppDeliveryData) GetInstallLocation() int32 {
	if x != nil && x.InstallLocation != nil {
		return *x.InstallLocation
	}
	return 0
}

func (x *AndroidAppDeliveryData) GetType() int64 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *AndroidAppDeliveryData) GetCompressedAppData() *CompressedAppData {
	if x != nil {
		return x.CompressedAppData
	}
	return nil
}

func (x *AndroidAppDeliveryData) GetSha256() string {
	if x != nil && x.Sha256 != nil {
		return *x.Sha256
	}
	return ""
}

type SplitDeliveryData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                  *string              `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	DownloadSize          *int64               `protobuf:"varint,2,opt,name=downloadSize" json:"downloadSize,omitempty"`
	CompressedSize        *int64               `protobuf:"varint,3,opt,name=compressedSize" json:"compressedSize,omitempty"`
	Sha1                  *string              `protobuf:"bytes,4,opt,name=sha1" json:"sha1,omitempty"`
	DownloadUrl           *string              `protobuf:"bytes,5,opt,name=downloadUrl" json:"downloadUrl,omitempty"`
	CompressedDownloadUrl *string              `protobuf:"bytes,6,opt,name=compressedDownloadUrl" json:"compressedDownloadUrl,omitempty"`
	PatchData             *AndroidAppPatchData `protobuf:"bytes,7,opt,name=patchData" json:"patchData,omitempty"`
	CompressedAppData     *CompressedAppData   `protobuf:"bytes,8,opt,name=compressedAppData" json:"compressedAppData,omitempty"`
	Sha256                *string              `protobuf:"bytes,9,opt,name=sha256" json:"sha256,omitempty"`
}

func (x *SplitDeliveryData) Reset() {
	*x = SplitDeliveryData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SplitDeliveryData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SplitDeliveryData) ProtoMessage() {}

func (x *SplitDeliveryData) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SplitDeliveryData.ProtoReflect.Descriptor instead.
func (*SplitDeliveryData) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{1}
}

func (x *SplitDeliveryData) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *SplitDeliveryData) GetDownloadSize() int64 {
	if x != nil && x.DownloadSize != nil {
		return *x.DownloadSize
	}
	return 0
}

func (x *SplitDeliveryData) GetCompressedSize() int64 {
	if x != nil && x.CompressedSize != nil {
		return *x.CompressedSize
	}
	return 0
}

func (x *SplitDeliveryData) GetSha1() string {
	if x != nil && x.Sha1 != nil {
		return *x.Sha1
	}
	return ""
}

func (x *SplitDeliveryData) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

func (x *SplitDeliveryData) GetCompressedDownloadUrl() string {
	if x != nil && x.CompressedDownloadUrl != nil {
		return *x.CompressedDownloadUrl
	}
	return ""
}

func (x *SplitDeliveryData) GetPatchData() *AndroidAppPatchData {
	if x != nil {
		return x.PatchData
	}
	return nil
}

func (x *SplitDeliveryData) GetCompressedAppData() *CompressedAppData {
	if x != nil {
		return x.CompressedAppData
	}
	return nil
}

func (x *SplitDeliveryData) GetSha256() string {
	if x != nil && x.Sha256 != nil {
		return *x.Sha256
	}
	return ""
}

type AndroidAppPatchData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseVersionCode *int32  `protobuf:"varint,1,opt,name=baseVersionCode" json:"baseVersionCode,omitempty"`
	BaseSha1        *string `protobuf:"bytes,2,opt,name=baseSha1" json:"baseSha1,omitempty"`
	DownloadUrl     *string `protobuf:"bytes,3,opt,name=downloadUrl" json:"downloadUrl,omitempty"`
	PatchFormat     *int32  `protobuf:"varint,4,opt,name=patchFormat,def=1" json:"patchFormat,omitempty"`
	MaxPatchSize    *int64  `protobuf:"varint,5,opt,name=maxPatchSize" json:"maxPatchSize,omitempty"`
}

// Default values for AndroidAppPatchData fields.
const (
	Default_AndroidAppPatchData_PatchFormat = int32(1)
)

func (x *AndroidAppPatchData) Reset() {
	*x = AndroidAppPatchData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidAppPatchData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidAppPatchData) ProtoMessage() {}

func (x *AndroidAppPatchData) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidAppPatchData.ProtoReflect.Descriptor instead.
func (*AndroidAppPatchData) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{2}
}

func (x *AndroidAppPatchData) GetBaseVersionCode() int32 {
	if x != nil && x.BaseVersionCode != nil {
		return *x.BaseVersionCode
	}
	return 0
}

func (x *AndroidAppPatchData) GetBaseSha1() string {
	if x != nil && x.BaseSha1 != nil {
		return *x.BaseSha1
	}
	return ""
}

func (x *AndroidAppPatchData) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

func (x *AndroidAppPatchData) GetPatchFormat() int32 {
	if x != nil && x.PatchFormat != nil {
		return *x.PatchFormat
	}
	return Default_AndroidAppPatchData_PatchFormat
}

func (x *AndroidAppPatchData) GetMaxPatchSize() int64 {
	if x != nil && x.MaxPatchSize != nil {
		return *x.MaxPatchSize
	}
	return 0
}

type CompressedAppData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Type        *int64  `protobuf:"varint,1,opt,name=type" json:"type,omitempty"`
	Size        *int64  `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	DownloadUrl *string `protobuf:"bytes,3,opt,name=downloadUrl" json:"downloadUrl,omitempty"`
}

func (x *CompressedAppData) Reset() {
	*x = CompressedAppData{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CompressedAppData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CompressedAppData) ProtoMessage() {}

func (x *CompressedAppData) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CompressedAppData.ProtoReflect.Descriptor instead.
func (*CompressedAppData) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{3}
}

func (x *CompressedAppData) GetType() int64 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *CompressedAppData) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *CompressedAppData) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

type AppFileMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileType              *int32               `protobuf:"varint,1,opt,name=fileType" json:"fileType,omitempty"`
	VersionCode           *int32               `protobuf:"varint,2,opt,name=versionCode" json:"versionCode,omitempty"`
	Size                  *int64               `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	DownloadUrl           *string              `protobuf:"bytes,4,opt,name=downloadUrl" json:"downloadUrl,omitempty"`
	PatchData             *AndroidAppPatchData `protobuf:"bytes,5,opt,name=patchData" json:"patchData,omitempty"`
	CompressedSize        *int64               `protobuf:"varint,6,opt,name=compressedSize" json:"compressedSize,omitempty"`
	CompressedDownloadUrl *string              `protobuf:"bytes,7,opt,name=compressedDownloadUrl" json:"compressedDownloadUrl,omitempty"`
	Sha1                  *string              `protobuf:"bytes,8,opt,name=sha1" json:"sha1,omitempty"`
}

func (x *AppFileMetadata) Reset() {
	*x = AppFileMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppFileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppFileMetadata) ProtoMessage() {}

func (x *AppFileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppFileMetadata.ProtoReflect.Descriptor instead.
func (*AppFileMetadata) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{4}
}

func (x *AppFileMetadata) GetFileType() int32 {
	if x != nil && x.FileType != nil {
		return *x.FileType
	}
	return 0
}

func (x *AppFileMetadata) GetVersionCode() int32 {
	if x != nil && x.VersionCode != nil {
		return *x.VersionCode
	}
	return 0
}

func (x *AppFileMetadata) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *AppFileMetadata) GetDownloadUrl() string {
	if x != nil && x.DownloadUrl != nil {
		return *x.DownloadUrl
	}
	return ""
}

func (x *AppFileMetadata) GetPatchData() *AndroidAppPatchData {
	if x != nil {
		return x.PatchData
	}
	return nil
}

func (x *AppFileMetadata) GetCompressedSize() int64 {
	if x != nil && x.CompressedSize != nil {
		return *x.CompressedSize
	}
	return 0
}

func (x *AppFileMetadata) GetCompressedDownloadUrl() string {
	if x != nil && x.CompressedDownloadUrl != nil {
		return *x.CompressedDownloadUrl
	}
	return ""
}

func (x *AppFileMetadata) GetSha1() string {
	if x != nil && x.Sha1 != nil {
		return *x.Sha1
	}
	return ""
}

type EncryptionParams struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Version       *int32  `protobuf:"varint,1,opt,name=version" json:"version,omitempty"`
	EncryptionKey *string `protobuf:"bytes,2,opt,name=encryptionKey" json:"encryptionKey,omitempty"`
	HMacKey       *string `protobuf:"bytes,3,opt,name=hMacKey" json:"hMacKey,omitempty"`
}

func (x *EncryptionParams) Reset() {
	*x = EncryptionParams{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EncryptionParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EncryptionParams) ProtoMessage() {}

func (x *EncryptionParams) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EncryptionParams.ProtoReflect.Descriptor instead.
func (*EncryptionParams) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{5}
}

func (x *EncryptionParams) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *EncryptionParams) GetEncryptionKey() string {
	if x != nil && x.EncryptionKey != nil {
		return *x.EncryptionKey
	}
	return ""
}

func (x *EncryptionParams) GetHMacKey() string {
	if x != nil && x.HMacKey != nil {
		return *x.HMacKey
	}
	return ""
}

type HttpCookie struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
}

func (x *HttpCookie) Reset() {
	*x = HttpCookie{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *HttpCookie) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HttpCookie) ProtoMessage() {}

func (x *HttpCookie) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HttpCookie.ProtoReflect.Descriptor instead.
func (*HttpCookie) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{6}
}

func (x *HttpCookie) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *HttpCookie) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type Address struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name                *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	AddressLine1        *string `protobuf:"bytes,2,opt,name=addressLine1" json:"addressLine1,omitempty"`
	AddressLine2        *string `protobuf:"bytes,3,opt,name=addressLine2" json:"addressLine2,omitempty"`
	City                *string `protobuf:"bytes,4,opt,name=city" json:"city,omitempty"`
	State               *string `protobuf:"bytes,5,opt,name=state" json:"state,omitempty"`
	PostalCode          *string `protobuf:"bytes,6,opt,name=postalCode" json:"postalCode,omitempty"`
	PostalCountry       *string `protobuf:"bytes,7,opt,name=postalCountry" json:"postalCountry,omitempty"`
	DependentLocality   *string `protobuf:"bytes,8,opt,name=dependentLocality" json:"dependentLocality,omitempty"`
	SortingCode         *string `protobuf:"bytes,9,opt,name=sortingCode" json:"sortingCode,omitempty"`
	LanguageCode        *string `protobuf:"bytes,10,opt,name=languageCode" json:"languageCode,omitempty"`
	PhoneNumber         *string `protobuf:"bytes,11,opt,name=phoneNumber" json:"phoneNumber,omitempty"`
	DeprecatedIsReduced *bool   `protobuf:"varint,12,opt,name=deprecatedIsReduced" json:"deprecatedIsReduced,omitempty"`
	FirstName           *string `protobuf:"bytes,13,opt,name=firstName" json:"firstName,omitempty"`
	LastName            *string `protobuf:"bytes,14,opt,name=lastName" json:"lastName,omitempty"`
	Email               *string `protobuf:"bytes,15,opt,name=email" json:"email,omitempty"`
}

func (x *Address) Reset() {
	*x = Address{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Address) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Address) ProtoMessage() {}

func (x *Address) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Address.ProtoReflect.Descriptor instead.
func (*Address) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{7}
}

func (x *Address) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *Address) GetAddressLine1() string {
	if x != nil && x.AddressLine1 != nil {
		return *x.AddressLine1
	}
	return ""
}

func (x *Address) GetAddressLine2() string {
	if x != nil && x.AddressLine2 != nil {
		return *x.AddressLine2
	}
	return ""
}

func (x *Address) GetCity() string {
	if x != nil && x.City != nil {
		return *x.City
	}
	return ""
}

func (x *Address) GetState() string {
	if x != nil && x.State != nil {
		return *x.State
	}
	return ""
}

func (x *Address) GetPostalCode() string {
	if x != nil && x.PostalCode != nil {
		return *x.PostalCode
	}
	return ""
}

func (x *Address) GetPostalCountry() string {
	if x != nil && x.PostalCountry != nil {
		return *x.PostalCountry
	}
	return ""
}

func (x *Address) GetDependentLocality() string {
	if x != nil && x.DependentLocality != nil {
		return *x.DependentLocality
	}
	return ""
}

func (x *Address) GetSortingCode() string {
	if x != nil && x.SortingCode != nil {
		return *x.SortingCode
	}
	return ""
}

func (x *Address) GetLanguageCode() string {
	if x != nil && x.LanguageCode != nil {
		return *x.LanguageCode
	}
	return ""
}

func (x *Address) GetPhoneNumber() string {
	if x != nil && x.PhoneNumber != nil {
		return *x.PhoneNumber
	}
	return ""
}

func (x *Address) GetDeprecatedIsReduced() bool {
	if x != nil && x.DeprecatedIsReduced != nil {
		return *x.DeprecatedIsReduced
	}
	return false
}

func (x *Address) GetFirstName() string {
	if x != nil && x.FirstName != nil {
		return *x.FirstName
	}
	return ""
}

func (x *Address) GetLastName() string {
	if x != nil && x.LastName != nil {
		return *x.LastName
	}
	return ""
}

func (x *Address) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

type DirectPurchase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DetailsUrl     *string `protobuf:"bytes,1,opt,name=detailsUrl" json:"detailsUrl,omitempty"`
	PurchaseItemId *string `protobuf:"bytes,2,opt,name=purchaseItemId" json:"purchaseItemId,omitempty"`
	ParentItemId   *string `protobuf:"bytes,3,opt,name=parentItemId" json:"parentItemId,omitempty"`
	OfferType      *int32  `protobuf:"varint,4,opt,name=offerType,def=1" json:"offerType,omitempty"`
}

// Default values for DirectPurchase fields.
const (
	Default_DirectPurchase_OfferType = int32(1)
)

func (x *DirectPurchase) Reset() {
	*x = DirectPurchase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DirectPurchase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DirectPurchase) ProtoMessage() {}

func (x *DirectPurchase) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DirectPurchase.ProtoReflect.Descriptor instead.
func (*DirectPurchase) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{8}
}

func (x *DirectPurchase) GetDetailsUrl() string {
	if x != nil && x.DetailsUrl != nil {
		return *x.DetailsUrl
	}
	return ""
}

func (x *DirectPurchase) GetPurchaseItemId() string {
	if x != nil && x.PurchaseItemId != nil {
		return *x.PurchaseItemId
	}
	return ""
}

func (x *DirectPurchase) GetParentItemId() string {
	if x != nil && x.ParentItemId != nil {
		return *x.ParentItemId
	}
	return ""
}

func (x *DirectPurchase) GetOfferType() int32 {
	if x != nil && x.OfferType != nil {
		return *x.OfferType
	}
	return Default_DirectPurchase_OfferType
}

type ResolvedLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DetailsUrl       *string         `protobuf:"bytes,1,opt,name=detailsUrl" json:"detailsUrl,omitempty"`
	BrowseUrl        *string         `protobuf:"bytes,2,opt,name=browseUrl" json:"browseUrl,omitempty"`
	SearchUrl        *string         `protobuf:"bytes,3,opt,name=searchUrl" json:"searchUrl,omitempty"`
	DirectPurchase   *DirectPurchase `protobuf:"bytes,4,opt,name=directPurchase" json:"directPurchase,omitempty"`
	HomeUrl          *string         `protobuf:"bytes,5,opt,name=homeUrl" json:"homeUrl,omitempty"`
	ServerLogsCookie []byte          `protobuf:"bytes,7,opt,name=serverLogsCookie" json:"serverLogsCookie,omitempty"`
	DocId            *DocId          `protobuf:"bytes,8,opt,name=DocId" json:"DocId,omitempty"`
	Backend          *int32          `protobuf:"varint,10,opt,name=backend" json:"backend,omitempty"`
	Query            *string         `protobuf:"bytes,11,opt,name=query" json:"query,omitempty"`
	MyAccountUrl     *string         `protobuf:"bytes,12,opt,name=myAccountUrl" json:"myAccountUrl,omitempty"`
}

func (x *ResolvedLink) Reset() {
	*x = ResolvedLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResolvedLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResolvedLink) ProtoMessage() {}

func (x *ResolvedLink) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResolvedLink.ProtoReflect.Descriptor instead.
func (*ResolvedLink) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{9}
}

func (x *ResolvedLink) GetDetailsUrl() string {
	if x != nil && x.DetailsUrl != nil {
		return *x.DetailsUrl
	}
	return ""
}

func (x *ResolvedLink) GetBrowseUrl() string {
	if x != nil && x.BrowseUrl != nil {
		return *x.BrowseUrl
	}
	return ""
}

func (x *ResolvedLink) GetSearchUrl() string {
	if x != nil && x.SearchUrl != nil {
		return *x.SearchUrl
	}
	return ""
}

func (x *ResolvedLink) GetDirectPurchase() *DirectPurchase {
	if x != nil {
		return x.DirectPurchase
	}
	return nil
}

func (x *ResolvedLink) GetHomeUrl() string {
	if x != nil && x.HomeUrl != nil {
		return *x.HomeUrl
	}
	return ""
}

func (x *ResolvedLink) GetServerLogsCookie() []byte {
	if x != nil {
		return x.ServerLogsCookie
	}
	return nil
}

func (x *ResolvedLink) GetDocId() *DocId {
	if x != nil {
		return x.DocId
	}
	return nil
}

func (x *ResolvedLink) GetBackend() int32 {
	if x != nil && x.Backend != nil {
		return *x.Backend
	}
	return 0
}

func (x *ResolvedLink) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

func (x *ResolvedLink) GetMyAccountUrl() string {
	if x != nil && x.MyAccountUrl != nil {
		return *x.MyAccountUrl
	}
	return ""
}

type QuickLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name             *string       `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Image            *Image        `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"`
	Link             *ResolvedLink `protobuf:"bytes,3,opt,name=link" json:"link,omitempty"`
	DisplayRequired  *bool         `protobuf:"varint,4,opt,name=displayRequired" json:"displayRequired,omitempty"`
	ServerLogsCookie []byte        `protobuf:"bytes,5,opt,name=serverLogsCookie" json:"serverLogsCookie,omitempty"`
	BackendId        *int32        `protobuf:"varint,6,opt,name=backendId" json:"backendId,omitempty"`
	PrismStyle       *bool         `protobuf:"varint,7,opt,name=prismStyle" json:"prismStyle,omitempty"`
}

func (x *QuickLink) Reset() {
	*x = QuickLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QuickLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QuickLink) ProtoMessage() {}

func (x *QuickLink) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QuickLink.ProtoReflect.Descriptor instead.
func (*QuickLink) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{10}
}

func (x *QuickLink) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *QuickLink) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *QuickLink) GetLink() *ResolvedLink {
	if x != nil {
		return x.Link
	}
	return nil
}

func (x *QuickLink) GetDisplayRequired() bool {
	if x != nil && x.DisplayRequired != nil {
		return *x.DisplayRequired
	}
	return false
}

func (x *QuickLink) GetServerLogsCookie() []byte {
	if x != nil {
		return x.ServerLogsCookie
	}
	return nil
}

func (x *QuickLink) GetBackendId() int32 {
	if x != nil && x.BackendId != nil {
		return *x.BackendId
	}
	return 0
}

func (x *QuickLink) GetPrismStyle() bool {
	if x != nil && x.PrismStyle != nil {
		return *x.PrismStyle
	}
	return false
}

type BuyResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchaseResponse           *PurchaseNotificationResponse `protobuf:"bytes,1,opt,name=purchaseResponse" json:"purchaseResponse,omitempty"`
	Checkoutinfo               *BuyResponse_CheckoutInfo     `protobuf:"group,2,opt,name=CheckoutInfo,json=checkoutinfo" json:"checkoutinfo,omitempty"`
	ContinueViaUrl             *string                       `protobuf:"bytes,8,opt,name=continueViaUrl" json:"continueViaUrl,omitempty"`
	PurchaseStatusUrl          *string                       `protobuf:"bytes,9,opt,name=purchaseStatusUrl" json:"purchaseStatusUrl,omitempty"`
	CheckoutServiceId          *string                       `protobuf:"bytes,12,opt,name=checkoutServiceId" json:"checkoutServiceId,omitempty"`
	CheckoutTokenRequired      *bool                         `protobuf:"varint,13,opt,name=checkoutTokenRequired" json:"checkoutTokenRequired,omitempty"`
	BaseCheckoutUrl            *string                       `protobuf:"bytes,14,opt,name=baseCheckoutUrl" json:"baseCheckoutUrl,omitempty"`
	TosCheckboxHtml            []string                      `protobuf:"bytes,37,rep,name=tosCheckboxHtml" json:"tosCheckboxHtml,omitempty"`
	IabPermissionError         *int32                        `protobuf:"varint,38,opt,name=iabPermissionError" json:"iabPermissionError,omitempty"`
	PurchaseStatusResponse     *PurchaseStatusResponse       `protobuf:"bytes,39,opt,name=purchaseStatusResponse" json:"purchaseStatusResponse,omitempty"`
	PurchaseCookie             *string                       `protobuf:"bytes,46,opt,name=purchaseCookie" json:"purchaseCookie,omitempty"`
	Challenge                  *Challenge                    `protobuf:"bytes,49,opt,name=challenge" json:"challenge,omitempty"`
	AddInstrumentPromptHtml    *string                       `protobuf:"bytes,50,opt,name=addInstrumentPromptHtml" json:"addInstrumentPromptHtml,omitempty"`
	ConfirmButtonText          *string                       `protobuf:"bytes,51,opt,name=confirmButtonText" json:"confirmButtonText,omitempty"`
	PermissionErrorTitleText   *string                       `protobuf:"bytes,52,opt,name=permissionErrorTitleText" json:"permissionErrorTitleText,omitempty"`
	PermissionErrorMessageText *string                       `protobuf:"bytes,53,opt,name=permissionErrorMessageText" json:"permissionErrorMessageText,omitempty"`
	ServerLogsCookie           []byte                        `protobuf:"bytes,54,opt,name=serverLogsCookie" json:"serverLogsCookie,omitempty"`
	EncodedDeliveryToken       *string                       `protobuf:"bytes,55,opt,name=encodedDeliveryToken" json:"encodedDeliveryToken,omitempty"`
	UnknownToken               *string                       `protobuf:"bytes,56,opt,name=unknownToken" json:"unknownToken,omitempty"`
}

func (x *BuyResponse) Reset() {
	*x = BuyResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyResponse) ProtoMessage() {}

func (x *BuyResponse) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyResponse.ProtoReflect.Descriptor instead.
func (*BuyResponse) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{11}
}

func (x *BuyResponse) GetPurchaseResponse() *PurchaseNotificationResponse {
	if x != nil {
		return x.PurchaseResponse
	}
	return nil
}

func (x *BuyResponse) GetCheckoutinfo() *BuyResponse_CheckoutInfo {
	if x != nil {
		return x.Checkoutinfo
	}
	return nil
}

func (x *BuyResponse) GetContinueViaUrl() string {
	if x != nil && x.ContinueViaUrl != nil {
		return *x.ContinueViaUrl
	}
	return ""
}

func (x *BuyResponse) GetPurchaseStatusUrl() string {
	if x != nil && x.PurchaseStatusUrl != nil {
		return *x.PurchaseStatusUrl
	}
	return ""
}

func (x *BuyResponse) GetCheckoutServiceId() string {
	if x != nil && x.CheckoutServiceId != nil {
		return *x.CheckoutServiceId
	}
	return ""
}

func (x *BuyResponse) GetCheckoutTokenRequired() bool {
	if x != nil && x.CheckoutTokenRequired != nil {
		return *x.CheckoutTokenRequired
	}
	return false
}

func (x *BuyResponse) GetBaseCheckoutUrl() string {
	if x != nil && x.BaseCheckoutUrl != nil {
		return *x.BaseCheckoutUrl
	}
	return ""
}

func (x *BuyResponse) GetTosCheckboxHtml() []string {
	if x != nil {
		return x.TosCheckboxHtml
	}
	return nil
}

func (x *BuyResponse) GetIabPermissionError() int32 {
	if x != nil && x.IabPermissionError != nil {
		return *x.IabPermissionError
	}
	return 0
}

func (x *BuyResponse) GetPurchaseStatusResponse() *PurchaseStatusResponse {
	if x != nil {
		return x.PurchaseStatusResponse
	}
	return nil
}

func (x *BuyResponse) GetPurchaseCookie() string {
	if x != nil && x.PurchaseCookie != nil {
		return *x.PurchaseCookie
	}
	return ""
}

func (x *BuyResponse) GetChallenge() *Challenge {
	if x != nil {
		return x.Challenge
	}
	return nil
}

func (x *BuyResponse) GetAddInstrumentPromptHtml() string {
	if x != nil && x.AddInstrumentPromptHtml != nil {
		return *x.AddInstrumentPromptHtml
	}
	return ""
}

func (x *BuyResponse) GetConfirmButtonText() string {
	if x != nil && x.ConfirmButtonText != nil {
		return *x.ConfirmButtonText
	}
	return ""
}

func (x *BuyResponse) GetPermissionErrorTitleText() string {
	if x != nil && x.PermissionErrorTitleText != nil {
		return *x.PermissionErrorTitleText
	}
	return ""
}

func (x *BuyResponse) GetPermissionErrorMessageText() string {
	if x != nil && x.PermissionErrorMessageText != nil {
		return *x.PermissionErrorMessageText
	}
	return ""
}

func (x *BuyResponse) GetServerLogsCookie() []byte {
	if x != nil {
		return x.ServerLogsCookie
	}
	return nil
}

func (x *BuyResponse) GetEncodedDeliveryToken() string {
	if x != nil && x.EncodedDeliveryToken != nil {
		return *x.EncodedDeliveryToken
	}
	return ""
}

func (x *BuyResponse) GetUnknownToken() string {
	if x != nil && x.UnknownToken != nil {
		return *x.UnknownToken
	}
	return ""
}

type LineItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name        *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Description *string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Offer       *Offer  `protobuf:"bytes,3,opt,name=offer" json:"offer,omitempty"`
	Amount      *Money  `protobuf:"bytes,4,opt,name=amount" json:"amount,omitempty"`
}

func (x *LineItem) Reset() {
	*x = LineItem{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LineItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LineItem) ProtoMessage() {}

func (x *LineItem) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LineItem.ProtoReflect.Descriptor instead.
func (*LineItem) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{12}
}

func (x *LineItem) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *LineItem) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *LineItem) GetOffer() *Offer {
	if x != nil {
		return x.Offer
	}
	return nil
}

func (x *LineItem) GetAmount() *Money {
	if x != nil {
		return x.Amount
	}
	return nil
}

type Money struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Micros          *int64  `protobuf:"varint,1,opt,name=micros" json:"micros,omitempty"`
	CurrencyCode    *string `protobuf:"bytes,2,opt,name=currencyCode" json:"currencyCode,omitempty"`
	FormattedAmount *string `protobuf:"bytes,3,opt,name=formattedAmount" json:"formattedAmount,omitempty"`
}

func (x *Money) Reset() {
	*x = Money{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Money) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Money) ProtoMessage() {}

func (x *Money) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Money.ProtoReflect.Descriptor instead.
func (*Money) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{13}
}

func (x *Money) GetMicros() int64 {
	if x != nil && x.Micros != nil {
		return *x.Micros
	}
	return 0
}

func (x *Money) GetCurrencyCode() string {
	if x != nil && x.CurrencyCode != nil {
		return *x.CurrencyCode
	}
	return ""
}

func (x *Money) GetFormattedAmount() string {
	if x != nil && x.FormattedAmount != nil {
		return *x.FormattedAmount
	}
	return ""
}

type PurchaseNotificationResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status                *int32     `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	DebugInfo             *DebugInfo `protobuf:"bytes,2,opt,name=debugInfo" json:"debugInfo,omitempty"`
	LocalizedErrorMessage *string    `protobuf:"bytes,3,opt,name=localizedErrorMessage" json:"localizedErrorMessage,omitempty"`
	PurchaseId            *string    `protobuf:"bytes,4,opt,name=purchaseId" json:"purchaseId,omitempty"`
}

func (x *PurchaseNotificationResponse) Reset() {
	*x = PurchaseNotificationResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseNotificationResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseNotificationResponse) ProtoMessage() {}

func (x *PurchaseNotificationResponse) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseNotificationResponse.ProtoReflect.Descriptor instead.
func (*PurchaseNotificationResponse) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{14}
}

func (x *PurchaseNotificationResponse) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *PurchaseNotificationResponse) GetDebugInfo() *DebugInfo {
	if x != nil {
		return x.DebugInfo
	}
	return nil
}

func (x *PurchaseNotificationResponse) GetLocalizedErrorMessage() string {
	if x != nil && x.LocalizedErrorMessage != nil {
		return *x.LocalizedErrorMessage
	}
	return ""
}

func (x *PurchaseNotificationResponse) GetPurchaseId() string {
	if x != nil && x.PurchaseId != nil {
		return *x.PurchaseId
	}
	return ""
}

type PurchaseStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          *int32                  `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	StatusMsg       *string                 `protobuf:"bytes,2,opt,name=statusMsg" json:"statusMsg,omitempty"`
	StatusTitle     *string                 `protobuf:"bytes,3,opt,name=statusTitle" json:"statusTitle,omitempty"`
	BriefMessage    *string                 `protobuf:"bytes,4,opt,name=briefMessage" json:"briefMessage,omitempty"`
	InfoUrl         *string                 `protobuf:"bytes,5,opt,name=infoUrl" json:"infoUrl,omitempty"`
	LibraryUpdate   *LibraryUpdate          `protobuf:"bytes,6,opt,name=libraryUpdate" json:"libraryUpdate,omitempty"`
	AppDeliveryData *AndroidAppDeliveryData `protobuf:"bytes,8,opt,name=appDeliveryData" json:"appDeliveryData,omitempty"`
}

func (x *PurchaseStatusResponse) Reset() {
	*x = PurchaseStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseStatusResponse) ProtoMessage() {}

func (x *PurchaseStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseStatusResponse.ProtoReflect.Descriptor instead.
func (*PurchaseStatusResponse) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{15}
}

func (x *PurchaseStatusResponse) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *PurchaseStatusResponse) GetStatusMsg() string {
	if x != nil && x.StatusMsg != nil {
		return *x.StatusMsg
	}
	return ""
}

func (x *PurchaseStatusResponse) GetStatusTitle() string {
	if x != nil && x.StatusTitle != nil {
		return *x.StatusTitle
	}
	return ""
}

func (x *PurchaseStatusResponse) GetBriefMessage() string {
	if x != nil && x.BriefMessage != nil {
		return *x.BriefMessage
	}
	return ""
}

func (x *PurchaseStatusResponse) GetInfoUrl() string {
	if x != nil && x.InfoUrl != nil {
		return *x.InfoUrl
	}
	return ""
}

func (x *PurchaseStatusResponse) GetLibraryUpdate() *LibraryUpdate {
	if x != nil {
		return x.LibraryUpdate
	}
	return nil
}

func (x *PurchaseStatusResponse) GetAppDeliveryData() *AndroidAppDeliveryData {
	if x != nil {
		return x.AppDeliveryData
	}
	return nil
}

type PurchaseHistoryDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PurchaseTimestampMillis *int64  `protobuf:"varint,2,opt,name=purchaseTimestampMillis" json:"purchaseTimestampMillis,omitempty"`
	PurchaseDetailsHtml     *string `protobuf:"bytes,3,opt,name=purchaseDetailsHtml" json:"purchaseDetailsHtml,omitempty"`
	Offer                   *Offer  `protobuf:"bytes,5,opt,name=offer" json:"offer,omitempty"`
	PurchaseStatus          *string `protobuf:"bytes,6,opt,name=purchaseStatus" json:"purchaseStatus,omitempty"`
	TitleBylineHtml         *string `protobuf:"bytes,7,opt,name=titleBylineHtml" json:"titleBylineHtml,omitempty"`
	ClientRefundContext     []byte  `protobuf:"bytes,8,opt,name=clientRefundContext" json:"clientRefundContext,omitempty"`
	PurchaseDetailsImage    *Image  `protobuf:"bytes,9,opt,name=purchaseDetailsImage" json:"purchaseDetailsImage,omitempty"`
}

func (x *PurchaseHistoryDetails) Reset() {
	*x = PurchaseHistoryDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PurchaseHistoryDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PurchaseHistoryDetails) ProtoMessage() {}

func (x *PurchaseHistoryDetails) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PurchaseHistoryDetails.ProtoReflect.Descriptor instead.
func (*PurchaseHistoryDetails) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{16}
}

func (x *PurchaseHistoryDetails) GetPurchaseTimestampMillis() int64 {
	if x != nil && x.PurchaseTimestampMillis != nil {
		return *x.PurchaseTimestampMillis
	}
	return 0
}

func (x *PurchaseHistoryDetails) GetPurchaseDetailsHtml() string {
	if x != nil && x.PurchaseDetailsHtml != nil {
		return *x.PurchaseDetailsHtml
	}
	return ""
}

func (x *PurchaseHistoryDetails) GetOffer() *Offer {
	if x != nil {
		return x.Offer
	}
	return nil
}

func (x *PurchaseHistoryDetails) GetPurchaseStatus() string {
	if x != nil && x.PurchaseStatus != nil {
		return *x.PurchaseStatus
	}
	return ""
}

func (x *PurchaseHistoryDetails) GetTitleBylineHtml() string {
	if x != nil && x.TitleBylineHtml != nil {
		return *x.TitleBylineHtml
	}
	return ""
}

func (x *PurchaseHistoryDetails) GetClientRefundContext() []byte {
	if x != nil {
		return x.ClientRefundContext
	}
	return nil
}

func (x *PurchaseHistoryDetails) GetPurchaseDetailsImage() *Image {
	if x != nil {
		return x.PurchaseDetailsImage
	}
	return nil
}

type AddressChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ResponseAddressParam    *string                 `protobuf:"bytes,1,opt,name=responseAddressParam" json:"responseAddressParam,omitempty"`
	ResponseCheckboxesParam *string                 `protobuf:"bytes,2,opt,name=responseCheckboxesParam" json:"responseCheckboxesParam,omitempty"`
	Title                   *string                 `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	DescriptionHtml         *string                 `protobuf:"bytes,4,opt,name=descriptionHtml" json:"descriptionHtml,omitempty"`
	Checkbox                []*FormCheckbox         `protobuf:"bytes,5,rep,name=checkbox" json:"checkbox,omitempty"`
	Address                 *Address                `protobuf:"bytes,6,opt,name=address" json:"address,omitempty"`
	ErrorInputField         []*InputValidationError `protobuf:"bytes,7,rep,name=errorInputField" json:"errorInputField,omitempty"`
	ErrorHtml               *string                 `protobuf:"bytes,8,opt,name=errorHtml" json:"errorHtml,omitempty"`
	RequiredField           []int32                 `protobuf:"varint,9,rep,name=requiredField" json:"requiredField,omitempty"`
	SupportedCountry        []*Country              `protobuf:"bytes,10,rep,name=supportedCountry" json:"supportedCountry,omitempty"`
}

func (x *AddressChallenge) Reset() {
	*x = AddressChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AddressChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AddressChallenge) ProtoMessage() {}

func (x *AddressChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AddressChallenge.ProtoReflect.Descriptor instead.
func (*AddressChallenge) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{17}
}

func (x *AddressChallenge) GetResponseAddressParam() string {
	if x != nil && x.ResponseAddressParam != nil {
		return *x.ResponseAddressParam
	}
	return ""
}

func (x *AddressChallenge) GetResponseCheckboxesParam() string {
	if x != nil && x.ResponseCheckboxesParam != nil {
		return *x.ResponseCheckboxesParam
	}
	return ""
}

func (x *AddressChallenge) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *AddressChallenge) GetDescriptionHtml() string {
	if x != nil && x.DescriptionHtml != nil {
		return *x.DescriptionHtml
	}
	return ""
}

func (x *AddressChallenge) GetCheckbox() []*FormCheckbox {
	if x != nil {
		return x.Checkbox
	}
	return nil
}

func (x *AddressChallenge) GetAddress() *Address {
	if x != nil {
		return x.Address
	}
	return nil
}

func (x *AddressChallenge) GetErrorInputField() []*InputValidationError {
	if x != nil {
		return x.ErrorInputField
	}
	return nil
}

func (x *AddressChallenge) GetErrorHtml() string {
	if x != nil && x.ErrorHtml != nil {
		return *x.ErrorHtml
	}
	return ""
}

func (x *AddressChallenge) GetRequiredField() []int32 {
	if x != nil {
		return x.RequiredField
	}
	return nil
}

func (x *AddressChallenge) GetSupportedCountry() []*Country {
	if x != nil {
		return x.SupportedCountry
	}
	return nil
}

type AuthenticationChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AuthenticationType              *int32        `protobuf:"varint,1,opt,name=authenticationType" json:"authenticationType,omitempty"`
	ResponseAuthenticationTypeParam *string       `protobuf:"bytes,2,opt,name=responseAuthenticationTypeParam" json:"responseAuthenticationTypeParam,omitempty"`
	ResponseRetryCountParam         *string       `protobuf:"bytes,3,opt,name=responseRetryCountParam" json:"responseRetryCountParam,omitempty"`
	PinHeaderText                   *string       `protobuf:"bytes,4,opt,name=pinHeaderText" json:"pinHeaderText,omitempty"`
	PinDescriptionTextHtml          *string       `protobuf:"bytes,5,opt,name=pinDescriptionTextHtml" json:"pinDescriptionTextHtml,omitempty"`
	GaiaHeaderText                  *string       `protobuf:"bytes,6,opt,name=gaiaHeaderText" json:"gaiaHeaderText,omitempty"`
	GaiaDescriptionTextHtml         *string       `protobuf:"bytes,7,opt,name=gaiaDescriptionTextHtml" json:"gaiaDescriptionTextHtml,omitempty"`
	GaiaFooterTextHtml              *string       `protobuf:"bytes,8,opt,name=gaiaFooterTextHtml" json:"gaiaFooterTextHtml,omitempty"`
	GaiaOptOutCheckbox              *FormCheckbox `protobuf:"bytes,9,opt,name=gaiaOptOutCheckbox" json:"gaiaOptOutCheckbox,omitempty"`
	GaiaOptOutDescriptionTextHtml   *string       `protobuf:"bytes,10,opt,name=gaiaOptOutDescriptionTextHtml" json:"gaiaOptOutDescriptionTextHtml,omitempty"`
}

func (x *AuthenticationChallenge) Reset() {
	*x = AuthenticationChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AuthenticationChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AuthenticationChallenge) ProtoMessage() {}

func (x *AuthenticationChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AuthenticationChallenge.ProtoReflect.Descriptor instead.
func (*AuthenticationChallenge) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{18}
}

func (x *AuthenticationChallenge) GetAuthenticationType() int32 {
	if x != nil && x.AuthenticationType != nil {
		return *x.AuthenticationType
	}
	return 0
}

func (x *AuthenticationChallenge) GetResponseAuthenticationTypeParam() string {
	if x != nil && x.ResponseAuthenticationTypeParam != nil {
		return *x.ResponseAuthenticationTypeParam
	}
	return ""
}

func (x *AuthenticationChallenge) GetResponseRetryCountParam() string {
	if x != nil && x.ResponseRetryCountParam != nil {
		return *x.ResponseRetryCountParam
	}
	return ""
}

func (x *AuthenticationChallenge) GetPinHeaderText() string {
	if x != nil && x.PinHeaderText != nil {
		return *x.PinHeaderText
	}
	return ""
}

func (x *AuthenticationChallenge) GetPinDescriptionTextHtml() string {
	if x != nil && x.PinDescriptionTextHtml != nil {
		return *x.PinDescriptionTextHtml
	}
	return ""
}

func (x *AuthenticationChallenge) GetGaiaHeaderText() string {
	if x != nil && x.GaiaHeaderText != nil {
		return *x.GaiaHeaderText
	}
	return ""
}

func (x *AuthenticationChallenge) GetGaiaDescriptionTextHtml() string {
	if x != nil && x.GaiaDescriptionTextHtml != nil {
		return *x.GaiaDescriptionTextHtml
	}
	return ""
}

func (x *AuthenticationChallenge) GetGaiaFooterTextHtml() string {
	if x != nil && x.GaiaFooterTextHtml != nil {
		return *x.GaiaFooterTextHtml
	}
	return ""
}

func (x *AuthenticationChallenge) GetGaiaOptOutCheckbox() *FormCheckbox {
	if x != nil {
		return x.GaiaOptOutCheckbox
	}
	return nil
}

func (x *AuthenticationChallenge) GetGaiaOptOutDescriptionTextHtml() string {
	if x != nil && x.GaiaOptOutDescriptionTextHtml != nil {
		return *x.GaiaOptOutDescriptionTextHtml
	}
	return ""
}

type Challenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AddressChallenge        *AddressChallenge        `protobuf:"bytes,1,opt,name=addressChallenge" json:"addressChallenge,omitempty"`
	AuthenticationChallenge *AuthenticationChallenge `protobuf:"bytes,2,opt,name=authenticationChallenge" json:"authenticationChallenge,omitempty"`
	WebViewChallenge        *WebViewChallenge        `protobuf:"bytes,3,opt,name=webViewChallenge" json:"webViewChallenge,omitempty"`
}

func (x *Challenge) Reset() {
	*x = Challenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Challenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Challenge) ProtoMessage() {}

func (x *Challenge) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Challenge.ProtoReflect.Descriptor instead.
func (*Challenge) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{19}
}

func (x *Challenge) GetAddressChallenge() *AddressChallenge {
	if x != nil {
		return x.AddressChallenge
	}
	return nil
}

func (x *Challenge) GetAuthenticationChallenge() *AuthenticationChallenge {
	if x != nil {
		return x.AuthenticationChallenge
	}
	return nil
}

func (x *Challenge) GetWebViewChallenge() *WebViewChallenge {
	if x != nil {
		return x.WebViewChallenge
	}
	return nil
}

type Country struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RegionCode  *string `protobuf:"bytes,1,opt,name=regionCode" json:"regionCode,omitempty"`
	DisplayName *string `protobuf:"bytes,2,opt,name=displayName" json:"displayName,omitempty"`
}

func (x *Country) Reset() {
	*x = Country{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Country) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Country) ProtoMessage() {}

func (x *Country) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Country.ProtoReflect.Descriptor instead.
func (*Country) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{20}
}

func (x *Country) GetRegionCode() string {
	if x != nil && x.RegionCode != nil {
		return *x.RegionCode
	}
	return ""
}

func (x *Country) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

type FormCheckbox struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Description *string `protobuf:"bytes,1,opt,name=description" json:"description,omitempty"`
	Checked     *bool   `protobuf:"varint,2,opt,name=checked" json:"checked,omitempty"`
	Required    *bool   `protobuf:"varint,3,opt,name=required" json:"required,omitempty"`
	Id          *string `protobuf:"bytes,4,opt,name=id" json:"id,omitempty"`
}

func (x *FormCheckbox) Reset() {
	*x = FormCheckbox{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FormCheckbox) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FormCheckbox) ProtoMessage() {}

func (x *FormCheckbox) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FormCheckbox.ProtoReflect.Descriptor instead.
func (*FormCheckbox) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{21}
}

func (x *FormCheckbox) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *FormCheckbox) GetChecked() bool {
	if x != nil && x.Checked != nil {
		return *x.Checked
	}
	return false
}

func (x *FormCheckbox) GetRequired() bool {
	if x != nil && x.Required != nil {
		return *x.Required
	}
	return false
}

func (x *FormCheckbox) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

type InputValidationError struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InputField   *int32  `protobuf:"varint,1,opt,name=inputField" json:"inputField,omitempty"`
	ErrorMessage *string `protobuf:"bytes,2,opt,name=errorMessage" json:"errorMessage,omitempty"`
}

func (x *InputValidationError) Reset() {
	*x = InputValidationError{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *InputValidationError) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InputValidationError) ProtoMessage() {}

func (x *InputValidationError) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InputValidationError.ProtoReflect.Descriptor instead.
func (*InputValidationError) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{22}
}

func (x *InputValidationError) GetInputField() int32 {
	if x != nil && x.InputField != nil {
		return *x.InputField
	}
	return 0
}

func (x *InputValidationError) GetErrorMessage() string {
	if x != nil && x.ErrorMessage != nil {
		return *x.ErrorMessage
	}
	return ""
}

type WebViewChallenge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StartUrl                 *string `protobuf:"bytes,1,opt,name=startUrl" json:"startUrl,omitempty"`
	TargetUrlRegexp          *string `protobuf:"bytes,2,opt,name=targetUrlRegexp" json:"targetUrlRegexp,omitempty"`
	CancelButtonDisplayLabel *string `protobuf:"bytes,3,opt,name=cancelButtonDisplayLabel" json:"cancelButtonDisplayLabel,omitempty"`
	ResponseTargetUrlParam   *string `protobuf:"bytes,4,opt,name=responseTargetUrlParam" json:"responseTargetUrlParam,omitempty"`
	CancelUrlRegexp          *string `protobuf:"bytes,5,opt,name=cancelUrlRegexp" json:"cancelUrlRegexp,omitempty"`
	Title                    *string `protobuf:"bytes,6,opt,name=title" json:"title,omitempty"`
}

func (x *WebViewChallenge) Reset() {
	*x = WebViewChallenge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WebViewChallenge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WebViewChallenge) ProtoMessage() {}

func (x *WebViewChallenge) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WebViewChallenge.ProtoReflect.Descriptor instead.
func (*WebViewChallenge) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{23}
}

func (x *WebViewChallenge) GetStartUrl() string {
	if x != nil && x.StartUrl != nil {
		return *x.StartUrl
	}
	return ""
}

func (x *WebViewChallenge) GetTargetUrlRegexp() string {
	if x != nil && x.TargetUrlRegexp != nil {
		return *x.TargetUrlRegexp
	}
	return ""
}

func (x *WebViewChallenge) GetCancelButtonDisplayLabel() string {
	if x != nil && x.CancelButtonDisplayLabel != nil {
		return *x.CancelButtonDisplayLabel
	}
	return ""
}

func (x *WebViewChallenge) GetResponseTargetUrlParam() string {
	if x != nil && x.ResponseTargetUrlParam != nil {
		return *x.ResponseTargetUrlParam
	}
	return ""
}

func (x *WebViewChallenge) GetCancelUrlRegexp() string {
	if x != nil && x.CancelUrlRegexp != nil {
		return *x.CancelUrlRegexp
	}
	return ""
}

func (x *WebViewChallenge) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

type DocId struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BackendDocId *string `protobuf:"bytes,1,opt,name=backendDocId" json:"backendDocId,omitempty"`
	Type         *int32  `protobuf:"varint,2,opt,name=type,def=1" json:"type,omitempty"`
	Backend      *int32  `protobuf:"varint,3,opt,name=backend" json:"backend,omitempty"`
}

// Default values for DocId fields.
const (
	Default_DocId_Type = int32(1)
)

func (x *DocId) Reset() {
	*x = DocId{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocId) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocId) ProtoMessage() {}

func (x *DocId) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocId.ProtoReflect.Descriptor instead.
func (*DocId) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{24}
}

func (x *DocId) GetBackendDocId() string {
	if x != nil && x.BackendDocId != nil {
		return *x.BackendDocId
	}
	return ""
}

func (x *DocId) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return Default_DocId_Type
}

func (x *DocId) GetBackend() int32 {
	if x != nil && x.Backend != nil {
		return *x.Backend
	}
	return 0
}

type Offer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Micros                                *int64             `protobuf:"varint,1,opt,name=micros" json:"micros,omitempty"`
	CurrencyCode                          *string            `protobuf:"bytes,2,opt,name=currencyCode" json:"currencyCode,omitempty"`
	FormattedAmount                       *string            `protobuf:"bytes,3,opt,name=formattedAmount" json:"formattedAmount,omitempty"`
	ConvertedPrice                        []*Offer           `protobuf:"bytes,4,rep,name=convertedPrice" json:"convertedPrice,omitempty"`
	CheckoutFlowRequired                  *bool              `protobuf:"varint,5,opt,name=checkoutFlowRequired" json:"checkoutFlowRequired,omitempty"`
	FullPriceMicros                       *int64             `protobuf:"varint,6,opt,name=fullPriceMicros" json:"fullPriceMicros,omitempty"`
	FormattedFullAmount                   *string            `protobuf:"bytes,7,opt,name=formattedFullAmount" json:"formattedFullAmount,omitempty"`
	OfferType                             *int32             `protobuf:"varint,8,opt,name=offerType,def=1" json:"offerType,omitempty"`
	OnSaleDate                            *int64             `protobuf:"varint,10,opt,name=onSaleDate" json:"onSaleDate,omitempty"`
	PromotionLabel                        []string           `protobuf:"bytes,11,rep,name=promotionLabel" json:"promotionLabel,omitempty"`
	SubscriptionTerms                     *SubscriptionTerms `protobuf:"bytes,12,opt,name=subscriptionTerms" json:"subscriptionTerms,omitempty"`
	FormattedName                         *string            `protobuf:"bytes,13,opt,name=formattedName" json:"formattedName,omitempty"`
	FormattedDescription                  *string            `protobuf:"bytes,14,opt,name=formattedDescription" json:"formattedDescription,omitempty"`
	Preorder                              *bool              `protobuf:"varint,15,opt,name=preorder" json:"preorder,omitempty"`
	OnSaleDateDisplayTimeZoneOffsetMillis *int32             `protobuf:"varint,16,opt,name=onSaleDateDisplayTimeZoneOffsetMillis" json:"onSaleDateDisplayTimeZoneOffsetMillis,omitempty"`
	LicensedOfferType                     *int32             `protobuf:"varint,17,opt,name=licensedOfferType" json:"licensedOfferType,omitempty"`
	OfferId                               *string            `protobuf:"bytes,19,opt,name=offerId" json:"offerId,omitempty"`
	PreorderFulfillmentDisplayDate        *int64             `protobuf:"varint,20,opt,name=preorderFulfillmentDisplayDate" json:"preorderFulfillmentDisplayDate,omitempty"`
	Sale                                  *bool              `protobuf:"varint,22,opt,name=sale" json:"sale,omitempty"`
	RepeatLastPayment                     *bool              `protobuf:"varint,25,opt,name=repeatLastPayment" json:"repeatLastPayment,omitempty"`
	BuyButtonLabel                        *string            `protobuf:"bytes,26,opt,name=buyButtonLabel" json:"buyButtonLabel,omitempty"`
	InstantPurchaseEnabled                *bool              `protobuf:"varint,27,opt,name=instantPurchaseEnabled" json:"instantPurchaseEnabled,omitempty"`
	SaleEndTimestamp                      *int64             `protobuf:"varint,30,opt,name=saleEndTimestamp" json:"saleEndTimestamp,omitempty"`
	SaleMessage                           *string            `protobuf:"bytes,31,opt,name=saleMessage" json:"saleMessage,omitempty"`
}

// Default values for Offer fields.
const (
	Default_Offer_OfferType = int32(1)
)

func (x *Offer) Reset() {
	*x = Offer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Offer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Offer) ProtoMessage() {}

func (x *Offer) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Offer.ProtoReflect.Descriptor instead.
func (*Offer) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{25}
}

func (x *Offer) GetMicros() int64 {
	if x != nil && x.Micros != nil {
		return *x.Micros
	}
	return 0
}

func (x *Offer) GetCurrencyCode() string {
	if x != nil && x.CurrencyCode != nil {
		return *x.CurrencyCode
	}
	return ""
}

func (x *Offer) GetFormattedAmount() string {
	if x != nil && x.FormattedAmount != nil {
		return *x.FormattedAmount
	}
	return ""
}

func (x *Offer) GetConvertedPrice() []*Offer {
	if x != nil {
		return x.ConvertedPrice
	}
	return nil
}

func (x *Offer) GetCheckoutFlowRequired() bool {
	if x != nil && x.CheckoutFlowRequired != nil {
		return *x.CheckoutFlowRequired
	}
	return false
}

func (x *Offer) GetFullPriceMicros() int64 {
	if x != nil && x.FullPriceMicros != nil {
		return *x.FullPriceMicros
	}
	return 0
}

func (x *Offer) GetFormattedFullAmount() string {
	if x != nil && x.FormattedFullAmount != nil {
		return *x.FormattedFullAmount
	}
	return ""
}

func (x *Offer) GetOfferType() int32 {
	if x != nil && x.OfferType != nil {
		return *x.OfferType
	}
	return Default_Offer_OfferType
}

func (x *Offer) GetOnSaleDate() int64 {
	if x != nil && x.OnSaleDate != nil {
		return *x.OnSaleDate
	}
	return 0
}

func (x *Offer) GetPromotionLabel() []string {
	if x != nil {
		return x.PromotionLabel
	}
	return nil
}

func (x *Offer) GetSubscriptionTerms() *SubscriptionTerms {
	if x != nil {
		return x.SubscriptionTerms
	}
	return nil
}

func (x *Offer) GetFormattedName() string {
	if x != nil && x.FormattedName != nil {
		return *x.FormattedName
	}
	return ""
}

func (x *Offer) GetFormattedDescription() string {
	if x != nil && x.FormattedDescription != nil {
		return *x.FormattedDescription
	}
	return ""
}

func (x *Offer) GetPreorder() bool {
	if x != nil && x.Preorder != nil {
		return *x.Preorder
	}
	return false
}

func (x *Offer) GetOnSaleDateDisplayTimeZoneOffsetMillis() int32 {
	if x != nil && x.OnSaleDateDisplayTimeZoneOffsetMillis != nil {
		return *x.OnSaleDateDisplayTimeZoneOffsetMillis
	}
	return 0
}

func (x *Offer) GetLicensedOfferType() int32 {
	if x != nil && x.LicensedOfferType != nil {
		return *x.LicensedOfferType
	}
	return 0
}

func (x *Offer) GetOfferId() string {
	if x != nil && x.OfferId != nil {
		return *x.OfferId
	}
	return ""
}

func (x *Offer) GetPreorderFulfillmentDisplayDate() int64 {
	if x != nil && x.PreorderFulfillmentDisplayDate != nil {
		return *x.PreorderFulfillmentDisplayDate
	}
	return 0
}

func (x *Offer) GetSale() bool {
	if x != nil && x.Sale != nil {
		return *x.Sale
	}
	return false
}

func (x *Offer) GetRepeatLastPayment() bool {
	if x != nil && x.RepeatLastPayment != nil {
		return *x.RepeatLastPayment
	}
	return false
}

func (x *Offer) GetBuyButtonLabel() string {
	if x != nil && x.BuyButtonLabel != nil {
		return *x.BuyButtonLabel
	}
	return ""
}

func (x *Offer) GetInstantPurchaseEnabled() bool {
	if x != nil && x.InstantPurchaseEnabled != nil {
		return *x.InstantPurchaseEnabled
	}
	return false
}

func (x *Offer) GetSaleEndTimestamp() int64 {
	if x != nil && x.SaleEndTimestamp != nil {
		return *x.SaleEndTimestamp
	}
	return 0
}

func (x *Offer) GetSaleMessage() string {
	if x != nil && x.SaleMessage != nil {
		return *x.SaleMessage
	}
	return ""
}

type SubscriptionTerms struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RecurringPeriod *TimePeriod `protobuf:"bytes,1,opt,name=recurringPeriod" json:"recurringPeriod,omitempty"`
	TrialPeriod     *TimePeriod `protobuf:"bytes,2,opt,name=trialPeriod" json:"trialPeriod,omitempty"`
}

func (x *SubscriptionTerms) Reset() {
	*x = SubscriptionTerms{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[26]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionTerms) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionTerms) ProtoMessage() {}

func (x *SubscriptionTerms) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[26]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionTerms.ProtoReflect.Descriptor instead.
func (*SubscriptionTerms) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{26}
}

func (x *SubscriptionTerms) GetRecurringPeriod() *TimePeriod {
	if x != nil {
		return x.RecurringPeriod
	}
	return nil
}

func (x *SubscriptionTerms) GetTrialPeriod() *TimePeriod {
	if x != nil {
		return x.TrialPeriod
	}
	return nil
}

type TimePeriod struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unit  *int32 `protobuf:"varint,1,opt,name=unit" json:"unit,omitempty"`
	Count *int32 `protobuf:"varint,2,opt,name=count" json:"count,omitempty"`
}

func (x *TimePeriod) Reset() {
	*x = TimePeriod{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[27]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TimePeriod) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TimePeriod) ProtoMessage() {}

func (x *TimePeriod) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[27]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TimePeriod.ProtoReflect.Descriptor instead.
func (*TimePeriod) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{27}
}

func (x *TimePeriod) GetUnit() int32 {
	if x != nil && x.Unit != nil {
		return *x.Unit
	}
	return 0
}

func (x *TimePeriod) GetCount() int32 {
	if x != nil && x.Count != nil {
		return *x.Count
	}
	return 0
}

type ConsumePurchaseResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LibraryUpdate *LibraryUpdate `protobuf:"bytes,1,opt,name=libraryUpdate" json:"libraryUpdate,omitempty"`
	Status        *int32         `protobuf:"varint,2,opt,name=status" json:"status,omitempty"`
}

func (x *ConsumePurchaseResponse) Reset() {
	*x = ConsumePurchaseResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[28]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ConsumePurchaseResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConsumePurchaseResponse) ProtoMessage() {}

func (x *ConsumePurchaseResponse) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[28]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConsumePurchaseResponse.ProtoReflect.Descriptor instead.
func (*ConsumePurchaseResponse) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{28}
}

func (x *ConsumePurchaseResponse) GetLibraryUpdate() *LibraryUpdate {
	if x != nil {
		return x.LibraryUpdate
	}
	return nil
}

func (x *ConsumePurchaseResponse) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

type ContainerMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BrowseUrl        *string          `protobuf:"bytes,1,opt,name=browseUrl" json:"browseUrl,omitempty"`
	NextPageUrl      *string          `protobuf:"bytes,2,opt,name=nextPageUrl" json:"nextPageUrl,omitempty"`
	Relevance        *float64         `protobuf:"fixed64,3,opt,name=relevance" json:"relevance,omitempty"`
	EstimatedResults *int64           `protobuf:"varint,4,opt,name=estimatedResults" json:"estimatedResults,omitempty"`
	AnalyticsCookie  *string          `protobuf:"bytes,5,opt,name=analyticsCookie" json:"analyticsCookie,omitempty"`
	Ordered          *bool            `protobuf:"varint,6,opt,name=ordered" json:"ordered,omitempty"`
	ContainerView    []*ContainerView `protobuf:"bytes,7,rep,name=containerView" json:"containerView,omitempty"`
	LeftIcon         *Image           `protobuf:"bytes,8,opt,name=leftIcon" json:"leftIcon,omitempty"`
}

func (x *ContainerMetadata) Reset() {
	*x = ContainerMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[29]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerMetadata) ProtoMessage() {}

func (x *ContainerMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[29]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerMetadata.ProtoReflect.Descriptor instead.
func (*ContainerMetadata) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{29}
}

func (x *ContainerMetadata) GetBrowseUrl() string {
	if x != nil && x.BrowseUrl != nil {
		return *x.BrowseUrl
	}
	return ""
}

func (x *ContainerMetadata) GetNextPageUrl() string {
	if x != nil && x.NextPageUrl != nil {
		return *x.NextPageUrl
	}
	return ""
}

func (x *ContainerMetadata) GetRelevance() float64 {
	if x != nil && x.Relevance != nil {
		return *x.Relevance
	}
	return 0
}

func (x *ContainerMetadata) GetEstimatedResults() int64 {
	if x != nil && x.EstimatedResults != nil {
		return *x.EstimatedResults
	}
	return 0
}

func (x *ContainerMetadata) GetAnalyticsCookie() string {
	if x != nil && x.AnalyticsCookie != nil {
		return *x.AnalyticsCookie
	}
	return ""
}

func (x *ContainerMetadata) GetOrdered() bool {
	if x != nil && x.Ordered != nil {
		return *x.Ordered
	}
	return false
}

func (x *ContainerMetadata) GetContainerView() []*ContainerView {
	if x != nil {
		return x.ContainerView
	}
	return nil
}

func (x *ContainerMetadata) GetLeftIcon() *Image {
	if x != nil {
		return x.LeftIcon
	}
	return nil
}

type ContainerView struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Selected         *bool   `protobuf:"varint,1,opt,name=selected" json:"selected,omitempty"`
	Title            *string `protobuf:"bytes,2,opt,name=title" json:"title,omitempty"`
	ListUrl          *string `protobuf:"bytes,3,opt,name=listUrl" json:"listUrl,omitempty"`
	ServerLogsCookie []byte  `protobuf:"bytes,4,opt,name=serverLogsCookie" json:"serverLogsCookie,omitempty"`
}

func (x *ContainerView) Reset() {
	*x = ContainerView{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[30]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ContainerView) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ContainerView) ProtoMessage() {}

func (x *ContainerView) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[30]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ContainerView.ProtoReflect.Descriptor instead.
func (*ContainerView) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{30}
}

func (x *ContainerView) GetSelected() bool {
	if x != nil && x.Selected != nil {
		return *x.Selected
	}
	return false
}

func (x *ContainerView) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *ContainerView) GetListUrl() string {
	if x != nil && x.ListUrl != nil {
		return *x.ListUrl
	}
	return ""
}

func (x *ContainerView) GetServerLogsCookie() []byte {
	if x != nil {
		return x.ServerLogsCookie
	}
	return nil
}

type DebugInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Message []string            `protobuf:"bytes,1,rep,name=message" json:"message,omitempty"`
	Timing  []*DebugInfo_Timing `protobuf:"group,2,rep,name=Timing,json=timing" json:"timing,omitempty"`
}

func (x *DebugInfo) Reset() {
	*x = DebugInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[31]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugInfo) ProtoMessage() {}

func (x *DebugInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[31]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugInfo.ProtoReflect.Descriptor instead.
func (*DebugInfo) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{31}
}

func (x *DebugInfo) GetMessage() []string {
	if x != nil {
		return x.Message
	}
	return nil
}

func (x *DebugInfo) GetTiming() []*DebugInfo_Timing {
	if x != nil {
		return x.Timing
	}
	return nil
}

type DeliveryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status          *int32                  `protobuf:"varint,1,opt,name=status,def=1" json:"status,omitempty"`
	AppDeliveryData *AndroidAppDeliveryData `protobuf:"bytes,2,opt,name=appDeliveryData" json:"appDeliveryData,omitempty"`
}

// Default values for DeliveryResponse fields.
const (
	Default_DeliveryResponse_Status = int32(1)
)

func (x *DeliveryResponse) Reset() {
	*x = DeliveryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[32]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeliveryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeliveryResponse) ProtoMessage() {}

func (x *DeliveryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[32]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeliveryResponse.ProtoReflect.Descriptor instead.
func (*DeliveryResponse) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{32}
}

func (x *DeliveryResponse) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return Default_DeliveryResponse_Status
}

func (x *DeliveryResponse) GetAppDeliveryData() *AndroidAppDeliveryData {
	if x != nil {
		return x.AppDeliveryData
	}
	return nil
}

type BulkDetailsEntry struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item *Item `protobuf:"bytes,1,opt,name=item" json:"item,omitempty"`
}

func (x *BulkDetailsEntry) Reset() {
	*x = BulkDetailsEntry{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[33]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkDetailsEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkDetailsEntry) ProtoMessage() {}

func (x *BulkDetailsEntry) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[33]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkDetailsEntry.ProtoReflect.Descriptor instead.
func (*BulkDetailsEntry) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{33}
}

func (x *BulkDetailsEntry) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

type BulkDetailsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocId                []string `protobuf:"bytes,1,rep,name=DocId" json:"DocId,omitempty"`
	IncludeChildDocs     *bool    `protobuf:"varint,2,opt,name=includeChildDocs,def=1" json:"includeChildDocs,omitempty"`
	IncludeDetails       *bool    `protobuf:"varint,3,opt,name=includeDetails" json:"includeDetails,omitempty"`
	SourcePackageName    *string  `protobuf:"bytes,4,opt,name=sourcePackageName" json:"sourcePackageName,omitempty"`
	InstalledVersionCode []int32  `protobuf:"varint,7,rep,name=installedVersionCode" json:"installedVersionCode,omitempty"`
}

// Default values for BulkDetailsRequest fields.
const (
	Default_BulkDetailsRequest_IncludeChildDocs = bool(true)
)

func (x *BulkDetailsRequest) Reset() {
	*x = BulkDetailsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[34]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkDetailsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkDetailsRequest) ProtoMessage() {}

func (x *BulkDetailsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[34]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkDetailsRequest.ProtoReflect.Descriptor instead.
func (*BulkDetailsRequest) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{34}
}

func (x *BulkDetailsRequest) GetDocId() []string {
	if x != nil {
		return x.DocId
	}
	return nil
}

func (x *BulkDetailsRequest) GetIncludeChildDocs() bool {
	if x != nil && x.IncludeChildDocs != nil {
		return *x.IncludeChildDocs
	}
	return Default_BulkDetailsRequest_IncludeChildDocs
}

func (x *BulkDetailsRequest) GetIncludeDetails() bool {
	if x != nil && x.IncludeDetails != nil {
		return *x.IncludeDetails
	}
	return false
}

func (x *BulkDetailsRequest) GetSourcePackageName() string {
	if x != nil && x.SourcePackageName != nil {
		return *x.SourcePackageName
	}
	return ""
}

func (x *BulkDetailsRequest) GetInstalledVersionCode() []int32 {
	if x != nil {
		return x.InstalledVersionCode
	}
	return nil
}

type BulkDetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Entry []*BulkDetailsEntry `protobuf:"bytes,1,rep,name=entry" json:"entry,omitempty"`
}

func (x *BulkDetailsResponse) Reset() {
	*x = BulkDetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[35]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BulkDetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BulkDetailsResponse) ProtoMessage() {}

func (x *BulkDetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[35]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BulkDetailsResponse.ProtoReflect.Descriptor instead.
func (*BulkDetailsResponse) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{35}
}

func (x *BulkDetailsResponse) GetEntry() []*BulkDetailsEntry {
	if x != nil {
		return x.Entry
	}
	return nil
}

type DetailsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AnalyticsCookie             *string           `protobuf:"bytes,2,opt,name=analyticsCookie" json:"analyticsCookie,omitempty"`
	Item                        *Item             `protobuf:"bytes,4,opt,name=item" json:"item,omitempty"`
	FooterHtml                  *string           `protobuf:"bytes,5,opt,name=footerHtml" json:"footerHtml,omitempty"`
	ServerLogsCookie            []byte            `protobuf:"bytes,6,opt,name=serverLogsCookie" json:"serverLogsCookie,omitempty"`
	DiscoveryBadge              []*DiscoveryBadge `protobuf:"bytes,7,rep,name=discoveryBadge" json:"discoveryBadge,omitempty"`
	EnableReviews               *bool             `protobuf:"varint,8,opt,name=enableReviews,def=1" json:"enableReviews,omitempty"`
	Features                    *Features         `protobuf:"bytes,12,opt,name=features" json:"features,omitempty"`
	DetailsStreamUrl            *string           `protobuf:"bytes,13,opt,name=detailsStreamUrl" json:"detailsStreamUrl,omitempty"`
	UserReviewUrl               *string           `protobuf:"bytes,14,opt,name=userReviewUrl" json:"userReviewUrl,omitempty"`
	PostAcquireDetailsStreamUrl *string           `protobuf:"bytes,17,opt,name=postAcquireDetailsStreamUrl" json:"postAcquireDetailsStreamUrl,omitempty"`
}

// Default values for DetailsResponse fields.
const (
	Default_DetailsResponse_EnableReviews = bool(true)
)

func (x *DetailsResponse) Reset() {
	*x = DetailsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[36]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DetailsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DetailsResponse) ProtoMessage() {}

func (x *DetailsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[36]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DetailsResponse.ProtoReflect.Descriptor instead.
func (*DetailsResponse) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{36}
}

func (x *DetailsResponse) GetAnalyticsCookie() string {
	if x != nil && x.AnalyticsCookie != nil {
		return *x.AnalyticsCookie
	}
	return ""
}

func (x *DetailsResponse) GetItem() *Item {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *DetailsResponse) GetFooterHtml() string {
	if x != nil && x.FooterHtml != nil {
		return *x.FooterHtml
	}
	return ""
}

func (x *DetailsResponse) GetServerLogsCookie() []byte {
	if x != nil {
		return x.ServerLogsCookie
	}
	return nil
}

func (x *DetailsResponse) GetDiscoveryBadge() []*DiscoveryBadge {
	if x != nil {
		return x.DiscoveryBadge
	}
	return nil
}

func (x *DetailsResponse) GetEnableReviews() bool {
	if x != nil && x.EnableReviews != nil {
		return *x.EnableReviews
	}
	return Default_DetailsResponse_EnableReviews
}

func (x *DetailsResponse) GetFeatures() *Features {
	if x != nil {
		return x.Features
	}
	return nil
}

func (x *DetailsResponse) GetDetailsStreamUrl() string {
	if x != nil && x.DetailsStreamUrl != nil {
		return *x.DetailsStreamUrl
	}
	return ""
}

func (x *DetailsResponse) GetUserReviewUrl() string {
	if x != nil && x.UserReviewUrl != nil {
		return *x.UserReviewUrl
	}
	return ""
}

func (x *DetailsResponse) GetPostAcquireDetailsStreamUrl() string {
	if x != nil && x.PostAcquireDetailsStreamUrl != nil {
		return *x.PostAcquireDetailsStreamUrl
	}
	return ""
}

type DiscoveryBadge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label              *string             `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	Image              *Image              `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"`
	BackgroundColor    *int32              `protobuf:"varint,3,opt,name=backgroundColor" json:"backgroundColor,omitempty"`
	BadgeContainer1    *DiscoveryBadgeLink `protobuf:"bytes,4,opt,name=badgeContainer1" json:"badgeContainer1,omitempty"`
	ServerLogsCookie   []byte              `protobuf:"bytes,5,opt,name=serverLogsCookie" json:"serverLogsCookie,omitempty"`
	IsPlusOne          *bool               `protobuf:"varint,6,opt,name=isPlusOne" json:"isPlusOne,omitempty"`
	AggregateRating    *float32            `protobuf:"fixed32,7,opt,name=aggregateRating" json:"aggregateRating,omitempty"`
	UserStarRating     *int32              `protobuf:"varint,8,opt,name=userStarRating" json:"userStarRating,omitempty"`
	DownloadCount      *string             `protobuf:"bytes,9,opt,name=downloadCount" json:"downloadCount,omitempty"`
	DownloadUnits      *string             `protobuf:"bytes,10,opt,name=downloadUnits" json:"downloadUnits,omitempty"`
	ContentDescription *string             `protobuf:"bytes,11,opt,name=contentDescription" json:"contentDescription,omitempty"`
}

func (x *DiscoveryBadge) Reset() {
	*x = DiscoveryBadge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[37]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoveryBadge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryBadge) ProtoMessage() {}

func (x *DiscoveryBadge) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[37]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryBadge.ProtoReflect.Descriptor instead.
func (*DiscoveryBadge) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{37}
}

func (x *DiscoveryBadge) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *DiscoveryBadge) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *DiscoveryBadge) GetBackgroundColor() int32 {
	if x != nil && x.BackgroundColor != nil {
		return *x.BackgroundColor
	}
	return 0
}

func (x *DiscoveryBadge) GetBadgeContainer1() *DiscoveryBadgeLink {
	if x != nil {
		return x.BadgeContainer1
	}
	return nil
}

func (x *DiscoveryBadge) GetServerLogsCookie() []byte {
	if x != nil {
		return x.ServerLogsCookie
	}
	return nil
}

func (x *DiscoveryBadge) GetIsPlusOne() bool {
	if x != nil && x.IsPlusOne != nil {
		return *x.IsPlusOne
	}
	return false
}

func (x *DiscoveryBadge) GetAggregateRating() float32 {
	if x != nil && x.AggregateRating != nil {
		return *x.AggregateRating
	}
	return 0
}

func (x *DiscoveryBadge) GetUserStarRating() int32 {
	if x != nil && x.UserStarRating != nil {
		return *x.UserStarRating
	}
	return 0
}

func (x *DiscoveryBadge) GetDownloadCount() string {
	if x != nil && x.DownloadCount != nil {
		return *x.DownloadCount
	}
	return ""
}

func (x *DiscoveryBadge) GetDownloadUnits() string {
	if x != nil && x.DownloadUnits != nil {
		return *x.DownloadUnits
	}
	return ""
}

func (x *DiscoveryBadge) GetContentDescription() string {
	if x != nil && x.ContentDescription != nil {
		return *x.ContentDescription
	}
	return ""
}

type DiscoveryBadgeLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Link             *Link   `protobuf:"bytes,1,opt,name=link" json:"link,omitempty"`
	UserReviewsUrl   *string `protobuf:"bytes,2,opt,name=userReviewsUrl" json:"userReviewsUrl,omitempty"`
	CriticReviewsUrl *string `protobuf:"bytes,3,opt,name=criticReviewsUrl" json:"criticReviewsUrl,omitempty"`
}

func (x *DiscoveryBadgeLink) Reset() {
	*x = DiscoveryBadgeLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[38]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DiscoveryBadgeLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiscoveryBadgeLink) ProtoMessage() {}

func (x *DiscoveryBadgeLink) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[38]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiscoveryBadgeLink.ProtoReflect.Descriptor instead.
func (*DiscoveryBadgeLink) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{38}
}

func (x *DiscoveryBadgeLink) GetLink() *Link {
	if x != nil {
		return x.Link
	}
	return nil
}

func (x *DiscoveryBadgeLink) GetUserReviewsUrl() string {
	if x != nil && x.UserReviewsUrl != nil {
		return *x.UserReviewsUrl
	}
	return ""
}

func (x *DiscoveryBadgeLink) GetCriticReviewsUrl() string {
	if x != nil && x.CriticReviewsUrl != nil {
		return *x.CriticReviewsUrl
	}
	return ""
}

type Features struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FeaturePresence []*Feature `protobuf:"bytes,1,rep,name=featurePresence" json:"featurePresence,omitempty"`
	FeatureRating   []*Feature `protobuf:"bytes,2,rep,name=featureRating" json:"featureRating,omitempty"`
}

func (x *Features) Reset() {
	*x = Features{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[39]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Features) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Features) ProtoMessage() {}

func (x *Features) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[39]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Features.ProtoReflect.Descriptor instead.
func (*Features) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{39}
}

func (x *Features) GetFeaturePresence() []*Feature {
	if x != nil {
		return x.FeaturePresence
	}
	return nil
}

func (x *Features) GetFeatureRating() []*Feature {
	if x != nil {
		return x.FeatureRating
	}
	return nil
}

type Feature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label *string `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	Value *string `protobuf:"bytes,3,opt,name=value" json:"value,omitempty"`
}

func (x *Feature) Reset() {
	*x = Feature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[40]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Feature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Feature) ProtoMessage() {}

func (x *Feature) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[40]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Feature.ProtoReflect.Descriptor instead.
func (*Feature) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{40}
}

func (x *Feature) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *Feature) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

type DeviceConfigurationProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TouchScreen            *int32           `protobuf:"varint,1,opt,name=touchScreen" json:"touchScreen,omitempty"`
	Keyboard               *int32           `protobuf:"varint,2,opt,name=keyboard" json:"keyboard,omitempty"`
	Navigation             *int32           `protobuf:"varint,3,opt,name=navigation" json:"navigation,omitempty"`
	ScreenLayout           *int32           `protobuf:"varint,4,opt,name=screenLayout" json:"screenLayout,omitempty"`
	HasHardKeyboard        *bool            `protobuf:"varint,5,opt,name=hasHardKeyboard" json:"hasHardKeyboard,omitempty"`
	HasFiveWayNavigation   *bool            `protobuf:"varint,6,opt,name=hasFiveWayNavigation" json:"hasFiveWayNavigation,omitempty"`
	ScreenDensity          *int32           `protobuf:"varint,7,opt,name=screenDensity" json:"screenDensity,omitempty"`
	GlEsVersion            *int32           `protobuf:"varint,8,opt,name=glEsVersion" json:"glEsVersion,omitempty"`
	SystemSharedLibrary    []string         `protobuf:"bytes,9,rep,name=systemSharedLibrary" json:"systemSharedLibrary,omitempty"`
	SystemAvailableFeature []string         `protobuf:"bytes,10,rep,name=systemAvailableFeature" json:"systemAvailableFeature,omitempty"`
	NativePlatform         []string         `protobuf:"bytes,11,rep,name=nativePlatform" json:"nativePlatform,omitempty"`
	ScreenWidth            *int32           `protobuf:"varint,12,opt,name=screenWidth" json:"screenWidth,omitempty"`
	ScreenHeight           *int32           `protobuf:"varint,13,opt,name=screenHeight" json:"screenHeight,omitempty"`
	SystemSupportedLocale  []string         `protobuf:"bytes,14,rep,name=systemSupportedLocale" json:"systemSupportedLocale,omitempty"`
	GlExtension            []string         `protobuf:"bytes,15,rep,name=glExtension" json:"glExtension,omitempty"`
	DeviceClass            *int32           `protobuf:"varint,16,opt,name=deviceClass" json:"deviceClass,omitempty"`
	MaxApkDownloadSizeMb   *int32           `protobuf:"varint,17,opt,name=maxApkDownloadSizeMb,def=50" json:"maxApkDownloadSizeMb,omitempty"`
	SmallestScreenWidthDP  *int32           `protobuf:"varint,18,opt,name=smallestScreenWidthDP" json:"smallestScreenWidthDP,omitempty"`
	LowRamDevice           *int32           `protobuf:"varint,19,opt,name=lowRamDevice,def=0" json:"lowRamDevice,omitempty"`
	TotalMemoryBytes       *int64           `protobuf:"varint,20,opt,name=totalMemoryBytes,def=8354971648" json:"totalMemoryBytes,omitempty"`
	MaxNumOf_CPUCores      *int32           `protobuf:"varint,21,opt,name=maxNumOf_CPUCores,json=maxNumOfCPUCores,def=8" json:"maxNumOf_CPUCores,omitempty"`
	DeviceFeature          []*DeviceFeature `protobuf:"bytes,26,rep,name=deviceFeature" json:"deviceFeature,omitempty"`
	Unknown28              *int32           `protobuf:"varint,28,opt,name=unknown28,def=0" json:"unknown28,omitempty"`
	Unknown30              *int32           `protobuf:"varint,30,opt,name=unknown30,def=4" json:"unknown30,omitempty"`
}

// Default values for DeviceConfigurationProto fields.
const (
	Default_DeviceConfigurationProto_MaxApkDownloadSizeMb = int32(50)
	Default_DeviceConfigurationProto_LowRamDevice         = int32(0)
	Default_DeviceConfigurationProto_TotalMemoryBytes     = int64(8354971648)
	Default_DeviceConfigurationProto_MaxNumOf_CPUCores    = int32(8)
	Default_DeviceConfigurationProto_Unknown28            = int32(0)
	Default_DeviceConfigurationProto_Unknown30            = int32(4)
)

func (x *DeviceConfigurationProto) Reset() {
	*x = DeviceConfigurationProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[41]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceConfigurationProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceConfigurationProto) ProtoMessage() {}

func (x *DeviceConfigurationProto) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[41]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceConfigurationProto.ProtoReflect.Descriptor instead.
func (*DeviceConfigurationProto) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{41}
}

func (x *DeviceConfigurationProto) GetTouchScreen() int32 {
	if x != nil && x.TouchScreen != nil {
		return *x.TouchScreen
	}
	return 0
}

func (x *DeviceConfigurationProto) GetKeyboard() int32 {
	if x != nil && x.Keyboard != nil {
		return *x.Keyboard
	}
	return 0
}

func (x *DeviceConfigurationProto) GetNavigation() int32 {
	if x != nil && x.Navigation != nil {
		return *x.Navigation
	}
	return 0
}

func (x *DeviceConfigurationProto) GetScreenLayout() int32 {
	if x != nil && x.ScreenLayout != nil {
		return *x.ScreenLayout
	}
	return 0
}

func (x *DeviceConfigurationProto) GetHasHardKeyboard() bool {
	if x != nil && x.HasHardKeyboard != nil {
		return *x.HasHardKeyboard
	}
	return false
}

func (x *DeviceConfigurationProto) GetHasFiveWayNavigation() bool {
	if x != nil && x.HasFiveWayNavigation != nil {
		return *x.HasFiveWayNavigation
	}
	return false
}

func (x *DeviceConfigurationProto) GetScreenDensity() int32 {
	if x != nil && x.ScreenDensity != nil {
		return *x.ScreenDensity
	}
	return 0
}

func (x *DeviceConfigurationProto) GetGlEsVersion() int32 {
	if x != nil && x.GlEsVersion != nil {
		return *x.GlEsVersion
	}
	return 0
}

func (x *DeviceConfigurationProto) GetSystemSharedLibrary() []string {
	if x != nil {
		return x.SystemSharedLibrary
	}
	return nil
}

func (x *DeviceConfigurationProto) GetSystemAvailableFeature() []string {
	if x != nil {
		return x.SystemAvailableFeature
	}
	return nil
}

func (x *DeviceConfigurationProto) GetNativePlatform() []string {
	if x != nil {
		return x.NativePlatform
	}
	return nil
}

func (x *DeviceConfigurationProto) GetScreenWidth() int32 {
	if x != nil && x.ScreenWidth != nil {
		return *x.ScreenWidth
	}
	return 0
}

func (x *DeviceConfigurationProto) GetScreenHeight() int32 {
	if x != nil && x.ScreenHeight != nil {
		return *x.ScreenHeight
	}
	return 0
}

func (x *DeviceConfigurationProto) GetSystemSupportedLocale() []string {
	if x != nil {
		return x.SystemSupportedLocale
	}
	return nil
}

func (x *DeviceConfigurationProto) GetGlExtension() []string {
	if x != nil {
		return x.GlExtension
	}
	return nil
}

func (x *DeviceConfigurationProto) GetDeviceClass() int32 {
	if x != nil && x.DeviceClass != nil {
		return *x.DeviceClass
	}
	return 0
}

func (x *DeviceConfigurationProto) GetMaxApkDownloadSizeMb() int32 {
	if x != nil && x.MaxApkDownloadSizeMb != nil {
		return *x.MaxApkDownloadSizeMb
	}
	return Default_DeviceConfigurationProto_MaxApkDownloadSizeMb
}

func (x *DeviceConfigurationProto) GetSmallestScreenWidthDP() int32 {
	if x != nil && x.SmallestScreenWidthDP != nil {
		return *x.SmallestScreenWidthDP
	}
	return 0
}

func (x *DeviceConfigurationProto) GetLowRamDevice() int32 {
	if x != nil && x.LowRamDevice != nil {
		return *x.LowRamDevice
	}
	return Default_DeviceConfigurationProto_LowRamDevice
}

func (x *DeviceConfigurationProto) GetTotalMemoryBytes() int64 {
	if x != nil && x.TotalMemoryBytes != nil {
		return *x.TotalMemoryBytes
	}
	return Default_DeviceConfigurationProto_TotalMemoryBytes
}

func (x *DeviceConfigurationProto) GetMaxNumOf_CPUCores() int32 {
	if x != nil && x.MaxNumOf_CPUCores != nil {
		return *x.MaxNumOf_CPUCores
	}
	return Default_DeviceConfigurationProto_MaxNumOf_CPUCores
}

func (x *DeviceConfigurationProto) GetDeviceFeature() []*DeviceFeature {
	if x != nil {
		return x.DeviceFeature
	}
	return nil
}

func (x *DeviceConfigurationProto) GetUnknown28() int32 {
	if x != nil && x.Unknown28 != nil {
		return *x.Unknown28
	}
	return Default_DeviceConfigurationProto_Unknown28
}

func (x *DeviceConfigurationProto) GetUnknown30() int32 {
	if x != nil && x.Unknown30 != nil {
		return *x.Unknown30
	}
	return Default_DeviceConfigurationProto_Unknown30
}

type DeviceFeature struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name  *string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	Value *int32  `protobuf:"varint,2,opt,name=value" json:"value,omitempty"`
}

func (x *DeviceFeature) Reset() {
	*x = DeviceFeature{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[42]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeviceFeature) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeviceFeature) ProtoMessage() {}

func (x *DeviceFeature) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[42]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeviceFeature.ProtoReflect.Descriptor instead.
func (*DeviceFeature) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{42}
}

func (x *DeviceFeature) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DeviceFeature) GetValue() int32 {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return 0
}

type Document struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocId                *DocId             `protobuf:"bytes,1,opt,name=DocId" json:"DocId,omitempty"`
	FetchDocId           *DocId             `protobuf:"bytes,2,opt,name=fetchDocId" json:"fetchDocId,omitempty"`
	SampleDocId          *DocId             `protobuf:"bytes,3,opt,name=sampleDocId" json:"sampleDocId,omitempty"`
	Title                *string            `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Url                  *string            `protobuf:"bytes,5,opt,name=url" json:"url,omitempty"`
	Snippet              []string           `protobuf:"bytes,6,rep,name=snippet" json:"snippet,omitempty"`
	PriceDeprecated      *Offer             `protobuf:"bytes,7,opt,name=priceDeprecated" json:"priceDeprecated,omitempty"`
	Image                []*Image           `protobuf:"bytes,10,rep,name=image" json:"image,omitempty"`
	Child                []*Document        `protobuf:"bytes,11,rep,name=child" json:"child,omitempty"`
	Offer                []*Offer           `protobuf:"bytes,14,rep,name=offer" json:"offer,omitempty"`
	TranslatedSnippet    []*TranslatedText  `protobuf:"bytes,15,rep,name=translatedSnippet" json:"translatedSnippet,omitempty"`
	DocumentVariant      []*DocumentVariant `protobuf:"bytes,16,rep,name=documentVariant" json:"documentVariant,omitempty"`
	CategoryId           []string           `protobuf:"bytes,17,rep,name=categoryId" json:"categoryId,omitempty"`
	Decoration           []*Document        `protobuf:"bytes,18,rep,name=decoration" json:"decoration,omitempty"`
	Parent               []*Document        `protobuf:"bytes,19,rep,name=parent" json:"parent,omitempty"`
	PrivacyPolicyUrl     *string            `protobuf:"bytes,20,opt,name=privacyPolicyUrl" json:"privacyPolicyUrl,omitempty"`
	ConsumptionUrl       *string            `protobuf:"bytes,21,opt,name=consumptionUrl" json:"consumptionUrl,omitempty"`
	EstimatedNumChildren *int32             `protobuf:"varint,22,opt,name=estimatedNumChildren" json:"estimatedNumChildren,omitempty"`
	Subtitle             *string            `protobuf:"bytes,23,opt,name=subtitle" json:"subtitle,omitempty"`
}

func (x *Document) Reset() {
	*x = Document{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[43]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Document) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Document) ProtoMessage() {}

func (x *Document) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[43]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Document.ProtoReflect.Descriptor instead.
func (*Document) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{43}
}

func (x *Document) GetDocId() *DocId {
	if x != nil {
		return x.DocId
	}
	return nil
}

func (x *Document) GetFetchDocId() *DocId {
	if x != nil {
		return x.FetchDocId
	}
	return nil
}

func (x *Document) GetSampleDocId() *DocId {
	if x != nil {
		return x.SampleDocId
	}
	return nil
}

func (x *Document) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Document) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *Document) GetSnippet() []string {
	if x != nil {
		return x.Snippet
	}
	return nil
}

func (x *Document) GetPriceDeprecated() *Offer {
	if x != nil {
		return x.PriceDeprecated
	}
	return nil
}

func (x *Document) GetImage() []*Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Document) GetChild() []*Document {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *Document) GetOffer() []*Offer {
	if x != nil {
		return x.Offer
	}
	return nil
}

func (x *Document) GetTranslatedSnippet() []*TranslatedText {
	if x != nil {
		return x.TranslatedSnippet
	}
	return nil
}

func (x *Document) GetDocumentVariant() []*DocumentVariant {
	if x != nil {
		return x.DocumentVariant
	}
	return nil
}

func (x *Document) GetCategoryId() []string {
	if x != nil {
		return x.CategoryId
	}
	return nil
}

func (x *Document) GetDecoration() []*Document {
	if x != nil {
		return x.Decoration
	}
	return nil
}

func (x *Document) GetParent() []*Document {
	if x != nil {
		return x.Parent
	}
	return nil
}

func (x *Document) GetPrivacyPolicyUrl() string {
	if x != nil && x.PrivacyPolicyUrl != nil {
		return *x.PrivacyPolicyUrl
	}
	return ""
}

func (x *Document) GetConsumptionUrl() string {
	if x != nil && x.ConsumptionUrl != nil {
		return *x.ConsumptionUrl
	}
	return ""
}

func (x *Document) GetEstimatedNumChildren() int32 {
	if x != nil && x.EstimatedNumChildren != nil {
		return *x.EstimatedNumChildren
	}
	return 0
}

func (x *Document) GetSubtitle() string {
	if x != nil && x.Subtitle != nil {
		return *x.Subtitle
	}
	return ""
}

type DocumentVariant struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	VariationType   *int32            `protobuf:"varint,1,opt,name=variationType" json:"variationType,omitempty"`
	Title           *string           `protobuf:"bytes,3,opt,name=title" json:"title,omitempty"`
	Snippet         []string          `protobuf:"bytes,4,rep,name=snippet" json:"snippet,omitempty"`
	RecentChanges   *string           `protobuf:"bytes,5,opt,name=recentChanges" json:"recentChanges,omitempty"`
	AutoTranslation []*TranslatedText `protobuf:"bytes,6,rep,name=autoTranslation" json:"autoTranslation,omitempty"`
	Offer           []*Offer          `protobuf:"bytes,7,rep,name=offer" json:"offer,omitempty"`
	ChannelId       *int64            `protobuf:"varint,9,opt,name=channelId" json:"channelId,omitempty"`
	Child           []*Document       `protobuf:"bytes,10,rep,name=child" json:"child,omitempty"`
	Decoration      []*Document       `protobuf:"bytes,11,rep,name=decoration" json:"decoration,omitempty"`
	Image           []*Image          `protobuf:"bytes,12,rep,name=image" json:"image,omitempty"`
	CategoryId      []string          `protobuf:"bytes,13,rep,name=categoryId" json:"categoryId,omitempty"`
	Subtitle        *string           `protobuf:"bytes,14,opt,name=subtitle" json:"subtitle,omitempty"`
}

func (x *DocumentVariant) Reset() {
	*x = DocumentVariant{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[44]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentVariant) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentVariant) ProtoMessage() {}

func (x *DocumentVariant) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[44]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentVariant.ProtoReflect.Descriptor instead.
func (*DocumentVariant) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{44}
}

func (x *DocumentVariant) GetVariationType() int32 {
	if x != nil && x.VariationType != nil {
		return *x.VariationType
	}
	return 0
}

func (x *DocumentVariant) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *DocumentVariant) GetSnippet() []string {
	if x != nil {
		return x.Snippet
	}
	return nil
}

func (x *DocumentVariant) GetRecentChanges() string {
	if x != nil && x.RecentChanges != nil {
		return *x.RecentChanges
	}
	return ""
}

func (x *DocumentVariant) GetAutoTranslation() []*TranslatedText {
	if x != nil {
		return x.AutoTranslation
	}
	return nil
}

func (x *DocumentVariant) GetOffer() []*Offer {
	if x != nil {
		return x.Offer
	}
	return nil
}

func (x *DocumentVariant) GetChannelId() int64 {
	if x != nil && x.ChannelId != nil {
		return *x.ChannelId
	}
	return 0
}

func (x *DocumentVariant) GetChild() []*Document {
	if x != nil {
		return x.Child
	}
	return nil
}

func (x *DocumentVariant) GetDecoration() []*Document {
	if x != nil {
		return x.Decoration
	}
	return nil
}

func (x *DocumentVariant) GetImage() []*Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *DocumentVariant) GetCategoryId() []string {
	if x != nil {
		return x.CategoryId
	}
	return nil
}

func (x *DocumentVariant) GetSubtitle() string {
	if x != nil && x.Subtitle != nil {
		return *x.Subtitle
	}
	return ""
}

type SectionImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageContainer []*ImageContainer `protobuf:"bytes,1,rep,name=imageContainer" json:"imageContainer,omitempty"`
}

func (x *SectionImage) Reset() {
	*x = SectionImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[45]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SectionImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SectionImage) ProtoMessage() {}

func (x *SectionImage) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[45]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SectionImage.ProtoReflect.Descriptor instead.
func (*SectionImage) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{45}
}

func (x *SectionImage) GetImageContainer() []*ImageContainer {
	if x != nil {
		return x.ImageContainer
	}
	return nil
}

type ImageContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image *Image `protobuf:"bytes,4,opt,name=image" json:"image,omitempty"`
}

func (x *ImageContainer) Reset() {
	*x = ImageContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[46]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImageContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageContainer) ProtoMessage() {}

func (x *ImageContainer) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[46]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageContainer.ProtoReflect.Descriptor instead.
func (*ImageContainer) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{46}
}

func (x *ImageContainer) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

type Image struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageType                  *int32           `protobuf:"varint,1,opt,name=imageType" json:"imageType,omitempty"`
	Dimension                  *Image_Dimension `protobuf:"group,2,opt,name=Dimension,json=dimension" json:"dimension,omitempty"`
	ImageUrl                   *string          `protobuf:"bytes,5,opt,name=imageUrl" json:"imageUrl,omitempty"`
	AltTextLocalized           *string          `protobuf:"bytes,6,opt,name=altTextLocalized" json:"altTextLocalized,omitempty"`
	SecureUrl                  *string          `protobuf:"bytes,7,opt,name=secureUrl" json:"secureUrl,omitempty"`
	PositionInSequence         *int32           `protobuf:"varint,8,opt,name=positionInSequence" json:"positionInSequence,omitempty"`
	SupportsFifeUrlOptions     *bool            `protobuf:"varint,9,opt,name=supportsFifeUrlOptions" json:"supportsFifeUrlOptions,omitempty"`
	Citation                   *Image_Citation  `protobuf:"group,10,opt,name=Citation,json=citation" json:"citation,omitempty"`
	DurationSeconds            *int32           `protobuf:"varint,14,opt,name=durationSeconds" json:"durationSeconds,omitempty"`
	FillColorRGB               *string          `protobuf:"bytes,15,opt,name=fillColorRGB" json:"fillColorRGB,omitempty"`
	Autogen                    *bool            `protobuf:"varint,16,opt,name=autogen" json:"autogen,omitempty"`
	Attribution                *Attribution     `protobuf:"bytes,17,opt,name=attribution" json:"attribution,omitempty"`
	BackgroundColorRgb         *string          `protobuf:"bytes,19,opt,name=backgroundColorRgb" json:"backgroundColorRgb,omitempty"`
	Palette                    *ImagePalette    `protobuf:"bytes,20,opt,name=palette" json:"palette,omitempty"`
	DeviceClass                *int32           `protobuf:"varint,21,opt,name=deviceClass" json:"deviceClass,omitempty"`
	SupportsFifeMonogramOption *bool            `protobuf:"varint,22,opt,name=supportsFifeMonogramOption" json:"supportsFifeMonogramOption,omitempty"`
	ImageUrlAlt                *string          `protobuf:"bytes,28,opt,name=imageUrlAlt" json:"imageUrlAlt,omitempty"`
}

func (x *Image) Reset() {
	*x = Image{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[47]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image) ProtoMessage() {}

func (x *Image) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[47]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image.ProtoReflect.Descriptor instead.
func (*Image) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{47}
}

func (x *Image) GetImageType() int32 {
	if x != nil && x.ImageType != nil {
		return *x.ImageType
	}
	return 0
}

func (x *Image) GetDimension() *Image_Dimension {
	if x != nil {
		return x.Dimension
	}
	return nil
}

func (x *Image) GetImageUrl() string {
	if x != nil && x.ImageUrl != nil {
		return *x.ImageUrl
	}
	return ""
}

func (x *Image) GetAltTextLocalized() string {
	if x != nil && x.AltTextLocalized != nil {
		return *x.AltTextLocalized
	}
	return ""
}

func (x *Image) GetSecureUrl() string {
	if x != nil && x.SecureUrl != nil {
		return *x.SecureUrl
	}
	return ""
}

func (x *Image) GetPositionInSequence() int32 {
	if x != nil && x.PositionInSequence != nil {
		return *x.PositionInSequence
	}
	return 0
}

func (x *Image) GetSupportsFifeUrlOptions() bool {
	if x != nil && x.SupportsFifeUrlOptions != nil {
		return *x.SupportsFifeUrlOptions
	}
	return false
}

func (x *Image) GetCitation() *Image_Citation {
	if x != nil {
		return x.Citation
	}
	return nil
}

func (x *Image) GetDurationSeconds() int32 {
	if x != nil && x.DurationSeconds != nil {
		return *x.DurationSeconds
	}
	return 0
}

func (x *Image) GetFillColorRGB() string {
	if x != nil && x.FillColorRGB != nil {
		return *x.FillColorRGB
	}
	return ""
}

func (x *Image) GetAutogen() bool {
	if x != nil && x.Autogen != nil {
		return *x.Autogen
	}
	return false
}

func (x *Image) GetAttribution() *Attribution {
	if x != nil {
		return x.Attribution
	}
	return nil
}

func (x *Image) GetBackgroundColorRgb() string {
	if x != nil && x.BackgroundColorRgb != nil {
		return *x.BackgroundColorRgb
	}
	return ""
}

func (x *Image) GetPalette() *ImagePalette {
	if x != nil {
		return x.Palette
	}
	return nil
}

func (x *Image) GetDeviceClass() int32 {
	if x != nil && x.DeviceClass != nil {
		return *x.DeviceClass
	}
	return 0
}

func (x *Image) GetSupportsFifeMonogramOption() bool {
	if x != nil && x.SupportsFifeMonogramOption != nil {
		return *x.SupportsFifeMonogramOption
	}
	return false
}

func (x *Image) GetImageUrlAlt() string {
	if x != nil && x.ImageUrlAlt != nil {
		return *x.ImageUrlAlt
	}
	return ""
}

type Attribution struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SourceTitle  *string `protobuf:"bytes,1,opt,name=sourceTitle" json:"sourceTitle,omitempty"`
	SourceUrl    *string `protobuf:"bytes,2,opt,name=sourceUrl" json:"sourceUrl,omitempty"`
	LicenseTitle *string `protobuf:"bytes,3,opt,name=licenseTitle" json:"licenseTitle,omitempty"`
	LicenseUrl   *string `protobuf:"bytes,4,opt,name=licenseUrl" json:"licenseUrl,omitempty"`
}

func (x *Attribution) Reset() {
	*x = Attribution{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[48]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Attribution) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Attribution) ProtoMessage() {}

func (x *Attribution) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[48]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Attribution.ProtoReflect.Descriptor instead.
func (*Attribution) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{48}
}

func (x *Attribution) GetSourceTitle() string {
	if x != nil && x.SourceTitle != nil {
		return *x.SourceTitle
	}
	return ""
}

func (x *Attribution) GetSourceUrl() string {
	if x != nil && x.SourceUrl != nil {
		return *x.SourceUrl
	}
	return ""
}

func (x *Attribution) GetLicenseTitle() string {
	if x != nil && x.LicenseTitle != nil {
		return *x.LicenseTitle
	}
	return ""
}

func (x *Attribution) GetLicenseUrl() string {
	if x != nil && x.LicenseUrl != nil {
		return *x.LicenseUrl
	}
	return ""
}

type ImagePalette struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LightVibrantRGB *string `protobuf:"bytes,1,opt,name=lightVibrantRGB" json:"lightVibrantRGB,omitempty"`
	VibrantRGB      *string `protobuf:"bytes,2,opt,name=vibrantRGB" json:"vibrantRGB,omitempty"`
	DarkVibrantRGB  *string `protobuf:"bytes,3,opt,name=darkVibrantRGB" json:"darkVibrantRGB,omitempty"`
	LightMutedRGB   *string `protobuf:"bytes,4,opt,name=lightMutedRGB" json:"lightMutedRGB,omitempty"`
	MutedRGB        *string `protobuf:"bytes,5,opt,name=mutedRGB" json:"mutedRGB,omitempty"`
	DarkMutedRGB    *string `protobuf:"bytes,6,opt,name=darkMutedRGB" json:"darkMutedRGB,omitempty"`
}

func (x *ImagePalette) Reset() {
	*x = ImagePalette{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[49]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ImagePalette) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImagePalette) ProtoMessage() {}

func (x *ImagePalette) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[49]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImagePalette.ProtoReflect.Descriptor instead.
func (*ImagePalette) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{49}
}

func (x *ImagePalette) GetLightVibrantRGB() string {
	if x != nil && x.LightVibrantRGB != nil {
		return *x.LightVibrantRGB
	}
	return ""
}

func (x *ImagePalette) GetVibrantRGB() string {
	if x != nil && x.VibrantRGB != nil {
		return *x.VibrantRGB
	}
	return ""
}

func (x *ImagePalette) GetDarkVibrantRGB() string {
	if x != nil && x.DarkVibrantRGB != nil {
		return *x.DarkVibrantRGB
	}
	return ""
}

func (x *ImagePalette) GetLightMutedRGB() string {
	if x != nil && x.LightMutedRGB != nil {
		return *x.LightMutedRGB
	}
	return ""
}

func (x *ImagePalette) GetMutedRGB() string {
	if x != nil && x.MutedRGB != nil {
		return *x.MutedRGB
	}
	return ""
}

func (x *ImagePalette) GetDarkMutedRGB() string {
	if x != nil && x.DarkMutedRGB != nil {
		return *x.DarkMutedRGB
	}
	return ""
}

type TranslatedText struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Text         *string `protobuf:"bytes,1,opt,name=text" json:"text,omitempty"`
	SourceLocale *string `protobuf:"bytes,2,opt,name=sourceLocale" json:"sourceLocale,omitempty"`
	TargetLocale *string `protobuf:"bytes,3,opt,name=targetLocale" json:"targetLocale,omitempty"`
}

func (x *TranslatedText) Reset() {
	*x = TranslatedText{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[50]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TranslatedText) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TranslatedText) ProtoMessage() {}

func (x *TranslatedText) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[50]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TranslatedText.ProtoReflect.Descriptor instead.
func (*TranslatedText) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{50}
}

func (x *TranslatedText) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *TranslatedText) GetSourceLocale() string {
	if x != nil && x.SourceLocale != nil {
		return *x.SourceLocale
	}
	return ""
}

func (x *TranslatedText) GetTargetLocale() string {
	if x != nil && x.TargetLocale != nil {
		return *x.TargetLocale
	}
	return ""
}

type AppDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeveloperName                                 *string             `protobuf:"bytes,1,opt,name=developerName" json:"developerName,omitempty"`
	MajorVersionNumber                            *int32              `protobuf:"varint,2,opt,name=majorVersionNumber" json:"majorVersionNumber,omitempty"`
	VersionCode                                   *int32              `protobuf:"varint,3,opt,name=versionCode" json:"versionCode,omitempty"`
	VersionString                                 *string             `protobuf:"bytes,4,opt,name=versionString" json:"versionString,omitempty"`
	Title                                         *string             `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	AppCategory                                   []string            `protobuf:"bytes,7,rep,name=appCategory" json:"appCategory,omitempty"`
	ContentRating                                 *int32              `protobuf:"varint,8,opt,name=contentRating" json:"contentRating,omitempty"`
	InfoDownloadSize                              *int64              `protobuf:"varint,9,opt,name=infoDownloadSize" json:"infoDownloadSize,omitempty"`
	Permission                                    []string            `protobuf:"bytes,10,rep,name=permission" json:"permission,omitempty"`
	DeveloperEmail                                *string             `protobuf:"bytes,11,opt,name=developerEmail" json:"developerEmail,omitempty"`
	DeveloperWebsite                              *string             `protobuf:"bytes,12,opt,name=developerWebsite" json:"developerWebsite,omitempty"`
	InfoDownload                                  *string             `protobuf:"bytes,13,opt,name=infoDownload" json:"infoDownload,omitempty"`
	PackageName                                   *string             `protobuf:"bytes,14,opt,name=packageName" json:"packageName,omitempty"`
	RecentChangesHtml                             *string             `protobuf:"bytes,15,opt,name=recentChangesHtml" json:"recentChangesHtml,omitempty"`
	InfoUpdatedOn                                 *string             `protobuf:"bytes,16,opt,name=infoUpdatedOn" json:"infoUpdatedOn,omitempty"`
	File                                          []*FileMetadata     `protobuf:"bytes,17,rep,name=file" json:"file,omitempty"`
	AppType                                       *string             `protobuf:"bytes,18,opt,name=appType" json:"appType,omitempty"`
	CertificateHash                               []string            `protobuf:"bytes,19,rep,name=certificateHash" json:"certificateHash,omitempty"`
	VariesWithDevice                              *bool               `protobuf:"varint,21,opt,name=variesWithDevice,def=1" json:"variesWithDevice,omitempty"`
	CertificateSet                                []*CertificateSet   `protobuf:"bytes,22,rep,name=certificateSet" json:"certificateSet,omitempty"`
	AutoAcquireFreeAppIfHigherVersionAvailableTag []string            `protobuf:"bytes,23,rep,name=autoAcquireFreeAppIfHigherVersionAvailableTag" json:"autoAcquireFreeAppIfHigherVersionAvailableTag,omitempty"`
	HasInstantLink                                *bool               `protobuf:"varint,24,opt,name=hasInstantLink" json:"hasInstantLink,omitempty"`
	SplitId                                       []string            `protobuf:"bytes,25,rep,name=splitId" json:"splitId,omitempty"`
	GamepadRequired                               *bool               `protobuf:"varint,26,opt,name=gamepadRequired" json:"gamepadRequired,omitempty"`
	ExternallyHosted                              *bool               `protobuf:"varint,27,opt,name=externallyHosted" json:"externallyHosted,omitempty"`
	EverExternallyHosted                          *bool               `protobuf:"varint,28,opt,name=everExternallyHosted" json:"everExternallyHosted,omitempty"`
	InstallNotes                                  *string             `protobuf:"bytes,30,opt,name=installNotes" json:"installNotes,omitempty"`
	InstallLocation                               *int32              `protobuf:"varint,31,opt,name=installLocation" json:"installLocation,omitempty"`
	TargetSdkVersion                              *int32              `protobuf:"varint,32,opt,name=targetSdkVersion" json:"targetSdkVersion,omitempty"`
	HasPreregistrationPromoCode                   *string             `protobuf:"bytes,33,opt,name=hasPreregistrationPromoCode" json:"hasPreregistrationPromoCode,omitempty"`
	Dependencies                                  *Dependencies       `protobuf:"bytes,34,opt,name=dependencies" json:"dependencies,omitempty"`
	TestingProgramInfo                            *TestingProgramInfo `protobuf:"bytes,35,opt,name=testingProgramInfo" json:"testingProgramInfo,omitempty"`
	EarlyAccessInfo                               *EarlyAccessInfo    `protobuf:"bytes,36,opt,name=earlyAccessInfo" json:"earlyAccessInfo,omitempty"`
	EditorChoice                                  *EditorChoice       `protobuf:"bytes,41,opt,name=editorChoice" json:"editorChoice,omitempty"`
	InstantLink                                   *string             `protobuf:"bytes,43,opt,name=instantLink" json:"instantLink,omitempty"`
	DeveloperAddress                              *string             `protobuf:"bytes,45,opt,name=developerAddress" json:"developerAddress,omitempty"`
	Publisher                                     *Publisher          `protobuf:"bytes,46,opt,name=publisher" json:"publisher,omitempty"`
	CategoryName                                  *string             `protobuf:"bytes,48,opt,name=categoryName" json:"categoryName,omitempty"`
	DownloadCount                                 *int64              `protobuf:"varint,53,opt,name=downloadCount" json:"downloadCount,omitempty"`
	DownloadLabelDisplay                          *string             `protobuf:"bytes,61,opt,name=downloadLabelDisplay" json:"downloadLabelDisplay,omitempty"`
	InAppProduct                                  *string             `protobuf:"bytes,67,opt,name=inAppProduct" json:"inAppProduct,omitempty"`
	DownloadLabelAbbreviated                      *string             `protobuf:"bytes,77,opt,name=downloadLabelAbbreviated" json:"downloadLabelAbbreviated,omitempty"`
	DownloadLabel                                 *string             `protobuf:"bytes,78,opt,name=downloadLabel" json:"downloadLabel,omitempty"`
}

// Default values for AppDetails fields.
const (
	Default_AppDetails_VariesWithDevice = bool(true)
)

func (x *AppDetails) Reset() {
	*x = AppDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[51]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppDetails) ProtoMessage() {}

func (x *AppDetails) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[51]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppDetails.ProtoReflect.Descriptor instead.
func (*AppDetails) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{51}
}

func (x *AppDetails) GetDeveloperName() string {
	if x != nil && x.DeveloperName != nil {
		return *x.DeveloperName
	}
	return ""
}

func (x *AppDetails) GetMajorVersionNumber() int32 {
	if x != nil && x.MajorVersionNumber != nil {
		return *x.MajorVersionNumber
	}
	return 0
}

func (x *AppDetails) GetVersionCode() int32 {
	if x != nil && x.VersionCode != nil {
		return *x.VersionCode
	}
	return 0
}

func (x *AppDetails) GetVersionString() string {
	if x != nil && x.VersionString != nil {
		return *x.VersionString
	}
	return ""
}

func (x *AppDetails) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *AppDetails) GetAppCategory() []string {
	if x != nil {
		return x.AppCategory
	}
	return nil
}

func (x *AppDetails) GetContentRating() int32 {
	if x != nil && x.ContentRating != nil {
		return *x.ContentRating
	}
	return 0
}

func (x *AppDetails) GetInfoDownloadSize() int64 {
	if x != nil && x.InfoDownloadSize != nil {
		return *x.InfoDownloadSize
	}
	return 0
}

func (x *AppDetails) GetPermission() []string {
	if x != nil {
		return x.Permission
	}
	return nil
}

func (x *AppDetails) GetDeveloperEmail() string {
	if x != nil && x.DeveloperEmail != nil {
		return *x.DeveloperEmail
	}
	return ""
}

func (x *AppDetails) GetDeveloperWebsite() string {
	if x != nil && x.DeveloperWebsite != nil {
		return *x.DeveloperWebsite
	}
	return ""
}

func (x *AppDetails) GetInfoDownload() string {
	if x != nil && x.InfoDownload != nil {
		return *x.InfoDownload
	}
	return ""
}

func (x *AppDetails) GetPackageName() string {
	if x != nil && x.PackageName != nil {
		return *x.PackageName
	}
	return ""
}

func (x *AppDetails) GetRecentChangesHtml() string {
	if x != nil && x.RecentChangesHtml != nil {
		return *x.RecentChangesHtml
	}
	return ""
}

func (x *AppDetails) GetInfoUpdatedOn() string {
	if x != nil && x.InfoUpdatedOn != nil {
		return *x.InfoUpdatedOn
	}
	return ""
}

func (x *AppDetails) GetFile() []*FileMetadata {
	if x != nil {
		return x.File
	}
	return nil
}

func (x *AppDetails) GetAppType() string {
	if x != nil && x.AppType != nil {
		return *x.AppType
	}
	return ""
}

func (x *AppDetails) GetCertificateHash() []string {
	if x != nil {
		return x.CertificateHash
	}
	return nil
}

func (x *AppDetails) GetVariesWithDevice() bool {
	if x != nil && x.VariesWithDevice != nil {
		return *x.VariesWithDevice
	}
	return Default_AppDetails_VariesWithDevice
}

func (x *AppDetails) GetCertificateSet() []*CertificateSet {
	if x != nil {
		return x.CertificateSet
	}
	return nil
}

func (x *AppDetails) GetAutoAcquireFreeAppIfHigherVersionAvailableTag() []string {
	if x != nil {
		return x.AutoAcquireFreeAppIfHigherVersionAvailableTag
	}
	return nil
}

func (x *AppDetails) GetHasInstantLink() bool {
	if x != nil && x.HasInstantLink != nil {
		return *x.HasInstantLink
	}
	return false
}

func (x *AppDetails) GetSplitId() []string {
	if x != nil {
		return x.SplitId
	}
	return nil
}

func (x *AppDetails) GetGamepadRequired() bool {
	if x != nil && x.GamepadRequired != nil {
		return *x.GamepadRequired
	}
	return false
}

func (x *AppDetails) GetExternallyHosted() bool {
	if x != nil && x.ExternallyHosted != nil {
		return *x.ExternallyHosted
	}
	return false
}

func (x *AppDetails) GetEverExternallyHosted() bool {
	if x != nil && x.EverExternallyHosted != nil {
		return *x.EverExternallyHosted
	}
	return false
}

func (x *AppDetails) GetInstallNotes() string {
	if x != nil && x.InstallNotes != nil {
		return *x.InstallNotes
	}
	return ""
}

func (x *AppDetails) GetInstallLocation() int32 {
	if x != nil && x.InstallLocation != nil {
		return *x.InstallLocation
	}
	return 0
}

func (x *AppDetails) GetTargetSdkVersion() int32 {
	if x != nil && x.TargetSdkVersion != nil {
		return *x.TargetSdkVersion
	}
	return 0
}

func (x *AppDetails) GetHasPreregistrationPromoCode() string {
	if x != nil && x.HasPreregistrationPromoCode != nil {
		return *x.HasPreregistrationPromoCode
	}
	return ""
}

func (x *AppDetails) GetDependencies() *Dependencies {
	if x != nil {
		return x.Dependencies
	}
	return nil
}

func (x *AppDetails) GetTestingProgramInfo() *TestingProgramInfo {
	if x != nil {
		return x.TestingProgramInfo
	}
	return nil
}

func (x *AppDetails) GetEarlyAccessInfo() *EarlyAccessInfo {
	if x != nil {
		return x.EarlyAccessInfo
	}
	return nil
}

func (x *AppDetails) GetEditorChoice() *EditorChoice {
	if x != nil {
		return x.EditorChoice
	}
	return nil
}

func (x *AppDetails) GetInstantLink() string {
	if x != nil && x.InstantLink != nil {
		return *x.InstantLink
	}
	return ""
}

func (x *AppDetails) GetDeveloperAddress() string {
	if x != nil && x.DeveloperAddress != nil {
		return *x.DeveloperAddress
	}
	return ""
}

func (x *AppDetails) GetPublisher() *Publisher {
	if x != nil {
		return x.Publisher
	}
	return nil
}

func (x *AppDetails) GetCategoryName() string {
	if x != nil && x.CategoryName != nil {
		return *x.CategoryName
	}
	return ""
}

func (x *AppDetails) GetDownloadCount() int64 {
	if x != nil && x.DownloadCount != nil {
		return *x.DownloadCount
	}
	return 0
}

func (x *AppDetails) GetDownloadLabelDisplay() string {
	if x != nil && x.DownloadLabelDisplay != nil {
		return *x.DownloadLabelDisplay
	}
	return ""
}

func (x *AppDetails) GetInAppProduct() string {
	if x != nil && x.InAppProduct != nil {
		return *x.InAppProduct
	}
	return ""
}

func (x *AppDetails) GetDownloadLabelAbbreviated() string {
	if x != nil && x.DownloadLabelAbbreviated != nil {
		return *x.DownloadLabelAbbreviated
	}
	return ""
}

func (x *AppDetails) GetDownloadLabel() string {
	if x != nil && x.DownloadLabel != nil {
		return *x.DownloadLabel
	}
	return ""
}

type ModifyLibrary struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id              *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	PackageToAdd    *string `protobuf:"bytes,2,opt,name=packageToAdd" json:"packageToAdd,omitempty"`
	PackageToRemove *string `protobuf:"bytes,3,opt,name=packageToRemove" json:"packageToRemove,omitempty"`
}

func (x *ModifyLibrary) Reset() {
	*x = ModifyLibrary{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[52]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ModifyLibrary) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ModifyLibrary) ProtoMessage() {}

func (x *ModifyLibrary) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[52]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ModifyLibrary.ProtoReflect.Descriptor instead.
func (*ModifyLibrary) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{52}
}

func (x *ModifyLibrary) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *ModifyLibrary) GetPackageToAdd() string {
	if x != nil && x.PackageToAdd != nil {
		return *x.PackageToAdd
	}
	return ""
}

func (x *ModifyLibrary) GetPackageToRemove() string {
	if x != nil && x.PackageToRemove != nil {
		return *x.PackageToRemove
	}
	return ""
}

type Publisher struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PublisherStream *PublisherStream `protobuf:"bytes,2,opt,name=publisherStream" json:"publisherStream,omitempty"`
}

func (x *Publisher) Reset() {
	*x = Publisher{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[53]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Publisher) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Publisher) ProtoMessage() {}

func (x *Publisher) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[53]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Publisher.ProtoReflect.Descriptor instead.
func (*Publisher) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{53}
}

func (x *Publisher) GetPublisherStream() *PublisherStream {
	if x != nil {
		return x.PublisherStream
	}
	return nil
}

type PublisherStream struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MoreUrl *string `protobuf:"bytes,3,opt,name=moreUrl" json:"moreUrl,omitempty"`
	Query   *string `protobuf:"bytes,11,opt,name=query" json:"query,omitempty"`
}

func (x *PublisherStream) Reset() {
	*x = PublisherStream{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[54]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PublisherStream) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PublisherStream) ProtoMessage() {}

func (x *PublisherStream) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[54]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PublisherStream.ProtoReflect.Descriptor instead.
func (*PublisherStream) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{54}
}

func (x *PublisherStream) GetMoreUrl() string {
	if x != nil && x.MoreUrl != nil {
		return *x.MoreUrl
	}
	return ""
}

func (x *PublisherStream) GetQuery() string {
	if x != nil && x.Query != nil {
		return *x.Query
	}
	return ""
}

type EditorChoice struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Bulletins   []string `protobuf:"bytes,1,rep,name=bulletins" json:"bulletins,omitempty"`
	Description *string  `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
	Title       *string  `protobuf:"bytes,4,opt,name=title" json:"title,omitempty"`
	Subtitle    *string  `protobuf:"bytes,5,opt,name=subtitle" json:"subtitle,omitempty"`
}

func (x *EditorChoice) Reset() {
	*x = EditorChoice{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[55]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EditorChoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EditorChoice) ProtoMessage() {}

func (x *EditorChoice) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[55]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EditorChoice.ProtoReflect.Descriptor instead.
func (*EditorChoice) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{55}
}

func (x *EditorChoice) GetBulletins() []string {
	if x != nil {
		return x.Bulletins
	}
	return nil
}

func (x *EditorChoice) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

func (x *EditorChoice) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *EditorChoice) GetSubtitle() string {
	if x != nil && x.Subtitle != nil {
		return *x.Subtitle
	}
	return ""
}

type CertificateSet struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertificateHash []string `protobuf:"bytes,1,rep,name=certificateHash" json:"certificateHash,omitempty"`
	Sha256          []string `protobuf:"bytes,2,rep,name=sha256" json:"sha256,omitempty"`
}

func (x *CertificateSet) Reset() {
	*x = CertificateSet{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[56]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CertificateSet) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CertificateSet) ProtoMessage() {}

func (x *CertificateSet) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[56]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CertificateSet.ProtoReflect.Descriptor instead.
func (*CertificateSet) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{56}
}

func (x *CertificateSet) GetCertificateHash() []string {
	if x != nil {
		return x.CertificateHash
	}
	return nil
}

func (x *CertificateSet) GetSha256() []string {
	if x != nil {
		return x.Sha256
	}
	return nil
}

type Dependencies struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Unknown    *int32        `protobuf:"varint,1,opt,name=unknown" json:"unknown,omitempty"`
	Size       *int64        `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
	Dependency []*Dependency `protobuf:"bytes,3,rep,name=dependency" json:"dependency,omitempty"`
	TargetSdk  *int32        `protobuf:"varint,4,opt,name=targetSdk" json:"targetSdk,omitempty"`
	SplitApks  []string      `protobuf:"bytes,11,rep,name=splitApks" json:"splitApks,omitempty"`
}

func (x *Dependencies) Reset() {
	*x = Dependencies{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[57]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dependencies) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dependencies) ProtoMessage() {}

func (x *Dependencies) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[57]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dependencies.ProtoReflect.Descriptor instead.
func (*Dependencies) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{57}
}

func (x *Dependencies) GetUnknown() int32 {
	if x != nil && x.Unknown != nil {
		return *x.Unknown
	}
	return 0
}

func (x *Dependencies) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *Dependencies) GetDependency() []*Dependency {
	if x != nil {
		return x.Dependency
	}
	return nil
}

func (x *Dependencies) GetTargetSdk() int32 {
	if x != nil && x.TargetSdk != nil {
		return *x.TargetSdk
	}
	return 0
}

func (x *Dependencies) GetSplitApks() []string {
	if x != nil {
		return x.SplitApks
	}
	return nil
}

type Dependency struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageName *string `protobuf:"bytes,1,opt,name=packageName" json:"packageName,omitempty"`
	Version     *int32  `protobuf:"varint,2,opt,name=version" json:"version,omitempty"`
}

func (x *Dependency) Reset() {
	*x = Dependency{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[58]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Dependency) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Dependency) ProtoMessage() {}

func (x *Dependency) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[58]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Dependency.ProtoReflect.Descriptor instead.
func (*Dependency) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{58}
}

func (x *Dependency) GetPackageName() string {
	if x != nil && x.PackageName != nil {
		return *x.PackageName
	}
	return ""
}

func (x *Dependency) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

type TestingProgramInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscribed             *bool   `protobuf:"varint,2,opt,name=subscribed" json:"subscribed,omitempty"`
	SubscribedAndInstalled *bool   `protobuf:"varint,3,opt,name=subscribedAndInstalled" json:"subscribedAndInstalled,omitempty"`
	Email                  *string `protobuf:"bytes,5,opt,name=email" json:"email,omitempty"`
	DisplayName            *string `protobuf:"bytes,7,opt,name=displayName" json:"displayName,omitempty"`
	Image                  *Image  `protobuf:"bytes,6,opt,name=image" json:"image,omitempty"`
}

func (x *TestingProgramInfo) Reset() {
	*x = TestingProgramInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[59]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestingProgramInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestingProgramInfo) ProtoMessage() {}

func (x *TestingProgramInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[59]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestingProgramInfo.ProtoReflect.Descriptor instead.
func (*TestingProgramInfo) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{59}
}

func (x *TestingProgramInfo) GetSubscribed() bool {
	if x != nil && x.Subscribed != nil {
		return *x.Subscribed
	}
	return false
}

func (x *TestingProgramInfo) GetSubscribedAndInstalled() bool {
	if x != nil && x.SubscribedAndInstalled != nil {
		return *x.SubscribedAndInstalled
	}
	return false
}

func (x *TestingProgramInfo) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

func (x *TestingProgramInfo) GetDisplayName() string {
	if x != nil && x.DisplayName != nil {
		return *x.DisplayName
	}
	return ""
}

func (x *TestingProgramInfo) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

type EarlyAccessInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Email *string `protobuf:"bytes,3,opt,name=email" json:"email,omitempty"`
}

func (x *EarlyAccessInfo) Reset() {
	*x = EarlyAccessInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[60]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EarlyAccessInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EarlyAccessInfo) ProtoMessage() {}

func (x *EarlyAccessInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[60]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EarlyAccessInfo.ProtoReflect.Descriptor instead.
func (*EarlyAccessInfo) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{60}
}

func (x *EarlyAccessInfo) GetEmail() string {
	if x != nil && x.Email != nil {
		return *x.Email
	}
	return ""
}

type DocumentDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AppDetails          *AppDetails          `protobuf:"bytes,1,opt,name=appDetails" json:"appDetails,omitempty"`
	SubscriptionDetails *SubscriptionDetails `protobuf:"bytes,7,opt,name=subscriptionDetails" json:"subscriptionDetails,omitempty"`
}

func (x *DocumentDetails) Reset() {
	*x = DocumentDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[61]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DocumentDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentDetails) ProtoMessage() {}

func (x *DocumentDetails) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[61]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentDetails.ProtoReflect.Descriptor instead.
func (*DocumentDetails) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{61}
}

func (x *DocumentDetails) GetAppDetails() *AppDetails {
	if x != nil {
		return x.AppDetails
	}
	return nil
}

func (x *DocumentDetails) GetSubscriptionDetails() *SubscriptionDetails {
	if x != nil {
		return x.SubscriptionDetails
	}
	return nil
}

type PatchDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BaseVersionCode *int32 `protobuf:"varint,1,opt,name=baseVersionCode" json:"baseVersionCode,omitempty"`
	Size            *int64 `protobuf:"varint,2,opt,name=size" json:"size,omitempty"`
}

func (x *PatchDetails) Reset() {
	*x = PatchDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[62]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PatchDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PatchDetails) ProtoMessage() {}

func (x *PatchDetails) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[62]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PatchDetails.ProtoReflect.Descriptor instead.
func (*PatchDetails) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{62}
}

func (x *PatchDetails) GetBaseVersionCode() int32 {
	if x != nil && x.BaseVersionCode != nil {
		return *x.BaseVersionCode
	}
	return 0
}

func (x *PatchDetails) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

type FileMetadata struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FileType       *int32          `protobuf:"varint,1,opt,name=fileType" json:"fileType,omitempty"`
	VersionCode    *int32          `protobuf:"varint,2,opt,name=versionCode" json:"versionCode,omitempty"`
	Size           *int64          `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	SplitId        *string         `protobuf:"bytes,4,opt,name=splitId" json:"splitId,omitempty"`
	CompressedSize *int64          `protobuf:"varint,5,opt,name=compressedSize" json:"compressedSize,omitempty"`
	PatchDetails   []*PatchDetails `protobuf:"bytes,6,rep,name=patchDetails" json:"patchDetails,omitempty"`
}

func (x *FileMetadata) Reset() {
	*x = FileMetadata{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[63]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FileMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FileMetadata) ProtoMessage() {}

func (x *FileMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[63]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FileMetadata.ProtoReflect.Descriptor instead.
func (*FileMetadata) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{63}
}

func (x *FileMetadata) GetFileType() int32 {
	if x != nil && x.FileType != nil {
		return *x.FileType
	}
	return 0
}

func (x *FileMetadata) GetVersionCode() int32 {
	if x != nil && x.VersionCode != nil {
		return *x.VersionCode
	}
	return 0
}

func (x *FileMetadata) GetSize() int64 {
	if x != nil && x.Size != nil {
		return *x.Size
	}
	return 0
}

func (x *FileMetadata) GetSplitId() string {
	if x != nil && x.SplitId != nil {
		return *x.SplitId
	}
	return ""
}

func (x *FileMetadata) GetCompressedSize() int64 {
	if x != nil && x.CompressedSize != nil {
		return *x.CompressedSize
	}
	return 0
}

func (x *FileMetadata) GetPatchDetails() []*PatchDetails {
	if x != nil {
		return x.PatchDetails
	}
	return nil
}

type SubscriptionDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubscriptionPeriod *int32 `protobuf:"varint,1,opt,name=subscriptionPeriod" json:"subscriptionPeriod,omitempty"`
}

func (x *SubscriptionDetails) Reset() {
	*x = SubscriptionDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[64]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubscriptionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubscriptionDetails) ProtoMessage() {}

func (x *SubscriptionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[64]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubscriptionDetails.ProtoReflect.Descriptor instead.
func (*SubscriptionDetails) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{64}
}

func (x *SubscriptionDetails) GetSubscriptionPeriod() int32 {
	if x != nil && x.SubscriptionPeriod != nil {
		return *x.SubscriptionPeriod
	}
	return 0
}

type Item struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id                          *string            `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	SubId                       *string            `protobuf:"bytes,2,opt,name=subId" json:"subId,omitempty"`
	Type                        *int32             `protobuf:"varint,3,opt,name=type" json:"type,omitempty"`
	CategoryId                  *int32             `protobuf:"varint,4,opt,name=categoryId" json:"categoryId,omitempty"`
	Title                       *string            `protobuf:"bytes,5,opt,name=title" json:"title,omitempty"`
	Creator                     *string            `protobuf:"bytes,6,opt,name=creator" json:"creator,omitempty"`
	DescriptionHtml             *string            `protobuf:"bytes,7,opt,name=descriptionHtml" json:"descriptionHtml,omitempty"`
	Offer                       []*Offer           `protobuf:"bytes,8,rep,name=offer" json:"offer,omitempty"`
	Image                       []*Image           `protobuf:"bytes,10,rep,name=image" json:"image,omitempty"`
	SubItem                     []*Item            `protobuf:"bytes,11,rep,name=subItem" json:"subItem,omitempty"`
	ContainerMetadata           *ContainerMetadata `protobuf:"bytes,12,opt,name=containerMetadata" json:"containerMetadata,omitempty"`
	Details                     *DocumentDetails   `protobuf:"bytes,13,opt,name=details" json:"details,omitempty"`
	Annotations                 *Annotations       `protobuf:"bytes,15,opt,name=annotations" json:"annotations,omitempty"`
	DetailsUrl                  *string            `protobuf:"bytes,16,opt,name=detailsUrl" json:"detailsUrl,omitempty"`
	ShareUrl                    *string            `protobuf:"bytes,17,opt,name=shareUrl" json:"shareUrl,omitempty"`
	ReviewsUrl                  *string            `protobuf:"bytes,18,opt,name=reviewsUrl" json:"reviewsUrl,omitempty"`
	BackendUrl                  *string            `protobuf:"bytes,19,opt,name=backendUrl" json:"backendUrl,omitempty"`
	PurchaseDetailsUrl          *string            `protobuf:"bytes,20,opt,name=purchaseDetailsUrl" json:"purchaseDetailsUrl,omitempty"`
	DetailsReusable             *bool              `protobuf:"varint,21,opt,name=detailsReusable" json:"detailsReusable,omitempty"`
	Subtitle                    *string            `protobuf:"bytes,22,opt,name=subtitle" json:"subtitle,omitempty"`
	TranslatedDescriptionHtml   *string            `protobuf:"bytes,23,opt,name=translatedDescriptionHtml" json:"translatedDescriptionHtml,omitempty"`
	ServerLogsCookie            []byte             `protobuf:"bytes,24,opt,name=serverLogsCookie" json:"serverLogsCookie,omitempty"`
	AppInfo                     *AppInfo           `protobuf:"bytes,25,opt,name=appInfo" json:"appInfo,omitempty"`
	Mature                      *bool              `protobuf:"varint,26,opt,name=mature" json:"mature,omitempty"`
	PromotionalDescription      *string            `protobuf:"bytes,27,opt,name=promotionalDescription" json:"promotionalDescription,omitempty"`
	AvailableForPreregistration *bool              `protobuf:"varint,29,opt,name=availableForPreregistration" json:"availableForPreregistration,omitempty"`
	ReviewSnippetsUrl           *string            `protobuf:"bytes,31,opt,name=reviewSnippetsUrl" json:"reviewSnippetsUrl,omitempty"`
	UseWishlistAsPrimaryAction  *bool              `protobuf:"varint,33,opt,name=useWishlistAsPrimaryAction" json:"useWishlistAsPrimaryAction,omitempty"`
	ReviewQuestionsUrl          *string            `protobuf:"bytes,34,opt,name=reviewQuestionsUrl" json:"reviewQuestionsUrl,omitempty"`
	ReviewSummaryUrl            *string            `protobuf:"bytes,39,opt,name=reviewSummaryUrl" json:"reviewSummaryUrl,omitempty"`
}

func (x *Item) Reset() {
	*x = Item{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[65]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Item) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Item) ProtoMessage() {}

func (x *Item) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[65]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Item.ProtoReflect.Descriptor instead.
func (*Item) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{65}
}

func (x *Item) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *Item) GetSubId() string {
	if x != nil && x.SubId != nil {
		return *x.SubId
	}
	return ""
}

func (x *Item) GetType() int32 {
	if x != nil && x.Type != nil {
		return *x.Type
	}
	return 0
}

func (x *Item) GetCategoryId() int32 {
	if x != nil && x.CategoryId != nil {
		return *x.CategoryId
	}
	return 0
}

func (x *Item) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *Item) GetCreator() string {
	if x != nil && x.Creator != nil {
		return *x.Creator
	}
	return ""
}

func (x *Item) GetDescriptionHtml() string {
	if x != nil && x.DescriptionHtml != nil {
		return *x.DescriptionHtml
	}
	return ""
}

func (x *Item) GetOffer() []*Offer {
	if x != nil {
		return x.Offer
	}
	return nil
}

func (x *Item) GetImage() []*Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Item) GetSubItem() []*Item {
	if x != nil {
		return x.SubItem
	}
	return nil
}

func (x *Item) GetContainerMetadata() *ContainerMetadata {
	if x != nil {
		return x.ContainerMetadata
	}
	return nil
}

func (x *Item) GetDetails() *DocumentDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

func (x *Item) GetAnnotations() *Annotations {
	if x != nil {
		return x.Annotations
	}
	return nil
}

func (x *Item) GetDetailsUrl() string {
	if x != nil && x.DetailsUrl != nil {
		return *x.DetailsUrl
	}
	return ""
}

func (x *Item) GetShareUrl() string {
	if x != nil && x.ShareUrl != nil {
		return *x.ShareUrl
	}
	return ""
}

func (x *Item) GetReviewsUrl() string {
	if x != nil && x.ReviewsUrl != nil {
		return *x.ReviewsUrl
	}
	return ""
}

func (x *Item) GetBackendUrl() string {
	if x != nil && x.BackendUrl != nil {
		return *x.BackendUrl
	}
	return ""
}

func (x *Item) GetPurchaseDetailsUrl() string {
	if x != nil && x.PurchaseDetailsUrl != nil {
		return *x.PurchaseDetailsUrl
	}
	return ""
}

func (x *Item) GetDetailsReusable() bool {
	if x != nil && x.DetailsReusable != nil {
		return *x.DetailsReusable
	}
	return false
}

func (x *Item) GetSubtitle() string {
	if x != nil && x.Subtitle != nil {
		return *x.Subtitle
	}
	return ""
}

func (x *Item) GetTranslatedDescriptionHtml() string {
	if x != nil && x.TranslatedDescriptionHtml != nil {
		return *x.TranslatedDescriptionHtml
	}
	return ""
}

func (x *Item) GetServerLogsCookie() []byte {
	if x != nil {
		return x.ServerLogsCookie
	}
	return nil
}

func (x *Item) GetAppInfo() *AppInfo {
	if x != nil {
		return x.AppInfo
	}
	return nil
}

func (x *Item) GetMature() bool {
	if x != nil && x.Mature != nil {
		return *x.Mature
	}
	return false
}

func (x *Item) GetPromotionalDescription() string {
	if x != nil && x.PromotionalDescription != nil {
		return *x.PromotionalDescription
	}
	return ""
}

func (x *Item) GetAvailableForPreregistration() bool {
	if x != nil && x.AvailableForPreregistration != nil {
		return *x.AvailableForPreregistration
	}
	return false
}

func (x *Item) GetReviewSnippetsUrl() string {
	if x != nil && x.ReviewSnippetsUrl != nil {
		return *x.ReviewSnippetsUrl
	}
	return ""
}

func (x *Item) GetUseWishlistAsPrimaryAction() bool {
	if x != nil && x.UseWishlistAsPrimaryAction != nil {
		return *x.UseWishlistAsPrimaryAction
	}
	return false
}

func (x *Item) GetReviewQuestionsUrl() string {
	if x != nil && x.ReviewQuestionsUrl != nil {
		return *x.ReviewQuestionsUrl
	}
	return ""
}

func (x *Item) GetReviewSummaryUrl() string {
	if x != nil && x.ReviewSummaryUrl != nil {
		return *x.ReviewSummaryUrl
	}
	return ""
}

type AppInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title   *string           `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
	Section []*AppInfoSection `protobuf:"bytes,2,rep,name=section" json:"section,omitempty"`
}

func (x *AppInfo) Reset() {
	*x = AppInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[66]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfo) ProtoMessage() {}

func (x *AppInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[66]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfo.ProtoReflect.Descriptor instead.
func (*AppInfo) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{66}
}

func (x *AppInfo) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

func (x *AppInfo) GetSection() []*AppInfoSection {
	if x != nil {
		return x.Section
	}
	return nil
}

type AppInfoSection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label     *string           `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	Container *AppInfoContainer `protobuf:"bytes,3,opt,name=container" json:"container,omitempty"`
}

func (x *AppInfoSection) Reset() {
	*x = AppInfoSection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[67]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfoSection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfoSection) ProtoMessage() {}

func (x *AppInfoSection) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[67]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfoSection.ProtoReflect.Descriptor instead.
func (*AppInfoSection) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{67}
}

func (x *AppInfoSection) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *AppInfoSection) GetContainer() *AppInfoContainer {
	if x != nil {
		return x.Container
	}
	return nil
}

type AppInfoContainer struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Image       *Image  `protobuf:"bytes,1,opt,name=image" json:"image,omitempty"`
	Description *string `protobuf:"bytes,2,opt,name=description" json:"description,omitempty"`
}

func (x *AppInfoContainer) Reset() {
	*x = AppInfoContainer{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[68]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AppInfoContainer) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AppInfoContainer) ProtoMessage() {}

func (x *AppInfoContainer) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[68]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AppInfoContainer.ProtoReflect.Descriptor instead.
func (*AppInfoContainer) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{68}
}

func (x *AppInfoContainer) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *AppInfoContainer) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type Annotations struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Warning                   []*Warning              `protobuf:"bytes,4,rep,name=warning" json:"warning,omitempty"`
	BadgeForCreator           []*Badge                `protobuf:"bytes,8,rep,name=badgeForCreator" json:"badgeForCreator,omitempty"`
	InfoBadge                 []*Badge                `protobuf:"bytes,9,rep,name=infoBadge" json:"infoBadge,omitempty"`
	AnnotationLink            *AnnotationLink         `protobuf:"bytes,10,opt,name=annotationLink" json:"annotationLink,omitempty"`
	OfferNote                 *string                 `protobuf:"bytes,14,opt,name=offerNote" json:"offerNote,omitempty"`
	PrivacyPolicyUrl          *string                 `protobuf:"bytes,18,opt,name=privacyPolicyUrl" json:"privacyPolicyUrl,omitempty"`
	OptimalDeviceClassWarning *Warning                `protobuf:"bytes,20,opt,name=optimalDeviceClassWarning" json:"optimalDeviceClassWarning,omitempty"`
	AttributionHtml           *string                 `protobuf:"bytes,27,opt,name=attributionHtml" json:"attributionHtml,omitempty"`
	PurchaseHistoryDetails    *PurchaseHistoryDetails `protobuf:"bytes,28,opt,name=purchaseHistoryDetails" json:"purchaseHistoryDetails,omitempty"`
	BadgeForLegacyRating      *Badge                  `protobuf:"bytes,29,opt,name=badgeForLegacyRating" json:"badgeForLegacyRating,omitempty"`
	FeatureBadge              []*Badge                `protobuf:"bytes,39,rep,name=featureBadge" json:"featureBadge,omitempty"`
	DownloadsLabel            *string                 `protobuf:"bytes,48,opt,name=downloadsLabel" json:"downloadsLabel,omitempty"`
	BadgeForRating            *Badge                  `protobuf:"bytes,50,opt,name=badgeForRating" json:"badgeForRating,omitempty"`
	CategoryInfo              *CategoryInfo           `protobuf:"bytes,53,opt,name=categoryInfo" json:"categoryInfo,omitempty"`
	CategoryName              *string                 `protobuf:"bytes,66,opt,name=categoryName" json:"categoryName,omitempty"`
	Chip                      []*Chip                 `protobuf:"bytes,71,rep,name=chip" json:"chip,omitempty"`
	DisplayBadge              []*Badge                `protobuf:"bytes,72,rep,name=displayBadge" json:"displayBadge,omitempty"`
	LiveStreamUrl             *string                 `protobuf:"bytes,80,opt,name=liveStreamUrl" json:"liveStreamUrl,omitempty"`
	PromotionStreamUrl        *string                 `protobuf:"bytes,85,opt,name=promotionStreamUrl" json:"promotionStreamUrl,omitempty"`
	SectionImage              *SectionImage           `protobuf:"bytes,94,opt,name=sectionImage" json:"sectionImage,omitempty"`
}

func (x *Annotations) Reset() {
	*x = Annotations{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[69]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Annotations) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Annotations) ProtoMessage() {}

func (x *Annotations) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[69]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Annotations.ProtoReflect.Descriptor instead.
func (*Annotations) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{69}
}

func (x *Annotations) GetWarning() []*Warning {
	if x != nil {
		return x.Warning
	}
	return nil
}

func (x *Annotations) GetBadgeForCreator() []*Badge {
	if x != nil {
		return x.BadgeForCreator
	}
	return nil
}

func (x *Annotations) GetInfoBadge() []*Badge {
	if x != nil {
		return x.InfoBadge
	}
	return nil
}

func (x *Annotations) GetAnnotationLink() *AnnotationLink {
	if x != nil {
		return x.AnnotationLink
	}
	return nil
}

func (x *Annotations) GetOfferNote() string {
	if x != nil && x.OfferNote != nil {
		return *x.OfferNote
	}
	return ""
}

func (x *Annotations) GetPrivacyPolicyUrl() string {
	if x != nil && x.PrivacyPolicyUrl != nil {
		return *x.PrivacyPolicyUrl
	}
	return ""
}

func (x *Annotations) GetOptimalDeviceClassWarning() *Warning {
	if x != nil {
		return x.OptimalDeviceClassWarning
	}
	return nil
}

func (x *Annotations) GetAttributionHtml() string {
	if x != nil && x.AttributionHtml != nil {
		return *x.AttributionHtml
	}
	return ""
}

func (x *Annotations) GetPurchaseHistoryDetails() *PurchaseHistoryDetails {
	if x != nil {
		return x.PurchaseHistoryDetails
	}
	return nil
}

func (x *Annotations) GetBadgeForLegacyRating() *Badge {
	if x != nil {
		return x.BadgeForLegacyRating
	}
	return nil
}

func (x *Annotations) GetFeatureBadge() []*Badge {
	if x != nil {
		return x.FeatureBadge
	}
	return nil
}

func (x *Annotations) GetDownloadsLabel() string {
	if x != nil && x.DownloadsLabel != nil {
		return *x.DownloadsLabel
	}
	return ""
}

func (x *Annotations) GetBadgeForRating() *Badge {
	if x != nil {
		return x.BadgeForRating
	}
	return nil
}

func (x *Annotations) GetCategoryInfo() *CategoryInfo {
	if x != nil {
		return x.CategoryInfo
	}
	return nil
}

func (x *Annotations) GetCategoryName() string {
	if x != nil && x.CategoryName != nil {
		return *x.CategoryName
	}
	return ""
}

func (x *Annotations) GetChip() []*Chip {
	if x != nil {
		return x.Chip
	}
	return nil
}

func (x *Annotations) GetDisplayBadge() []*Badge {
	if x != nil {
		return x.DisplayBadge
	}
	return nil
}

func (x *Annotations) GetLiveStreamUrl() string {
	if x != nil && x.LiveStreamUrl != nil {
		return *x.LiveStreamUrl
	}
	return ""
}

func (x *Annotations) GetPromotionStreamUrl() string {
	if x != nil && x.PromotionStreamUrl != nil {
		return *x.PromotionStreamUrl
	}
	return ""
}

func (x *Annotations) GetSectionImage() *SectionImage {
	if x != nil {
		return x.SectionImage
	}
	return nil
}

type Warning struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	LocalizedMessage *string `protobuf:"bytes,1,opt,name=localizedMessage" json:"localizedMessage,omitempty"`
}

func (x *Warning) Reset() {
	*x = Warning{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[70]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Warning) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Warning) ProtoMessage() {}

func (x *Warning) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[70]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Warning.ProtoReflect.Descriptor instead.
func (*Warning) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{70}
}

func (x *Warning) GetLocalizedMessage() string {
	if x != nil && x.LocalizedMessage != nil {
		return *x.LocalizedMessage
	}
	return ""
}

type AnnotationLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri          *string       `protobuf:"bytes,1,opt,name=uri" json:"uri,omitempty"`
	ResolvedLink *ResolvedLink `protobuf:"bytes,2,opt,name=resolvedLink" json:"resolvedLink,omitempty"`
	UriBackend   *int32        `protobuf:"varint,3,opt,name=uriBackend" json:"uriBackend,omitempty"`
}

func (x *AnnotationLink) Reset() {
	*x = AnnotationLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[71]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AnnotationLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AnnotationLink) ProtoMessage() {}

func (x *AnnotationLink) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[71]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AnnotationLink.ProtoReflect.Descriptor instead.
func (*AnnotationLink) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{71}
}

func (x *AnnotationLink) GetUri() string {
	if x != nil && x.Uri != nil {
		return *x.Uri
	}
	return ""
}

func (x *AnnotationLink) GetResolvedLink() *ResolvedLink {
	if x != nil {
		return x.ResolvedLink
	}
	return nil
}

func (x *AnnotationLink) GetUriBackend() int32 {
	if x != nil && x.UriBackend != nil {
		return *x.UriBackend
	}
	return 0
}

type Rated struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Label             *string `protobuf:"bytes,1,opt,name=label" json:"label,omitempty"`
	Image             *Image  `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"`
	LearnMoreHtmlLink *string `protobuf:"bytes,4,opt,name=learnMoreHtmlLink" json:"learnMoreHtmlLink,omitempty"`
}

func (x *Rated) Reset() {
	*x = Rated{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[72]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Rated) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Rated) ProtoMessage() {}

func (x *Rated) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[72]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Rated.ProtoReflect.Descriptor instead.
func (*Rated) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{72}
}

func (x *Rated) GetLabel() string {
	if x != nil && x.Label != nil {
		return *x.Label
	}
	return ""
}

func (x *Rated) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Rated) GetLearnMoreHtmlLink() string {
	if x != nil && x.LearnMoreHtmlLink != nil {
		return *x.LearnMoreHtmlLink
	}
	return ""
}

type Badge struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Major       *string     `protobuf:"bytes,1,opt,name=major" json:"major,omitempty"`
	Image       *Image      `protobuf:"bytes,2,opt,name=image" json:"image,omitempty"`
	Minor       *string     `protobuf:"bytes,3,opt,name=minor" json:"minor,omitempty"`
	MinorHtml   *string     `protobuf:"bytes,4,opt,name=minorHtml" json:"minorHtml,omitempty"`
	Link        *StreamLink `protobuf:"bytes,7,opt,name=link" json:"link,omitempty"`
	Description *string     `protobuf:"bytes,8,opt,name=description" json:"description,omitempty"`
}

func (x *Badge) Reset() {
	*x = Badge{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[73]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Badge) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Badge) ProtoMessage() {}

func (x *Badge) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[73]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Badge.ProtoReflect.Descriptor instead.
func (*Badge) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{73}
}

func (x *Badge) GetMajor() string {
	if x != nil && x.Major != nil {
		return *x.Major
	}
	return ""
}

func (x *Badge) GetImage() *Image {
	if x != nil {
		return x.Image
	}
	return nil
}

func (x *Badge) GetMinor() string {
	if x != nil && x.Minor != nil {
		return *x.Minor
	}
	return ""
}

func (x *Badge) GetMinorHtml() string {
	if x != nil && x.MinorHtml != nil {
		return *x.MinorHtml
	}
	return ""
}

func (x *Badge) GetLink() *StreamLink {
	if x != nil {
		return x.Link
	}
	return nil
}

func (x *Badge) GetDescription() string {
	if x != nil && x.Description != nil {
		return *x.Description
	}
	return ""
}

type Link struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Uri          *string       `protobuf:"bytes,1,opt,name=uri" json:"uri,omitempty"`
	ResolvedLink *ResolvedLink `protobuf:"bytes,2,opt,name=resolvedLink" json:"resolvedLink,omitempty"`
	UriBackend   *int32        `protobuf:"varint,3,opt,name=uriBackend" json:"uriBackend,omitempty"`
}

func (x *Link) Reset() {
	*x = Link{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[74]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Link) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Link) ProtoMessage() {}

func (x *Link) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[74]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Link.ProtoReflect.Descriptor instead.
func (*Link) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{74}
}

func (x *Link) GetUri() string {
	if x != nil && x.Uri != nil {
		return *x.Uri
	}
	return ""
}

func (x *Link) GetResolvedLink() *ResolvedLink {
	if x != nil {
		return x.ResolvedLink
	}
	return nil
}

func (x *Link) GetUriBackend() int32 {
	if x != nil && x.UriBackend != nil {
		return *x.UriBackend
	}
	return 0
}

type StreamLink struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Url            *string `protobuf:"bytes,1,opt,name=url" json:"url,omitempty"`
	StreamUrl      *string `protobuf:"bytes,2,opt,name=streamUrl" json:"streamUrl,omitempty"`
	SearchUrl      *string `protobuf:"bytes,3,opt,name=searchUrl" json:"searchUrl,omitempty"`
	SubCategoryUrl *string `protobuf:"bytes,5,opt,name=subCategoryUrl" json:"subCategoryUrl,omitempty"`
	SearchQuery    *string `protobuf:"bytes,11,opt,name=searchQuery" json:"searchQuery,omitempty"`
}

func (x *StreamLink) Reset() {
	*x = StreamLink{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[75]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *StreamLink) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamLink) ProtoMessage() {}

func (x *StreamLink) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[75]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamLink.ProtoReflect.Descriptor instead.
func (*StreamLink) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{75}
}

func (x *StreamLink) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

func (x *StreamLink) GetStreamUrl() string {
	if x != nil && x.StreamUrl != nil {
		return *x.StreamUrl
	}
	return ""
}

func (x *StreamLink) GetSearchUrl() string {
	if x != nil && x.SearchUrl != nil {
		return *x.SearchUrl
	}
	return ""
}

func (x *StreamLink) GetSubCategoryUrl() string {
	if x != nil && x.SubCategoryUrl != nil {
		return *x.SubCategoryUrl
	}
	return ""
}

func (x *StreamLink) GetSearchQuery() string {
	if x != nil && x.SearchQuery != nil {
		return *x.SearchQuery
	}
	return ""
}

type Chip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Title *string `protobuf:"bytes,1,opt,name=title" json:"title,omitempty"`
}

func (x *Chip) Reset() {
	*x = Chip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[76]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chip) ProtoMessage() {}

func (x *Chip) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[76]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chip.ProtoReflect.Descriptor instead.
func (*Chip) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{76}
}

func (x *Chip) GetTitle() string {
	if x != nil && x.Title != nil {
		return *x.Title
	}
	return ""
}

type CategoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Category    *string `protobuf:"bytes,1,opt,name=category" json:"category,omitempty"`
	AppCategory *string `protobuf:"bytes,2,opt,name=appCategory" json:"appCategory,omitempty"`
}

func (x *CategoryInfo) Reset() {
	*x = CategoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[77]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CategoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CategoryInfo) ProtoMessage() {}

func (x *CategoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[77]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CategoryInfo.ProtoReflect.Descriptor instead.
func (*CategoryInfo) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{77}
}

func (x *CategoryInfo) GetCategory() string {
	if x != nil && x.Category != nil {
		return *x.Category
	}
	return ""
}

func (x *CategoryInfo) GetAppCategory() string {
	if x != nil && x.AppCategory != nil {
		return *x.AppCategory
	}
	return ""
}

type LibraryAppDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CertificateHash                *string `protobuf:"bytes,2,opt,name=certificateHash" json:"certificateHash,omitempty"`
	RefundTimeoutTimestamp         *int64  `protobuf:"varint,3,opt,name=refundTimeoutTimestamp" json:"refundTimeoutTimestamp,omitempty"`
	PostDeliveryRefundWindowMillis *int64  `protobuf:"varint,4,opt,name=postDeliveryRefundWindowMillis" json:"postDeliveryRefundWindowMillis,omitempty"`
}

func (x *LibraryAppDetails) Reset() {
	*x = LibraryAppDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[78]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LibraryAppDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LibraryAppDetails) ProtoMessage() {}

func (x *LibraryAppDetails) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[78]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LibraryAppDetails.ProtoReflect.Descriptor instead.
func (*LibraryAppDetails) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{78}
}

func (x *LibraryAppDetails) GetCertificateHash() string {
	if x != nil && x.CertificateHash != nil {
		return *x.CertificateHash
	}
	return ""
}

func (x *LibraryAppDetails) GetRefundTimeoutTimestamp() int64 {
	if x != nil && x.RefundTimeoutTimestamp != nil {
		return *x.RefundTimeoutTimestamp
	}
	return 0
}

func (x *LibraryAppDetails) GetPostDeliveryRefundWindowMillis() int64 {
	if x != nil && x.PostDeliveryRefundWindowMillis != nil {
		return *x.PostDeliveryRefundWindowMillis
	}
	return 0
}

type LibraryInAppDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SignedPurchaseData *string `protobuf:"bytes,1,opt,name=signedPurchaseData" json:"signedPurchaseData,omitempty"`
	Signature          *string `protobuf:"bytes,2,opt,name=signature" json:"signature,omitempty"`
}

func (x *LibraryInAppDetails) Reset() {
	*x = LibraryInAppDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[79]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LibraryInAppDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LibraryInAppDetails) ProtoMessage() {}

func (x *LibraryInAppDetails) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[79]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LibraryInAppDetails.ProtoReflect.Descriptor instead.
func (*LibraryInAppDetails) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{79}
}

func (x *LibraryInAppDetails) GetSignedPurchaseData() string {
	if x != nil && x.SignedPurchaseData != nil {
		return *x.SignedPurchaseData
	}
	return ""
}

func (x *LibraryInAppDetails) GetSignature() string {
	if x != nil && x.Signature != nil {
		return *x.Signature
	}
	return ""
}

type LibraryMutation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DocId               *DocId                      `protobuf:"bytes,1,opt,name=DocId" json:"DocId,omitempty"`
	OfferType           *int32                      `protobuf:"varint,2,opt,name=offerType" json:"offerType,omitempty"`
	DocumentHash        *int64                      `protobuf:"varint,3,opt,name=documentHash" json:"documentHash,omitempty"`
	Deleted             *bool                       `protobuf:"varint,4,opt,name=deleted" json:"deleted,omitempty"`
	AppDetails          *LibraryAppDetails          `protobuf:"bytes,5,opt,name=appDetails" json:"appDetails,omitempty"`
	SubscriptionDetails *LibrarySubscriptionDetails `protobuf:"bytes,6,opt,name=subscriptionDetails" json:"subscriptionDetails,omitempty"`
	InAppDetails        *LibraryInAppDetails        `protobuf:"bytes,7,opt,name=inAppDetails" json:"inAppDetails,omitempty"`
}

func (x *LibraryMutation) Reset() {
	*x = LibraryMutation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[80]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LibraryMutation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LibraryMutation) ProtoMessage() {}

func (x *LibraryMutation) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[80]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LibraryMutation.ProtoReflect.Descriptor instead.
func (*LibraryMutation) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{80}
}

func (x *LibraryMutation) GetDocId() *DocId {
	if x != nil {
		return x.DocId
	}
	return nil
}

func (x *LibraryMutation) GetOfferType() int32 {
	if x != nil && x.OfferType != nil {
		return *x.OfferType
	}
	return 0
}

func (x *LibraryMutation) GetDocumentHash() int64 {
	if x != nil && x.DocumentHash != nil {
		return *x.DocumentHash
	}
	return 0
}

func (x *LibraryMutation) GetDeleted() bool {
	if x != nil && x.Deleted != nil {
		return *x.Deleted
	}
	return false
}

func (x *LibraryMutation) GetAppDetails() *LibraryAppDetails {
	if x != nil {
		return x.AppDetails
	}
	return nil
}

func (x *LibraryMutation) GetSubscriptionDetails() *LibrarySubscriptionDetails {
	if x != nil {
		return x.SubscriptionDetails
	}
	return nil
}

func (x *LibraryMutation) GetInAppDetails() *LibraryInAppDetails {
	if x != nil {
		return x.InAppDetails
	}
	return nil
}

type LibrarySubscriptionDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	InitiationTimestamp *int64  `protobuf:"varint,1,opt,name=initiationTimestamp" json:"initiationTimestamp,omitempty"`
	ValidUntilTimestamp *int64  `protobuf:"varint,2,opt,name=validUntilTimestamp" json:"validUntilTimestamp,omitempty"`
	AutoRenewing        *bool   `protobuf:"varint,3,opt,name=autoRenewing" json:"autoRenewing,omitempty"`
	TrialUntilTimestamp *int64  `protobuf:"varint,4,opt,name=trialUntilTimestamp" json:"trialUntilTimestamp,omitempty"`
	SignedPurchaseData  *string `protobuf:"bytes,5,opt,name=signedPurchaseData" json:"signedPurchaseData,omitempty"`
	Signature           *string `protobuf:"bytes,6,opt,name=signature" json:"signature,omitempty"`
}

func (x *LibrarySubscriptionDetails) Reset() {
	*x = LibrarySubscriptionDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[81]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LibrarySubscriptionDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LibrarySubscriptionDetails) ProtoMessage() {}

func (x *LibrarySubscriptionDetails) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[81]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LibrarySubscriptionDetails.ProtoReflect.Descriptor instead.
func (*LibrarySubscriptionDetails) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{81}
}

func (x *LibrarySubscriptionDetails) GetInitiationTimestamp() int64 {
	if x != nil && x.InitiationTimestamp != nil {
		return *x.InitiationTimestamp
	}
	return 0
}

func (x *LibrarySubscriptionDetails) GetValidUntilTimestamp() int64 {
	if x != nil && x.ValidUntilTimestamp != nil {
		return *x.ValidUntilTimestamp
	}
	return 0
}

func (x *LibrarySubscriptionDetails) GetAutoRenewing() bool {
	if x != nil && x.AutoRenewing != nil {
		return *x.AutoRenewing
	}
	return false
}

func (x *LibrarySubscriptionDetails) GetTrialUntilTimestamp() int64 {
	if x != nil && x.TrialUntilTimestamp != nil {
		return *x.TrialUntilTimestamp
	}
	return 0
}

func (x *LibrarySubscriptionDetails) GetSignedPurchaseData() string {
	if x != nil && x.SignedPurchaseData != nil {
		return *x.SignedPurchaseData
	}
	return ""
}

func (x *LibrarySubscriptionDetails) GetSignature() string {
	if x != nil && x.Signature != nil {
		return *x.Signature
	}
	return ""
}

type LibraryUpdate struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status      *int32             `protobuf:"varint,1,opt,name=status" json:"status,omitempty"`
	Corpus      *int32             `protobuf:"varint,2,opt,name=corpus" json:"corpus,omitempty"`
	ServerToken []byte             `protobuf:"bytes,3,opt,name=serverToken" json:"serverToken,omitempty"`
	Mutation    []*LibraryMutation `protobuf:"bytes,4,rep,name=mutation" json:"mutation,omitempty"`
	HasMore     *bool              `protobuf:"varint,5,opt,name=hasMore" json:"hasMore,omitempty"`
	LibraryId   *string            `protobuf:"bytes,6,opt,name=libraryId" json:"libraryId,omitempty"`
}

func (x *LibraryUpdate) Reset() {
	*x = LibraryUpdate{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[82]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LibraryUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LibraryUpdate) ProtoMessage() {}

func (x *LibraryUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[82]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LibraryUpdate.ProtoReflect.Descriptor instead.
func (*LibraryUpdate) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{82}
}

func (x *LibraryUpdate) GetStatus() int32 {
	if x != nil && x.Status != nil {
		return *x.Status
	}
	return 0
}

func (x *LibraryUpdate) GetCorpus() int32 {
	if x != nil && x.Corpus != nil {
		return *x.Corpus
	}
	return 0
}

func (x *LibraryUpdate) GetServerToken() []byte {
	if x != nil {
		return x.ServerToken
	}
	return nil
}

func (x *LibraryUpdate) GetMutation() []*LibraryMutation {
	if x != nil {
		return x.Mutation
	}
	return nil
}

func (x *LibraryUpdate) GetHasMore() bool {
	if x != nil && x.HasMore != nil {
		return *x.HasMore
	}
	return false
}

func (x *LibraryUpdate) GetLibraryId() string {
	if x != nil && x.LibraryId != nil {
		return *x.LibraryId
	}
	return ""
}

type Tip struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TipId           *string  `protobuf:"bytes,1,opt,name=tipId" json:"tipId,omitempty"`
	Text            *string  `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	Polarity        *int32   `protobuf:"varint,3,opt,name=polarity" json:"polarity,omitempty"`
	ReviewCount     *int64   `protobuf:"varint,4,opt,name=reviewCount" json:"reviewCount,omitempty"`
	Language        *string  `protobuf:"bytes,5,opt,name=language" json:"language,omitempty"`
	SnippetReviewId []string `protobuf:"bytes,6,rep,name=snippetReviewId" json:"snippetReviewId,omitempty"`
}

func (x *Tip) Reset() {
	*x = Tip{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[83]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Tip) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Tip) ProtoMessage() {}

func (x *Tip) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[83]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Tip.ProtoReflect.Descriptor instead.
func (*Tip) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{83}
}

func (x *Tip) GetTipId() string {
	if x != nil && x.TipId != nil {
		return *x.TipId
	}
	return ""
}

func (x *Tip) GetText() string {
	if x != nil && x.Text != nil {
		return *x.Text
	}
	return ""
}

func (x *Tip) GetPolarity() int32 {
	if x != nil && x.Polarity != nil {
		return *x.Polarity
	}
	return 0
}

func (x *Tip) GetReviewCount() int64 {
	if x != nil && x.ReviewCount != nil {
		return *x.ReviewCount
	}
	return 0
}

func (x *Tip) GetLanguage() string {
	if x != nil && x.Language != nil {
		return *x.Language
	}
	return ""
}

func (x *Tip) GetSnippetReviewId() []string {
	if x != nil {
		return x.SnippetReviewId
	}
	return nil
}

type TocResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TosContent                     *string `protobuf:"bytes,3,opt,name=tosContent" json:"tosContent,omitempty"`
	HomeUrl                        *string `protobuf:"bytes,4,opt,name=homeUrl" json:"homeUrl,omitempty"`
	TosCheckboxTextMarketingEmails *string `protobuf:"bytes,6,opt,name=tosCheckboxTextMarketingEmails" json:"tosCheckboxTextMarketingEmails,omitempty"`
	TosToken                       *string `protobuf:"bytes,7,opt,name=tosToken" json:"tosToken,omitempty"`
	IconOverrideUrl                *string `protobuf:"bytes,9,opt,name=iconOverrideUrl" json:"iconOverrideUrl,omitempty"`
	RequiresUploadDeviceConfig     *bool   `protobuf:"varint,11,opt,name=requiresUploadDeviceConfig" json:"requiresUploadDeviceConfig,omitempty"`
	RecsWidgetUrl                  *string `protobuf:"bytes,13,opt,name=recsWidgetUrl" json:"recsWidgetUrl,omitempty"`
	SocialHomeUrl                  *string `protobuf:"bytes,15,opt,name=socialHomeUrl" json:"socialHomeUrl,omitempty"`
	AgeVerificationRequired        *bool   `protobuf:"varint,16,opt,name=ageVerificationRequired" json:"ageVerificationRequired,omitempty"`
	GPlusSignupEnabled             *bool   `protobuf:"varint,17,opt,name=gPlusSignupEnabled" json:"gPlusSignupEnabled,omitempty"`
	RedeemEnabled                  *bool   `protobuf:"varint,18,opt,name=redeemEnabled" json:"redeemEnabled,omitempty"`
	HelpUrl                        *string `protobuf:"bytes,19,opt,name=helpUrl" json:"helpUrl,omitempty"`
	ThemeId                        *int32  `protobuf:"varint,20,opt,name=themeId" json:"themeId,omitempty"`
	EntertainmentHomeUrl           *string `protobuf:"bytes,21,opt,name=entertainmentHomeUrl" json:"entertainmentHomeUrl,omitempty"`
	Cookie                         *string `protobuf:"bytes,22,opt,name=cookie" json:"cookie,omitempty"`
}

func (x *TocResponse) Reset() {
	*x = TocResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[84]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TocResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TocResponse) ProtoMessage() {}

func (x *TocResponse) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[84]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TocResponse.ProtoReflect.Descriptor instead.
func (*TocResponse) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{84}
}

func (x *TocResponse) GetTosContent() string {
	if x != nil && x.TosContent != nil {
		return *x.TosContent
	}
	return ""
}

func (x *TocResponse) GetHomeUrl() string {
	if x != nil && x.HomeUrl != nil {
		return *x.HomeUrl
	}
	return ""
}

func (x *TocResponse) GetTosCheckboxTextMarketingEmails() string {
	if x != nil && x.TosCheckboxTextMarketingEmails != nil {
		return *x.TosCheckboxTextMarketingEmails
	}
	return ""
}

func (x *TocResponse) GetTosToken() string {
	if x != nil && x.TosToken != nil {
		return *x.TosToken
	}
	return ""
}

func (x *TocResponse) GetIconOverrideUrl() string {
	if x != nil && x.IconOverrideUrl != nil {
		return *x.IconOverrideUrl
	}
	return ""
}

func (x *TocResponse) GetRequiresUploadDeviceConfig() bool {
	if x != nil && x.RequiresUploadDeviceConfig != nil {
		return *x.RequiresUploadDeviceConfig
	}
	return false
}

func (x *TocResponse) GetRecsWidgetUrl() string {
	if x != nil && x.RecsWidgetUrl != nil {
		return *x.RecsWidgetUrl
	}
	return ""
}

func (x *TocResponse) GetSocialHomeUrl() string {
	if x != nil && x.SocialHomeUrl != nil {
		return *x.SocialHomeUrl
	}
	return ""
}

func (x *TocResponse) GetAgeVerificationRequired() bool {
	if x != nil && x.AgeVerificationRequired != nil {
		return *x.AgeVerificationRequired
	}
	return false
}

func (x *TocResponse) GetGPlusSignupEnabled() bool {
	if x != nil && x.GPlusSignupEnabled != nil {
		return *x.GPlusSignupEnabled
	}
	return false
}

func (x *TocResponse) GetRedeemEnabled() bool {
	if x != nil && x.RedeemEnabled != nil {
		return *x.RedeemEnabled
	}
	return false
}

func (x *TocResponse) GetHelpUrl() string {
	if x != nil && x.HelpUrl != nil {
		return *x.HelpUrl
	}
	return ""
}

func (x *TocResponse) GetThemeId() int32 {
	if x != nil && x.ThemeId != nil {
		return *x.ThemeId
	}
	return 0
}

func (x *TocResponse) GetEntertainmentHomeUrl() string {
	if x != nil && x.EntertainmentHomeUrl != nil {
		return *x.EntertainmentHomeUrl
	}
	return ""
}

func (x *TocResponse) GetCookie() string {
	if x != nil && x.Cookie != nil {
		return *x.Cookie
	}
	return ""
}

type Payload struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DetailsResponse            *DetailsResponse            `protobuf:"bytes,2,opt,name=detailsResponse" json:"detailsResponse,omitempty"`
	BuyResponse                *BuyResponse                `protobuf:"bytes,4,opt,name=buyResponse" json:"buyResponse,omitempty"`
	TocResponse                *TocResponse                `protobuf:"bytes,6,opt,name=tocResponse" json:"tocResponse,omitempty"`
	PurchaseStatusResponse     *PurchaseStatusResponse     `protobuf:"bytes,8,opt,name=purchaseStatusResponse" json:"purchaseStatusResponse,omitempty"`
	BulkDetailsResponse        *BulkDetailsResponse        `protobuf:"bytes,19,opt,name=bulkDetailsResponse" json:"bulkDetailsResponse,omitempty"`
	DeliveryResponse           *DeliveryResponse           `protobuf:"bytes,21,opt,name=deliveryResponse" json:"deliveryResponse,omitempty"`
	AndroidCheckinResponse     *AndroidCheckinResponse     `protobuf:"bytes,26,opt,name=androidCheckinResponse" json:"androidCheckinResponse,omitempty"`
	UploadDeviceConfigResponse *UploadDeviceConfigResponse `protobuf:"bytes,28,opt,name=uploadDeviceConfigResponse" json:"uploadDeviceConfigResponse,omitempty"`
	ConsumePurchaseResponse    *ConsumePurchaseResponse    `protobuf:"bytes,30,opt,name=consumePurchaseResponse" json:"consumePurchaseResponse,omitempty"`
	TestingProgramResponse     *TestingProgramResponse     `protobuf:"bytes,80,opt,name=testingProgramResponse" json:"testingProgramResponse,omitempty"`
}

func (x *Payload) Reset() {
	*x = Payload{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[85]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Payload) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Payload) ProtoMessage() {}

func (x *Payload) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[85]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Payload.ProtoReflect.Descriptor instead.
func (*Payload) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{85}
}

func (x *Payload) GetDetailsResponse() *DetailsResponse {
	if x != nil {
		return x.DetailsResponse
	}
	return nil
}

func (x *Payload) GetBuyResponse() *BuyResponse {
	if x != nil {
		return x.BuyResponse
	}
	return nil
}

func (x *Payload) GetTocResponse() *TocResponse {
	if x != nil {
		return x.TocResponse
	}
	return nil
}

func (x *Payload) GetPurchaseStatusResponse() *PurchaseStatusResponse {
	if x != nil {
		return x.PurchaseStatusResponse
	}
	return nil
}

func (x *Payload) GetBulkDetailsResponse() *BulkDetailsResponse {
	if x != nil {
		return x.BulkDetailsResponse
	}
	return nil
}

func (x *Payload) GetDeliveryResponse() *DeliveryResponse {
	if x != nil {
		return x.DeliveryResponse
	}
	return nil
}

func (x *Payload) GetAndroidCheckinResponse() *AndroidCheckinResponse {
	if x != nil {
		return x.AndroidCheckinResponse
	}
	return nil
}

func (x *Payload) GetUploadDeviceConfigResponse() *UploadDeviceConfigResponse {
	if x != nil {
		return x.UploadDeviceConfigResponse
	}
	return nil
}

func (x *Payload) GetConsumePurchaseResponse() *ConsumePurchaseResponse {
	if x != nil {
		return x.ConsumePurchaseResponse
	}
	return nil
}

func (x *Payload) GetTestingProgramResponse() *TestingProgramResponse {
	if x != nil {
		return x.TestingProgramResponse
	}
	return nil
}

type ResponseWrapper struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Payload *Payload `protobuf:"bytes,1,opt,name=payload" json:"payload,omitempty"`
}

func (x *ResponseWrapper) Reset() {
	*x = ResponseWrapper{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[86]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResponseWrapper) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResponseWrapper) ProtoMessage() {}

func (x *ResponseWrapper) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[86]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResponseWrapper.ProtoReflect.Descriptor instead.
func (*ResponseWrapper) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{86}
}

func (x *ResponseWrapper) GetPayload() *Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

type TestingProgramResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Result *TestingProgramResult `protobuf:"bytes,2,opt,name=result" json:"result,omitempty"`
}

func (x *TestingProgramResponse) Reset() {
	*x = TestingProgramResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[87]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestingProgramResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestingProgramResponse) ProtoMessage() {}

func (x *TestingProgramResponse) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[87]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestingProgramResponse.ProtoReflect.Descriptor instead.
func (*TestingProgramResponse) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{87}
}

func (x *TestingProgramResponse) GetResult() *TestingProgramResult {
	if x != nil {
		return x.Result
	}
	return nil
}

type TestingProgramResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Details *TestingProgramDetails `protobuf:"bytes,4,opt,name=details" json:"details,omitempty"`
}

func (x *TestingProgramResult) Reset() {
	*x = TestingProgramResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[88]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestingProgramResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestingProgramResult) ProtoMessage() {}

func (x *TestingProgramResult) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[88]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestingProgramResult.ProtoReflect.Descriptor instead.
func (*TestingProgramResult) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{88}
}

func (x *TestingProgramResult) GetDetails() *TestingProgramDetails {
	if x != nil {
		return x.Details
	}
	return nil
}

type TestingProgramDetails struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Subscribed   *bool  `protobuf:"varint,2,opt,name=subscribed" json:"subscribed,omitempty"`
	Id           *int64 `protobuf:"varint,3,opt,name=id" json:"id,omitempty"`
	Unsubscribed *bool  `protobuf:"varint,4,opt,name=unsubscribed" json:"unsubscribed,omitempty"`
}

func (x *TestingProgramDetails) Reset() {
	*x = TestingProgramDetails{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[89]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestingProgramDetails) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestingProgramDetails) ProtoMessage() {}

func (x *TestingProgramDetails) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[89]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestingProgramDetails.ProtoReflect.Descriptor instead.
func (*TestingProgramDetails) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{89}
}

func (x *TestingProgramDetails) GetSubscribed() bool {
	if x != nil && x.Subscribed != nil {
		return *x.Subscribed
	}
	return false
}

func (x *TestingProgramDetails) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return 0
}

func (x *TestingProgramDetails) GetUnsubscribed() bool {
	if x != nil && x.Unsubscribed != nil {
		return *x.Unsubscribed
	}
	return false
}

type LogRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Timestamp                 *int64  `protobuf:"varint,1,opt,name=timestamp" json:"timestamp,omitempty"`
	DownloadConfirmationQuery *string `protobuf:"bytes,2,opt,name=downloadConfirmationQuery" json:"downloadConfirmationQuery,omitempty"`
}

func (x *LogRequest) Reset() {
	*x = LogRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[90]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogRequest) ProtoMessage() {}

func (x *LogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[90]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogRequest.ProtoReflect.Descriptor instead.
func (*LogRequest) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{90}
}

func (x *LogRequest) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *LogRequest) GetDownloadConfirmationQuery() string {
	if x != nil && x.DownloadConfirmationQuery != nil {
		return *x.DownloadConfirmationQuery
	}
	return ""
}

type TestingProgramRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PackageName *string `protobuf:"bytes,1,opt,name=packageName" json:"packageName,omitempty"`
	Subscribe   *bool   `protobuf:"varint,2,opt,name=subscribe" json:"subscribe,omitempty"`
}

func (x *TestingProgramRequest) Reset() {
	*x = TestingProgramRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[91]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TestingProgramRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TestingProgramRequest) ProtoMessage() {}

func (x *TestingProgramRequest) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[91]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TestingProgramRequest.ProtoReflect.Descriptor instead.
func (*TestingProgramRequest) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{91}
}

func (x *TestingProgramRequest) GetPackageName() string {
	if x != nil && x.PackageName != nil {
		return *x.PackageName
	}
	return ""
}

func (x *TestingProgramRequest) GetSubscribe() bool {
	if x != nil && x.Subscribe != nil {
		return *x.Subscribe
	}
	return false
}

type UploadDeviceConfigRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	DeviceConfiguration *DeviceConfigurationProto `protobuf:"bytes,1,opt,name=deviceConfiguration" json:"deviceConfiguration,omitempty"`
	Manufacturer        *string                   `protobuf:"bytes,2,opt,name=manufacturer" json:"manufacturer,omitempty"`
	GcmRegistrationId   *string                   `protobuf:"bytes,3,opt,name=gcmRegistrationId" json:"gcmRegistrationId,omitempty"`
}

func (x *UploadDeviceConfigRequest) Reset() {
	*x = UploadDeviceConfigRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[92]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDeviceConfigRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDeviceConfigRequest) ProtoMessage() {}

func (x *UploadDeviceConfigRequest) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[92]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDeviceConfigRequest.ProtoReflect.Descriptor instead.
func (*UploadDeviceConfigRequest) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{92}
}

func (x *UploadDeviceConfigRequest) GetDeviceConfiguration() *DeviceConfigurationProto {
	if x != nil {
		return x.DeviceConfiguration
	}
	return nil
}

func (x *UploadDeviceConfigRequest) GetManufacturer() string {
	if x != nil && x.Manufacturer != nil {
		return *x.Manufacturer
	}
	return ""
}

func (x *UploadDeviceConfigRequest) GetGcmRegistrationId() string {
	if x != nil && x.GcmRegistrationId != nil {
		return *x.GcmRegistrationId
	}
	return ""
}

type UploadDeviceConfigResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UploadDeviceConfigToken *string `protobuf:"bytes,1,opt,name=uploadDeviceConfigToken" json:"uploadDeviceConfigToken,omitempty"`
}

func (x *UploadDeviceConfigResponse) Reset() {
	*x = UploadDeviceConfigResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[93]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UploadDeviceConfigResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadDeviceConfigResponse) ProtoMessage() {}

func (x *UploadDeviceConfigResponse) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[93]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadDeviceConfigResponse.ProtoReflect.Descriptor instead.
func (*UploadDeviceConfigResponse) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{93}
}

func (x *UploadDeviceConfigResponse) GetUploadDeviceConfigToken() string {
	if x != nil && x.UploadDeviceConfigToken != nil {
		return *x.UploadDeviceConfigToken
	}
	return ""
}

type AndroidCheckinRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Imei                *string                   `protobuf:"bytes,1,opt,name=imei" json:"imei,omitempty"`
	Id                  *int64                    `protobuf:"varint,2,opt,name=id,def=0" json:"id,omitempty"`
	Digest              *string                   `protobuf:"bytes,3,opt,name=digest" json:"digest,omitempty"`
	Checkin             *AndroidCheckinProto      `protobuf:"bytes,4,opt,name=checkin" json:"checkin,omitempty"`
	DesiredBuild        *string                   `protobuf:"bytes,5,opt,name=desiredBuild" json:"desiredBuild,omitempty"`
	Locale              *string                   `protobuf:"bytes,6,opt,name=locale" json:"locale,omitempty"`
	LoggingId           *int64                    `protobuf:"varint,7,opt,name=loggingId" json:"loggingId,omitempty"`
	MarketCheckin       *string                   `protobuf:"bytes,8,opt,name=marketCheckin" json:"marketCheckin,omitempty"`
	MacAddr             []string                  `protobuf:"bytes,9,rep,name=macAddr" json:"macAddr,omitempty"`
	Meid                *string                   `protobuf:"bytes,10,opt,name=meid" json:"meid,omitempty"`
	AccountCookie       []string                  `protobuf:"bytes,11,rep,name=accountCookie" json:"accountCookie,omitempty"`
	TimeZone            *string                   `protobuf:"bytes,12,opt,name=timeZone" json:"timeZone,omitempty"`
	SecurityToken       *uint64                   `protobuf:"fixed64,13,opt,name=securityToken" json:"securityToken,omitempty"`
	Version             *int32                    `protobuf:"varint,14,opt,name=version" json:"version,omitempty"`
	OtaCert             []string                  `protobuf:"bytes,15,rep,name=otaCert" json:"otaCert,omitempty"`
	SerialNumber        *string                   `protobuf:"bytes,16,opt,name=serialNumber" json:"serialNumber,omitempty"`
	Esn                 *string                   `protobuf:"bytes,17,opt,name=esn" json:"esn,omitempty"`
	DeviceConfiguration *DeviceConfigurationProto `protobuf:"bytes,18,opt,name=deviceConfiguration" json:"deviceConfiguration,omitempty"`
	MacAddrType         []string                  `protobuf:"bytes,19,rep,name=macAddrType" json:"macAddrType,omitempty"`
	Fragment            *int32                    `protobuf:"varint,20,opt,name=fragment" json:"fragment,omitempty"`
	UserName            *string                   `protobuf:"bytes,21,opt,name=userName" json:"userName,omitempty"`
	UserSerialNumber    *int32                    `protobuf:"varint,22,opt,name=userSerialNumber" json:"userSerialNumber,omitempty"`
}

// Default values for AndroidCheckinRequest fields.
const (
	Default_AndroidCheckinRequest_Id = int64(0)
)

func (x *AndroidCheckinRequest) Reset() {
	*x = AndroidCheckinRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[94]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidCheckinRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidCheckinRequest) ProtoMessage() {}

func (x *AndroidCheckinRequest) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[94]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidCheckinRequest.ProtoReflect.Descriptor instead.
func (*AndroidCheckinRequest) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{94}
}

func (x *AndroidCheckinRequest) GetImei() string {
	if x != nil && x.Imei != nil {
		return *x.Imei
	}
	return ""
}

func (x *AndroidCheckinRequest) GetId() int64 {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return Default_AndroidCheckinRequest_Id
}

func (x *AndroidCheckinRequest) GetDigest() string {
	if x != nil && x.Digest != nil {
		return *x.Digest
	}
	return ""
}

func (x *AndroidCheckinRequest) GetCheckin() *AndroidCheckinProto {
	if x != nil {
		return x.Checkin
	}
	return nil
}

func (x *AndroidCheckinRequest) GetDesiredBuild() string {
	if x != nil && x.DesiredBuild != nil {
		return *x.DesiredBuild
	}
	return ""
}

func (x *AndroidCheckinRequest) GetLocale() string {
	if x != nil && x.Locale != nil {
		return *x.Locale
	}
	return ""
}

func (x *AndroidCheckinRequest) GetLoggingId() int64 {
	if x != nil && x.LoggingId != nil {
		return *x.LoggingId
	}
	return 0
}

func (x *AndroidCheckinRequest) GetMarketCheckin() string {
	if x != nil && x.MarketCheckin != nil {
		return *x.MarketCheckin
	}
	return ""
}

func (x *AndroidCheckinRequest) GetMacAddr() []string {
	if x != nil {
		return x.MacAddr
	}
	return nil
}

func (x *AndroidCheckinRequest) GetMeid() string {
	if x != nil && x.Meid != nil {
		return *x.Meid
	}
	return ""
}

func (x *AndroidCheckinRequest) GetAccountCookie() []string {
	if x != nil {
		return x.AccountCookie
	}
	return nil
}

func (x *AndroidCheckinRequest) GetTimeZone() string {
	if x != nil && x.TimeZone != nil {
		return *x.TimeZone
	}
	return ""
}

func (x *AndroidCheckinRequest) GetSecurityToken() uint64 {
	if x != nil && x.SecurityToken != nil {
		return *x.SecurityToken
	}
	return 0
}

func (x *AndroidCheckinRequest) GetVersion() int32 {
	if x != nil && x.Version != nil {
		return *x.Version
	}
	return 0
}

func (x *AndroidCheckinRequest) GetOtaCert() []string {
	if x != nil {
		return x.OtaCert
	}
	return nil
}

func (x *AndroidCheckinRequest) GetSerialNumber() string {
	if x != nil && x.SerialNumber != nil {
		return *x.SerialNumber
	}
	return ""
}

func (x *AndroidCheckinRequest) GetEsn() string {
	if x != nil && x.Esn != nil {
		return *x.Esn
	}
	return ""
}

func (x *AndroidCheckinRequest) GetDeviceConfiguration() *DeviceConfigurationProto {
	if x != nil {
		return x.DeviceConfiguration
	}
	return nil
}

func (x *AndroidCheckinRequest) GetMacAddrType() []string {
	if x != nil {
		return x.MacAddrType
	}
	return nil
}

func (x *AndroidCheckinRequest) GetFragment() int32 {
	if x != nil && x.Fragment != nil {
		return *x.Fragment
	}
	return 0
}

func (x *AndroidCheckinRequest) GetUserName() string {
	if x != nil && x.UserName != nil {
		return *x.UserName
	}
	return ""
}

func (x *AndroidCheckinRequest) GetUserSerialNumber() int32 {
	if x != nil && x.UserSerialNumber != nil {
		return *x.UserSerialNumber
	}
	return 0
}

type AndroidCheckinResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatsOk                       *bool    `protobuf:"varint,1,opt,name=statsOk" json:"statsOk,omitempty"`
	TimeMsec                      *int64   `protobuf:"varint,3,opt,name=timeMsec" json:"timeMsec,omitempty"`
	Digest                        *string  `protobuf:"bytes,4,opt,name=digest" json:"digest,omitempty"`
	MarketOk                      *bool    `protobuf:"varint,6,opt,name=marketOk" json:"marketOk,omitempty"`
	AndroidId                     *uint64  `protobuf:"fixed64,7,opt,name=androidId" json:"androidId,omitempty"`
	SecurityToken                 *uint64  `protobuf:"fixed64,8,opt,name=securityToken" json:"securityToken,omitempty"`
	SettingsDiff                  *bool    `protobuf:"varint,9,opt,name=settingsDiff" json:"settingsDiff,omitempty"`
	DeleteSetting                 []string `protobuf:"bytes,10,rep,name=deleteSetting" json:"deleteSetting,omitempty"`
	DeviceCheckinConsistencyToken *string  `protobuf:"bytes,12,opt,name=deviceCheckinConsistencyToken" json:"deviceCheckinConsistencyToken,omitempty"`
}

func (x *AndroidCheckinResponse) Reset() {
	*x = AndroidCheckinResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[95]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidCheckinResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidCheckinResponse) ProtoMessage() {}

func (x *AndroidCheckinResponse) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[95]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidCheckinResponse.ProtoReflect.Descriptor instead.
func (*AndroidCheckinResponse) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{95}
}

func (x *AndroidCheckinResponse) GetStatsOk() bool {
	if x != nil && x.StatsOk != nil {
		return *x.StatsOk
	}
	return false
}

func (x *AndroidCheckinResponse) GetTimeMsec() int64 {
	if x != nil && x.TimeMsec != nil {
		return *x.TimeMsec
	}
	return 0
}

func (x *AndroidCheckinResponse) GetDigest() string {
	if x != nil && x.Digest != nil {
		return *x.Digest
	}
	return ""
}

func (x *AndroidCheckinResponse) GetMarketOk() bool {
	if x != nil && x.MarketOk != nil {
		return *x.MarketOk
	}
	return false
}

func (x *AndroidCheckinResponse) GetAndroidId() uint64 {
	if x != nil && x.AndroidId != nil {
		return *x.AndroidId
	}
	return 0
}

func (x *AndroidCheckinResponse) GetSecurityToken() uint64 {
	if x != nil && x.SecurityToken != nil {
		return *x.SecurityToken
	}
	return 0
}

func (x *AndroidCheckinResponse) GetSettingsDiff() bool {
	if x != nil && x.SettingsDiff != nil {
		return *x.SettingsDiff
	}
	return false
}

func (x *AndroidCheckinResponse) GetDeleteSetting() []string {
	if x != nil {
		return x.DeleteSetting
	}
	return nil
}

func (x *AndroidCheckinResponse) GetDeviceCheckinConsistencyToken() string {
	if x != nil && x.DeviceCheckinConsistencyToken != nil {
		return *x.DeviceCheckinConsistencyToken
	}
	return ""
}

type AndroidBuildProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             *string `protobuf:"bytes,1,opt,name=id" json:"id,omitempty"`
	Product        *string `protobuf:"bytes,2,opt,name=product" json:"product,omitempty"`
	Carrier        *string `protobuf:"bytes,3,opt,name=carrier" json:"carrier,omitempty"`
	Radio          *string `protobuf:"bytes,4,opt,name=radio" json:"radio,omitempty"`
	Bootloader     *string `protobuf:"bytes,5,opt,name=bootloader" json:"bootloader,omitempty"`
	Client         *string `protobuf:"bytes,6,opt,name=client" json:"client,omitempty"`
	Timestamp      *int64  `protobuf:"varint,7,opt,name=timestamp" json:"timestamp,omitempty"`
	GoogleServices *int32  `protobuf:"varint,8,opt,name=googleServices" json:"googleServices,omitempty"`
	Device         *string `protobuf:"bytes,9,opt,name=device" json:"device,omitempty"`
	SdkVersion     *int32  `protobuf:"varint,10,opt,name=sdkVersion" json:"sdkVersion,omitempty"`
	Model          *string `protobuf:"bytes,11,opt,name=model" json:"model,omitempty"`
	Manufacturer   *string `protobuf:"bytes,12,opt,name=manufacturer" json:"manufacturer,omitempty"`
	BuildProduct   *string `protobuf:"bytes,13,opt,name=buildProduct" json:"buildProduct,omitempty"`
	OtaInstalled   *bool   `protobuf:"varint,14,opt,name=otaInstalled" json:"otaInstalled,omitempty"`
}

func (x *AndroidBuildProto) Reset() {
	*x = AndroidBuildProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[96]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidBuildProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidBuildProto) ProtoMessage() {}

func (x *AndroidBuildProto) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[96]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidBuildProto.ProtoReflect.Descriptor instead.
func (*AndroidBuildProto) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{96}
}

func (x *AndroidBuildProto) GetId() string {
	if x != nil && x.Id != nil {
		return *x.Id
	}
	return ""
}

func (x *AndroidBuildProto) GetProduct() string {
	if x != nil && x.Product != nil {
		return *x.Product
	}
	return ""
}

func (x *AndroidBuildProto) GetCarrier() string {
	if x != nil && x.Carrier != nil {
		return *x.Carrier
	}
	return ""
}

func (x *AndroidBuildProto) GetRadio() string {
	if x != nil && x.Radio != nil {
		return *x.Radio
	}
	return ""
}

func (x *AndroidBuildProto) GetBootloader() string {
	if x != nil && x.Bootloader != nil {
		return *x.Bootloader
	}
	return ""
}

func (x *AndroidBuildProto) GetClient() string {
	if x != nil && x.Client != nil {
		return *x.Client
	}
	return ""
}

func (x *AndroidBuildProto) GetTimestamp() int64 {
	if x != nil && x.Timestamp != nil {
		return *x.Timestamp
	}
	return 0
}

func (x *AndroidBuildProto) GetGoogleServices() int32 {
	if x != nil && x.GoogleServices != nil {
		return *x.GoogleServices
	}
	return 0
}

func (x *AndroidBuildProto) GetDevice() string {
	if x != nil && x.Device != nil {
		return *x.Device
	}
	return ""
}

func (x *AndroidBuildProto) GetSdkVersion() int32 {
	if x != nil && x.SdkVersion != nil {
		return *x.SdkVersion
	}
	return 0
}

func (x *AndroidBuildProto) GetModel() string {
	if x != nil && x.Model != nil {
		return *x.Model
	}
	return ""
}

func (x *AndroidBuildProto) GetManufacturer() string {
	if x != nil && x.Manufacturer != nil {
		return *x.Manufacturer
	}
	return ""
}

func (x *AndroidBuildProto) GetBuildProduct() string {
	if x != nil && x.BuildProduct != nil {
		return *x.BuildProduct
	}
	return ""
}

func (x *AndroidBuildProto) GetOtaInstalled() bool {
	if x != nil && x.OtaInstalled != nil {
		return *x.OtaInstalled
	}
	return false
}

type AndroidCheckinProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Build           *AndroidBuildProto   `protobuf:"bytes,1,opt,name=build" json:"build,omitempty"`
	LastCheckinMsec *int64               `protobuf:"varint,2,opt,name=lastCheckinMsec" json:"lastCheckinMsec,omitempty"`
	Event           []*AndroidEventProto `protobuf:"bytes,3,rep,name=event" json:"event,omitempty"`
	RequestedGroup  []string             `protobuf:"bytes,5,rep,name=requestedGroup" json:"requestedGroup,omitempty"`
	CellOperator    *string              `protobuf:"bytes,6,opt,name=cellOperator" json:"cellOperator,omitempty"`
	SimOperator     *string              `protobuf:"bytes,7,opt,name=simOperator" json:"simOperator,omitempty"`
	Roaming         *string              `protobuf:"bytes,8,opt,name=roaming" json:"roaming,omitempty"`
	UserNumber      *int32               `protobuf:"varint,9,opt,name=userNumber" json:"userNumber,omitempty"`
}

func (x *AndroidCheckinProto) Reset() {
	*x = AndroidCheckinProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[97]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidCheckinProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidCheckinProto) ProtoMessage() {}

func (x *AndroidCheckinProto) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[97]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidCheckinProto.ProtoReflect.Descriptor instead.
func (*AndroidCheckinProto) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{97}
}

func (x *AndroidCheckinProto) GetBuild() *AndroidBuildProto {
	if x != nil {
		return x.Build
	}
	return nil
}

func (x *AndroidCheckinProto) GetLastCheckinMsec() int64 {
	if x != nil && x.LastCheckinMsec != nil {
		return *x.LastCheckinMsec
	}
	return 0
}

func (x *AndroidCheckinProto) GetEvent() []*AndroidEventProto {
	if x != nil {
		return x.Event
	}
	return nil
}

func (x *AndroidCheckinProto) GetRequestedGroup() []string {
	if x != nil {
		return x.RequestedGroup
	}
	return nil
}

func (x *AndroidCheckinProto) GetCellOperator() string {
	if x != nil && x.CellOperator != nil {
		return *x.CellOperator
	}
	return ""
}

func (x *AndroidCheckinProto) GetSimOperator() string {
	if x != nil && x.SimOperator != nil {
		return *x.SimOperator
	}
	return ""
}

func (x *AndroidCheckinProto) GetRoaming() string {
	if x != nil && x.Roaming != nil {
		return *x.Roaming
	}
	return ""
}

func (x *AndroidCheckinProto) GetUserNumber() int32 {
	if x != nil && x.UserNumber != nil {
		return *x.UserNumber
	}
	return 0
}

type AndroidEventProto struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Tag      *string `protobuf:"bytes,1,opt,name=tag" json:"tag,omitempty"`
	Value    *string `protobuf:"bytes,2,opt,name=value" json:"value,omitempty"`
	TimeMsec *int64  `protobuf:"varint,3,opt,name=timeMsec" json:"timeMsec,omitempty"`
}

func (x *AndroidEventProto) Reset() {
	*x = AndroidEventProto{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[98]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AndroidEventProto) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AndroidEventProto) ProtoMessage() {}

func (x *AndroidEventProto) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[98]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AndroidEventProto.ProtoReflect.Descriptor instead.
func (*AndroidEventProto) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{98}
}

func (x *AndroidEventProto) GetTag() string {
	if x != nil && x.Tag != nil {
		return *x.Tag
	}
	return ""
}

func (x *AndroidEventProto) GetValue() string {
	if x != nil && x.Value != nil {
		return *x.Value
	}
	return ""
}

func (x *AndroidEventProto) GetTimeMsec() int64 {
	if x != nil && x.TimeMsec != nil {
		return *x.TimeMsec
	}
	return 0
}

type ClientLibraryState struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Corpus      *int32  `protobuf:"varint,1,opt,name=corpus" json:"corpus,omitempty"`
	ServerToken []byte  `protobuf:"bytes,2,opt,name=serverToken" json:"serverToken,omitempty"`
	HashCodeSum *int64  `protobuf:"varint,3,opt,name=hashCodeSum" json:"hashCodeSum,omitempty"`
	LibrarySize *int32  `protobuf:"varint,4,opt,name=librarySize" json:"librarySize,omitempty"`
	LibraryId   *string `protobuf:"bytes,5,opt,name=libraryId" json:"libraryId,omitempty"`
}

func (x *ClientLibraryState) Reset() {
	*x = ClientLibraryState{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[99]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ClientLibraryState) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClientLibraryState) ProtoMessage() {}

func (x *ClientLibraryState) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[99]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClientLibraryState.ProtoReflect.Descriptor instead.
func (*ClientLibraryState) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{99}
}

func (x *ClientLibraryState) GetCorpus() int32 {
	if x != nil && x.Corpus != nil {
		return *x.Corpus
	}
	return 0
}

func (x *ClientLibraryState) GetServerToken() []byte {
	if x != nil {
		return x.ServerToken
	}
	return nil
}

func (x *ClientLibraryState) GetHashCodeSum() int64 {
	if x != nil && x.HashCodeSum != nil {
		return *x.HashCodeSum
	}
	return 0
}

func (x *ClientLibraryState) GetLibrarySize() int32 {
	if x != nil && x.LibrarySize != nil {
		return *x.LibrarySize
	}
	return 0
}

func (x *ClientLibraryState) GetLibraryId() string {
	if x != nil && x.LibraryId != nil {
		return *x.LibraryId
	}
	return ""
}

type BuyResponse_CheckoutInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Item                     *LineItem                                  `protobuf:"bytes,3,opt,name=item" json:"item,omitempty"`
	SubItem                  []*LineItem                                `protobuf:"bytes,4,rep,name=subItem" json:"subItem,omitempty"`
	Checkoutoption           []*BuyResponse_CheckoutInfo_CheckoutOption `protobuf:"group,5,rep,name=CheckoutOption,json=checkoutoption" json:"checkoutoption,omitempty"`
	DeprecatedCheckoutUrl    *string                                    `protobuf:"bytes,10,opt,name=deprecatedCheckoutUrl" json:"deprecatedCheckoutUrl,omitempty"`
	AddInstrumentUrl         *string                                    `protobuf:"bytes,11,opt,name=addInstrumentUrl" json:"addInstrumentUrl,omitempty"`
	FooterHtml               []string                                   `protobuf:"bytes,20,rep,name=footerHtml" json:"footerHtml,omitempty"`
	EligibleInstrumentFamily []int32                                    `protobuf:"varint,31,rep,name=eligibleInstrumentFamily" json:"eligibleInstrumentFamily,omitempty"`
	FootnoteHtml             []string                                   `protobuf:"bytes,36,rep,name=footnoteHtml" json:"footnoteHtml,omitempty"`
}

func (x *BuyResponse_CheckoutInfo) Reset() {
	*x = BuyResponse_CheckoutInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[100]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyResponse_CheckoutInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyResponse_CheckoutInfo) ProtoMessage() {}

func (x *BuyResponse_CheckoutInfo) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[100]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyResponse_CheckoutInfo.ProtoReflect.Descriptor instead.
func (*BuyResponse_CheckoutInfo) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{11, 0}
}

func (x *BuyResponse_CheckoutInfo) GetItem() *LineItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo) GetSubItem() []*LineItem {
	if x != nil {
		return x.SubItem
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo) GetCheckoutoption() []*BuyResponse_CheckoutInfo_CheckoutOption {
	if x != nil {
		return x.Checkoutoption
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo) GetDeprecatedCheckoutUrl() string {
	if x != nil && x.DeprecatedCheckoutUrl != nil {
		return *x.DeprecatedCheckoutUrl
	}
	return ""
}

func (x *BuyResponse_CheckoutInfo) GetAddInstrumentUrl() string {
	if x != nil && x.AddInstrumentUrl != nil {
		return *x.AddInstrumentUrl
	}
	return ""
}

func (x *BuyResponse_CheckoutInfo) GetFooterHtml() []string {
	if x != nil {
		return x.FooterHtml
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo) GetEligibleInstrumentFamily() []int32 {
	if x != nil {
		return x.EligibleInstrumentFamily
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo) GetFootnoteHtml() []string {
	if x != nil {
		return x.FootnoteHtml
	}
	return nil
}

type BuyResponse_CheckoutInfo_CheckoutOption struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	FormOfPayment                          *string     `protobuf:"bytes,6,opt,name=formOfPayment" json:"formOfPayment,omitempty"`
	EncodedAdjustedCart                    *string     `protobuf:"bytes,7,opt,name=encodedAdjustedCart" json:"encodedAdjustedCart,omitempty"`
	InstrumentId                           *string     `protobuf:"bytes,15,opt,name=instrumentId" json:"instrumentId,omitempty"`
	Item                                   []*LineItem `protobuf:"bytes,16,rep,name=item" json:"item,omitempty"`
	SubItem                                []*LineItem `protobuf:"bytes,17,rep,name=subItem" json:"subItem,omitempty"`
	Total                                  *LineItem   `protobuf:"bytes,18,opt,name=total" json:"total,omitempty"`
	FooterHtml                             []string    `protobuf:"bytes,19,rep,name=footerHtml" json:"footerHtml,omitempty"`
	InstrumentFamily                       *int32      `protobuf:"varint,29,opt,name=instrumentFamily" json:"instrumentFamily,omitempty"`
	DeprecatedInstrumentInapplicableReason []int32     `protobuf:"varint,30,rep,name=deprecatedInstrumentInapplicableReason" json:"deprecatedInstrumentInapplicableReason,omitempty"`
	SelectedInstrument                     *bool       `protobuf:"varint,32,opt,name=selectedInstrument" json:"selectedInstrument,omitempty"`
	Summary                                *LineItem   `protobuf:"bytes,33,opt,name=summary" json:"summary,omitempty"`
	FootnoteHtml                           []string    `protobuf:"bytes,35,rep,name=footnoteHtml" json:"footnoteHtml,omitempty"`
	PurchaseCookie                         *string     `protobuf:"bytes,45,opt,name=purchaseCookie" json:"purchaseCookie,omitempty"`
	DisabledReason                         []string    `protobuf:"bytes,48,rep,name=disabledReason" json:"disabledReason,omitempty"`
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) Reset() {
	*x = BuyResponse_CheckoutInfo_CheckoutOption{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[101]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BuyResponse_CheckoutInfo_CheckoutOption) ProtoMessage() {}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[101]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BuyResponse_CheckoutInfo_CheckoutOption.ProtoReflect.Descriptor instead.
func (*BuyResponse_CheckoutInfo_CheckoutOption) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{11, 0, 0}
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetFormOfPayment() string {
	if x != nil && x.FormOfPayment != nil {
		return *x.FormOfPayment
	}
	return ""
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetEncodedAdjustedCart() string {
	if x != nil && x.EncodedAdjustedCart != nil {
		return *x.EncodedAdjustedCart
	}
	return ""
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetInstrumentId() string {
	if x != nil && x.InstrumentId != nil {
		return *x.InstrumentId
	}
	return ""
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetItem() []*LineItem {
	if x != nil {
		return x.Item
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetSubItem() []*LineItem {
	if x != nil {
		return x.SubItem
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetTotal() *LineItem {
	if x != nil {
		return x.Total
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetFooterHtml() []string {
	if x != nil {
		return x.FooterHtml
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetInstrumentFamily() int32 {
	if x != nil && x.InstrumentFamily != nil {
		return *x.InstrumentFamily
	}
	return 0
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetDeprecatedInstrumentInapplicableReason() []int32 {
	if x != nil {
		return x.DeprecatedInstrumentInapplicableReason
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetSelectedInstrument() bool {
	if x != nil && x.SelectedInstrument != nil {
		return *x.SelectedInstrument
	}
	return false
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetSummary() *LineItem {
	if x != nil {
		return x.Summary
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetFootnoteHtml() []string {
	if x != nil {
		return x.FootnoteHtml
	}
	return nil
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetPurchaseCookie() string {
	if x != nil && x.PurchaseCookie != nil {
		return *x.PurchaseCookie
	}
	return ""
}

func (x *BuyResponse_CheckoutInfo_CheckoutOption) GetDisabledReason() []string {
	if x != nil {
		return x.DisabledReason
	}
	return nil
}

type DebugInfo_Timing struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Name     *string  `protobuf:"bytes,3,opt,name=name" json:"name,omitempty"`
	TimeInMs *float64 `protobuf:"fixed64,4,opt,name=timeInMs" json:"timeInMs,omitempty"`
}

func (x *DebugInfo_Timing) Reset() {
	*x = DebugInfo_Timing{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[102]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DebugInfo_Timing) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DebugInfo_Timing) ProtoMessage() {}

func (x *DebugInfo_Timing) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[102]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DebugInfo_Timing.ProtoReflect.Descriptor instead.
func (*DebugInfo_Timing) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{31, 0}
}

func (x *DebugInfo_Timing) GetName() string {
	if x != nil && x.Name != nil {
		return *x.Name
	}
	return ""
}

func (x *DebugInfo_Timing) GetTimeInMs() float64 {
	if x != nil && x.TimeInMs != nil {
		return *x.TimeInMs
	}
	return 0
}

type Image_Dimension struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Width       *int32 `protobuf:"varint,3,opt,name=width" json:"width,omitempty"`
	Height      *int32 `protobuf:"varint,4,opt,name=height" json:"height,omitempty"`
	AspectRatio *int32 `protobuf:"varint,18,opt,name=aspectRatio" json:"aspectRatio,omitempty"`
}

func (x *Image_Dimension) Reset() {
	*x = Image_Dimension{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[103]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image_Dimension) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image_Dimension) ProtoMessage() {}

func (x *Image_Dimension) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[103]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image_Dimension.ProtoReflect.Descriptor instead.
func (*Image_Dimension) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{47, 0}
}

func (x *Image_Dimension) GetWidth() int32 {
	if x != nil && x.Width != nil {
		return *x.Width
	}
	return 0
}

func (x *Image_Dimension) GetHeight() int32 {
	if x != nil && x.Height != nil {
		return *x.Height
	}
	return 0
}

func (x *Image_Dimension) GetAspectRatio() int32 {
	if x != nil && x.AspectRatio != nil {
		return *x.AspectRatio
	}
	return 0
}

type Image_Citation struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TitleLocalized *string `protobuf:"bytes,11,opt,name=titleLocalized" json:"titleLocalized,omitempty"`
	Url            *string `protobuf:"bytes,12,opt,name=url" json:"url,omitempty"`
}

func (x *Image_Citation) Reset() {
	*x = Image_Citation{}
	if protoimpl.UnsafeEnabled {
		mi := &file_GooglePlay_proto_msgTypes[104]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Image_Citation) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Image_Citation) ProtoMessage() {}

func (x *Image_Citation) ProtoReflect() protoreflect.Message {
	mi := &file_GooglePlay_proto_msgTypes[104]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Image_Citation.ProtoReflect.Descriptor instead.
func (*Image_Citation) Descriptor() ([]byte, []int) {
	return file_GooglePlay_proto_rawDescGZIP(), []int{47, 1}
}

func (x *Image_Citation) GetTitleLocalized() string {
	if x != nil && x.TitleLocalized != nil {
		return *x.TitleLocalized
	}
	return ""
}

func (x *Image_Citation) GetUrl() string {
	if x != nil && x.Url != nil {
		return *x.Url
	}
	return ""
}

var File_GooglePlay_proto protoreflect.FileDescriptor

var file_GooglePlay_proto_rawDesc = []byte{
	0x0a, 0x10, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x50, 0x6c, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x8a, 0x07, 0x0a, 0x16, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x70,
	0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a,
	0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x61, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x68, 0x61, 0x31, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x38, 0x0a, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74,
	0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x41, 0x70, 0x70, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74,
	0x61, 0x52, 0x0e, 0x61, 0x64, 0x64, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x46, 0x69, 0x6c,
	0x65, 0x12, 0x3b, 0x0a, 0x12, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74,
	0x68, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x48, 0x74, 0x74, 0x70, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x52, 0x12, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x41, 0x75, 0x74, 0x68, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x24,
	0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x6f, 0x63, 0x6b, 0x65, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x77, 0x61, 0x72, 0x64, 0x4c, 0x6f,
	0x63, 0x6b, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x69,
	0x6d, 0x65, 0x6f, 0x75, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x72, 0x65, 0x66,
	0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75, 0x74, 0x12, 0x2e, 0x0a, 0x0f, 0x73, 0x65,
	0x72, 0x76, 0x65, 0x72, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x0f, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x49, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x65, 0x64, 0x12, 0x44, 0x0a, 0x1d, 0x70, 0x6f,
	0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x57,
	0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x1d, 0x70, 0x6f, 0x73, 0x74, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73,
	0x12, 0x32, 0x0a, 0x14, 0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x4e, 0x65, 0x65, 0x64, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14,
	0x69, 0x6d, 0x6d, 0x65, 0x64, 0x69, 0x61, 0x74, 0x65, 0x53, 0x74, 0x61, 0x72, 0x74, 0x4e, 0x65,
	0x65, 0x64, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x09, 0x70, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x41, 0x70, 0x70, 0x50, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x70,
	0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x3d, 0x0a, 0x10, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x11, 0x2e, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50,
	0x61, 0x72, 0x61, 0x6d, 0x73, 0x52, 0x10, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x34, 0x0a, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x72,
	0x65, 0x73, 0x73, 0x65, 0x64, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73,
	0x65, 0x64, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x40, 0x0a, 0x11, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x44, 0x65,
	0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x11, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x40, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x41, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x70, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x41, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35,
	0x36, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x22,
	0xed, 0x02, 0x0a, 0x11, 0x53, 0x70, 0x6c, 0x69, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72,
	0x79, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0c, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x26, 0x0a,
	0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x61, 0x31, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x04, 0x73, 0x68, 0x61, 0x31, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77,
	0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12, 0x34, 0x0a, 0x15, 0x63,
	0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x72, 0x6c, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72,
	0x6c, 0x12, 0x32, 0x0a, 0x09, 0x70, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x70,
	0x70, 0x50, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x70, 0x61, 0x74, 0x63,
	0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x40, 0x0a, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73,
	0x73, 0x65, 0x64, 0x41, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x12, 0x2e, 0x43, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x70, 0x70,
	0x44, 0x61, 0x74, 0x61, 0x52, 0x11, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x41, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35,
	0x36, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x22,
	0xc6, 0x01, 0x0a, 0x13, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x70, 0x70, 0x50, 0x61,
	0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65, 0x53, 0x68, 0x61, 0x31, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x62, 0x61, 0x73, 0x65, 0x53, 0x68, 0x61, 0x31, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12,
	0x23, 0x0a, 0x0b, 0x70, 0x61, 0x74, 0x63, 0x68, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x0b, 0x70, 0x61, 0x74, 0x63, 0x68, 0x46, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x50, 0x61, 0x74, 0x63, 0x68,
	0x53, 0x69, 0x7a, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x6d, 0x61, 0x78, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x53, 0x69, 0x7a, 0x65, 0x22, 0x5d, 0x0a, 0x11, 0x43, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x41, 0x70, 0x70, 0x44, 0x61, 0x74, 0x61, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x22, 0xab, 0x02, 0x0a, 0x0f, 0x41, 0x70, 0x70, 0x46,
	0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1a, 0x0a, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66,
	0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a,
	0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72, 0x6c, 0x12,
	0x32, 0x0a, 0x09, 0x70, 0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x14, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x70, 0x70, 0x50,
	0x61, 0x74, 0x63, 0x68, 0x44, 0x61, 0x74, 0x61, 0x52, 0x09, 0x70, 0x61, 0x74, 0x63, 0x68, 0x44,
	0x61, 0x74, 0x61, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65,
	0x64, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6d,
	0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x34, 0x0a, 0x15, 0x63,
	0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x63, 0x6f, 0x6d, 0x70,
	0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x72,
	0x6c, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x68, 0x61, 0x31, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x73, 0x68, 0x61, 0x31, 0x22, 0x6c, 0x0a, 0x10, 0x45, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72,
	0x73, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a, 0x0d, 0x65, 0x6e, 0x63, 0x72, 0x79, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x4b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x65, 0x6e, 0x63, 0x72,
	0x79, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x4b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x4d, 0x61,
	0x63, 0x4b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x4d, 0x61, 0x63,
	0x4b, 0x65, 0x79, 0x22, 0x36, 0x0a, 0x0a, 0x48, 0x74, 0x74, 0x70, 0x43, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xed, 0x03, 0x0a, 0x07,
	0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x31, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x31, 0x12,
	0x22, 0x0a, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69, 0x6e, 0x65, 0x32, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x4c, 0x69,
	0x6e, 0x65, 0x32, 0x12, 0x12, 0x0a, 0x04, 0x63, 0x69, 0x74, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x63, 0x69, 0x74, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x74, 0x61, 0x74, 0x65, 0x12, 0x1e, 0x0a,
	0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a,
	0x0d, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x6f, 0x73, 0x74, 0x61, 0x6c, 0x43, 0x6f, 0x75, 0x6e,
	0x74, 0x72, 0x79, 0x12, 0x2c, 0x0a, 0x11, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11,
	0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x74,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x72, 0x74, 0x69, 0x6e, 0x67, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x61, 0x6e, 0x67, 0x75,
	0x61, 0x67, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x68, 0x6f, 0x6e, 0x65,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x68,
	0x6f, 0x6e, 0x65, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x65, 0x70,
	0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x49, 0x73, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x64,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x13, 0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74,
	0x65, 0x64, 0x49, 0x73, 0x52, 0x65, 0x64, 0x75, 0x63, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x66,
	0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x66, 0x69, 0x72, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x73,
	0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0f,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x9d, 0x01, 0x0a, 0x0e,
	0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x26,
	0x0a, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61,
	0x72, 0x65, 0x6e, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x09, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31,
	0x52, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x22, 0xdb, 0x02, 0x0a, 0x0c,
	0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x1e, 0x0a, 0x0a,
	0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09,
	0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65,
	0x61, 0x72, 0x63, 0x68, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x37, 0x0a, 0x0e, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x44, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x52, 0x0e, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x67,
	0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x44, 0x6f, 0x63, 0x49, 0x64,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x52, 0x05,
	0x44, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x12,
	0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x71, 0x75, 0x65, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x22, 0xf4, 0x01, 0x0a, 0x09, 0x51, 0x75,
	0x69, 0x63, 0x6b, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x21, 0x0a, 0x04, 0x6c, 0x69, 0x6e,
	0x6b, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76,
	0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x28, 0x0a, 0x0f,
	0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x52, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x6f, 0x6b,
	0x69, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x49, 0x64, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x49, 0x64,
	0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x72, 0x69, 0x73, 0x6d, 0x53, 0x74, 0x79, 0x6c, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x70, 0x72, 0x69, 0x73, 0x6d, 0x53, 0x74, 0x79, 0x6c, 0x65,
	0x22, 0xca, 0x0f, 0x0a, 0x0b, 0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x49, 0x0a, 0x10, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1d, 0x2e, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x10, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d, 0x0a, 0x0c, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0a, 0x32, 0x19, 0x2e, 0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x63, 0x68,
	0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x69, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x56, 0x69, 0x61, 0x55, 0x72, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x74, 0x69, 0x6e, 0x75, 0x65, 0x56, 0x69, 0x61, 0x55,
	0x72, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x70,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x55, 0x72, 0x6c,
	0x12, 0x2c, 0x0a, 0x11, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x72, 0x76,
	0x69, 0x63, 0x65, 0x49, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x63, 0x68, 0x65,
	0x63, 0x6b, 0x6f, 0x75, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x49, 0x64, 0x12, 0x34,
	0x0a, 0x15, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x15, 0x63,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x69, 0x72, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x62,
	0x61, 0x73, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x28,
	0x0a, 0x0f, 0x74, 0x6f, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x48, 0x74, 0x6d,
	0x6c, 0x18, 0x25, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x6f, 0x73, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x62, 0x6f, 0x78, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x69, 0x61, 0x62, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x18, 0x26,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x69, 0x61, 0x62, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x12, 0x4f, 0x0a, 0x16, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x27, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x52, 0x16, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x2e, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x12, 0x28, 0x0a, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x31,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65,
	0x52, 0x09, 0x63, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x61,
	0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6d,
	0x70, 0x74, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x32, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x61, 0x64,
	0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x6d, 0x70,
	0x74, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x2c, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d,
	0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x18, 0x33, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x11, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x54,
	0x65, 0x78, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x78, 0x74, 0x18,
	0x34, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x3e, 0x0a, 0x1a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x72, 0x72,
	0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x18, 0x35, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x1a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45,
	0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12,
	0x2a, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x6f,
	0x6b, 0x69, 0x65, 0x18, 0x36, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x65,
	0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x37, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x65, 0x6e, 0x63, 0x6f, 0x64,
	0x65, 0x64, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x22, 0x0a, 0x0c, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x38, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x1a, 0xe7, 0x07, 0x0a, 0x0c, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1d, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x12, 0x23, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x50, 0x0a, 0x0e, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0a,
	0x32, 0x28, 0x2e, 0x42, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x2e, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0e, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x6f, 0x75, 0x74, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x15, 0x64, 0x65,
	0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x55, 0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15, 0x64, 0x65, 0x70, 0x72, 0x65,
	0x63, 0x61, 0x74, 0x65, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x55, 0x72, 0x6c,
	0x12, 0x2a, 0x0a, 0x10, 0x61, 0x64, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e,
	0x74, 0x55, 0x72, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x64, 0x64, 0x49,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a,
	0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x14, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0a, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x3a, 0x0a, 0x18,
	0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x18, 0x1f, 0x20, 0x03, 0x28, 0x05, 0x52, 0x18,
	0x65, 0x6c, 0x69, 0x67, 0x69, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6f, 0x6f, 0x74,
	0x6e, 0x6f, 0x74, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x24, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0c,
	0x66, 0x6f, 0x6f, 0x74, 0x6e, 0x6f, 0x74, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x1a, 0xde, 0x04, 0x0a,
	0x0e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x24, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x66, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x6d, 0x4f, 0x66, 0x50, 0x61,
	0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x13, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64,
	0x41, 0x64, 0x6a, 0x75, 0x73, 0x74, 0x65, 0x64, 0x43, 0x61, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x13, 0x65, 0x6e, 0x63, 0x6f, 0x64, 0x65, 0x64, 0x41, 0x64, 0x6a, 0x75, 0x73,
	0x74, 0x65, 0x64, 0x43, 0x61, 0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x72,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69,
	0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x04, 0x69,
	0x74, 0x65, 0x6d, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x69, 0x6e, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12, 0x23, 0x0a, 0x07, 0x73, 0x75,
	0x62, 0x49, 0x74, 0x65, 0x6d, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x69,
	0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x07, 0x73, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x12,
	0x1f, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c,
	0x12, 0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x13,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x48, 0x74, 0x6d, 0x6c,
	0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61,
	0x6d, 0x69, 0x6c, 0x79, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x69, 0x6e, 0x73, 0x74,
	0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x46, 0x61, 0x6d, 0x69, 0x6c, 0x79, 0x12, 0x56, 0x0a, 0x26,
	0x64, 0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x49, 0x6e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65,
	0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x1e, 0x20, 0x03, 0x28, 0x05, 0x52, 0x26, 0x64, 0x65,
	0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65,
	0x6e, 0x74, 0x49, 0x6e, 0x61, 0x70, 0x70, 0x6c, 0x69, 0x63, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x61, 0x73, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x20, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x12, 0x73, 0x65, 0x6c, 0x65, 0x63, 0x74, 0x65, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x23, 0x0a, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x18,
	0x21, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x07, 0x73, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x6f, 0x6f,
	0x74, 0x6e, 0x6f, 0x74, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x23, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0c, 0x66, 0x6f, 0x6f, 0x74, 0x6e, 0x6f, 0x74, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x26, 0x0a,
	0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18,
	0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x43,
	0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x30, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x64,
	0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x22, 0x7e, 0x0a,
	0x08, 0x4c, 0x69, 0x6e, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x1c, 0x0a, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06,
	0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1e, 0x0a,
	0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e,
	0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x6d, 0x0a,
	0x05, 0x4d, 0x6f, 0x6e, 0x65, 0x79, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x12, 0x22,
	0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x41,
	0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x6f, 0x72,
	0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0xb6, 0x01, 0x0a,
	0x1c, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x4e, 0x6f, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x09, 0x64, 0x65, 0x62, 0x75, 0x67, 0x49, 0x6e,
	0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x09, 0x64, 0x65, 0x62, 0x75, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x34, 0x0a, 0x15, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x15,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65,
	0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x75, 0x72, 0x63, 0x68,
	0x61, 0x73, 0x65, 0x49, 0x64, 0x22, 0xa7, 0x02, 0x0a, 0x16, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61,
	0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x4d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x4d, 0x73, 0x67, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x72, 0x69, 0x65,
	0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x62, 0x72, 0x69, 0x65, 0x66, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x69, 0x6e, 0x66, 0x6f, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x69,
	0x6e, 0x66, 0x6f, 0x55, 0x72, 0x6c, 0x12, 0x34, 0x0a, 0x0d, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e,
	0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x52, 0x0d, 0x6c,
	0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x41, 0x0a, 0x0f,
	0x61, 0x70, 0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41,
	0x70, 0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0f,
	0x61, 0x70, 0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22,
	0xe2, 0x02, 0x0a, 0x16, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x48, 0x69, 0x73, 0x74,
	0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x38, 0x0a, 0x17, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d,
	0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x17, 0x70, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x4d, 0x69,
	0x6c, 0x6c, 0x69, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x13, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x1c, 0x0a, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x05, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x28, 0x0a, 0x0f,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x79, 0x6c, 0x69, 0x6e, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x18,
	0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x42, 0x79, 0x6c, 0x69,
	0x6e, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x30, 0x0a, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0c, 0x52, 0x13, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x78, 0x74, 0x12, 0x3a, 0x0a, 0x14, 0x70, 0x75, 0x72, 0x63,
	0x68, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x14,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x22, 0xca, 0x03, 0x0a, 0x10, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x72, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x38, 0x0a,
	0x17, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f,
	0x78, 0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78,
	0x65, 0x73, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x28, 0x0a,
	0x0f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x74, 0x6d, 0x6c,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x29, 0x0a, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b,
	0x62, 0x6f, 0x78, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x6f, 0x72, 0x6d,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x52, 0x08, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x62,
	0x6f, 0x78, 0x12, 0x22, 0x0a, 0x07, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x52, 0x07, 0x61,
	0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x3f, 0x0a, 0x0f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x15, 0x2e, 0x49, 0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x45, 0x72, 0x72, 0x6f, 0x72, 0x52, 0x0f, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x49, 0x6e, 0x70,
	0x75, 0x74, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x48, 0x74, 0x6d, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65,
	0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x18, 0x09, 0x20, 0x03, 0x28, 0x05, 0x52, 0x0d, 0x72, 0x65,
	0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x46, 0x69, 0x65, 0x6c, 0x64, 0x12, 0x34, 0x0a, 0x10, 0x73,
	0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x18,
	0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x10, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x22, 0xc2, 0x04, 0x0a, 0x17, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x2e, 0x0a,
	0x12, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x61, 0x75, 0x74, 0x68, 0x65,
	0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x48, 0x0a,
	0x1f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74,
	0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79,
	0x70, 0x65, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x38, 0x0a, 0x17, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x52, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x72,
	0x61, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x52, 0x65, 0x74, 0x72, 0x79, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x50, 0x61, 0x72, 0x61,
	0x6d, 0x12, 0x24, 0x0a, 0x0d, 0x70, 0x69, 0x6e, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x54, 0x65,
	0x78, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x70, 0x69, 0x6e, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x36, 0x0a, 0x16, 0x70, 0x69, 0x6e, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x48, 0x74, 0x6d,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16, 0x70, 0x69, 0x6e, 0x44, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x48, 0x74, 0x6d, 0x6c, 0x12,
	0x26, 0x0a, 0x0e, 0x67, 0x61, 0x69, 0x61, 0x48, 0x65, 0x61, 0x64, 0x65, 0x72, 0x54, 0x65, 0x78,
	0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x67, 0x61, 0x69, 0x61, 0x48, 0x65, 0x61,
	0x64, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x12, 0x38, 0x0a, 0x17, 0x67, 0x61, 0x69, 0x61, 0x44,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x48, 0x74,
	0x6d, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x67, 0x61, 0x69, 0x61, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x48, 0x74, 0x6d,
	0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x67, 0x61, 0x69, 0x61, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x54,
	0x65, 0x78, 0x74, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x67,
	0x61, 0x69, 0x61, 0x46, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x54, 0x65, 0x78, 0x74, 0x48, 0x74, 0x6d,
	0x6c, 0x12, 0x3d, 0x0a, 0x12, 0x67, 0x61, 0x69, 0x61, 0x4f, 0x70, 0x74, 0x4f, 0x75, 0x74, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x46, 0x6f, 0x72, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x52, 0x12, 0x67, 0x61,
	0x69, 0x61, 0x4f, 0x70, 0x74, 0x4f, 0x75, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78,
	0x12, 0x44, 0x0a, 0x1d, 0x67, 0x61, 0x69, 0x61, 0x4f, 0x70, 0x74, 0x4f, 0x75, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x78, 0x74, 0x48, 0x74, 0x6d,
	0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x67, 0x61, 0x69, 0x61, 0x4f, 0x70, 0x74,
	0x4f, 0x75, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65,
	0x78, 0x74, 0x48, 0x74, 0x6d, 0x6c, 0x22, 0xdd, 0x01, 0x0a, 0x09, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x10, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43,
	0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11,
	0x2e, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67,
	0x65, 0x52, 0x10, 0x61, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65,
	0x6e, 0x67, 0x65, 0x12, 0x52, 0x0a, 0x17, 0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x41, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x52, 0x17,
	0x61, 0x75, 0x74, 0x68, 0x65, 0x6e, 0x74, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x68,
	0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x3d, 0x0a, 0x10, 0x77, 0x65, 0x62, 0x56, 0x69,
	0x65, 0x77, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x11, 0x2e, 0x57, 0x65, 0x62, 0x56, 0x69, 0x65, 0x77, 0x43, 0x68, 0x61, 0x6c, 0x6c,
	0x65, 0x6e, 0x67, 0x65, 0x52, 0x10, 0x77, 0x65, 0x62, 0x56, 0x69, 0x65, 0x77, 0x43, 0x68, 0x61,
	0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x22, 0x4b, 0x0a, 0x07, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x72,
	0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x67, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e,
	0x61, 0x6d, 0x65, 0x22, 0x76, 0x0a, 0x0c, 0x46, 0x6f, 0x72, 0x6d, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x62, 0x6f, 0x78, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x65, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x08, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x5a, 0x0a, 0x14, 0x49,
	0x6e, 0x70, 0x75, 0x74, 0x56, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x45, 0x72,
	0x72, 0x6f, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69, 0x65, 0x6c,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x69, 0x6e, 0x70, 0x75, 0x74, 0x46, 0x69,
	0x65, 0x6c, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x65, 0x72, 0x72, 0x6f, 0x72,
	0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x8c, 0x02, 0x0a, 0x10, 0x57, 0x65, 0x62, 0x56,
	0x69, 0x65, 0x77, 0x43, 0x68, 0x61, 0x6c, 0x6c, 0x65, 0x6e, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x74, 0x61, 0x72, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x74, 0x61, 0x72, 0x67,
	0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x67, 0x65, 0x78, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x67, 0x65,
	0x78, 0x70, 0x12, 0x3a, 0x0a, 0x18, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x42, 0x75, 0x74, 0x74,
	0x6f, 0x6e, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x36,
	0x0a, 0x16, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74,
	0x55, 0x72, 0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16,
	0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x54, 0x61, 0x72, 0x67, 0x65, 0x74, 0x55, 0x72,
	0x6c, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c,
	0x55, 0x72, 0x6c, 0x52, 0x65, 0x67, 0x65, 0x78, 0x70, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x55, 0x72, 0x6c, 0x52, 0x65, 0x67, 0x65, 0x78, 0x70,
	0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22, 0x5c, 0x0a, 0x05, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x12,
	0x22, 0x0a, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x44, 0x6f,
	0x63, 0x49, 0x64, 0x12, 0x15, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x3a, 0x01, 0x31, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x62, 0x61,
	0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x62, 0x61, 0x63,
	0x6b, 0x65, 0x6e, 0x64, 0x22, 0xa4, 0x08, 0x0a, 0x05, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x16,
	0x0a, 0x06, 0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06,
	0x6d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x75,
	0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x6f,
	0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2e, 0x0a, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65,
	0x64, 0x50, 0x72, 0x69, 0x63, 0x65, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x76, 0x65, 0x72, 0x74, 0x65, 0x64, 0x50,
	0x72, 0x69, 0x63, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74,
	0x46, 0x6c, 0x6f, 0x77, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x14, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x6f, 0x75, 0x74, 0x46, 0x6c, 0x6f, 0x77,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x66, 0x75, 0x6c, 0x6c,
	0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x69, 0x63, 0x72, 0x6f, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x0f, 0x66, 0x75, 0x6c, 0x6c, 0x50, 0x72, 0x69, 0x63, 0x65, 0x4d, 0x69, 0x63, 0x72,
	0x6f, 0x73, 0x12, 0x30, 0x0a, 0x13, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x46,
	0x75, 0x6c, 0x6c, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x13, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x46, 0x75, 0x6c, 0x6c, 0x41, 0x6d,
	0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1f, 0x0a, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x31, 0x52, 0x09, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6f, 0x6e, 0x53, 0x61, 0x6c,
	0x65, 0x44, 0x61, 0x74, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69,
	0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x40, 0x0a,
	0x11, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72,
	0x6d, 0x73, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x52, 0x11, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x73, 0x12,
	0x24, 0x0a, 0x0d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65,
	0x64, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74,
	0x65, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x14, 0x66, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x74, 0x65, 0x64, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x72, 0x65,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x70, 0x72, 0x65,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x54, 0x0a, 0x25, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x44,
	0x61, 0x74, 0x65, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f,
	0x6e, 0x65, 0x4f, 0x66, 0x66, 0x73, 0x65, 0x74, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x25, 0x6f, 0x6e, 0x53, 0x61, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x65,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x4f,
	0x66, 0x66, 0x73, 0x65, 0x74, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6c,
	0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x64, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65,
	0x18, 0x11, 0x20, 0x01, 0x28, 0x05, 0x52, 0x11, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x64,
	0x4f, 0x66, 0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x49, 0x64, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x66, 0x66, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x46, 0x0a, 0x1e, 0x70, 0x72, 0x65, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x46,
	0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61,
	0x79, 0x44, 0x61, 0x74, 0x65, 0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x52, 0x1e, 0x70, 0x72, 0x65,
	0x6f, 0x72, 0x64, 0x65, 0x72, 0x46, 0x75, 0x6c, 0x66, 0x69, 0x6c, 0x6c, 0x6d, 0x65, 0x6e, 0x74,
	0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x44, 0x61, 0x74, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x61, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x08, 0x52, 0x04, 0x73, 0x61, 0x6c, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x72, 0x65, 0x70, 0x65, 0x61, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79,
	0x6d, 0x65, 0x6e, 0x74, 0x18, 0x19, 0x20, 0x01, 0x28, 0x08, 0x52, 0x11, 0x72, 0x65, 0x70, 0x65,
	0x61, 0x74, 0x4c, 0x61, 0x73, 0x74, 0x50, 0x61, 0x79, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x26, 0x0a,
	0x0e, 0x62, 0x75, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18,
	0x1a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x62, 0x75, 0x79, 0x42, 0x75, 0x74, 0x74, 0x6f, 0x6e,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x36, 0x0a, 0x16, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74,
	0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x1b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x50, 0x75,
	0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x2a, 0x0a,
	0x10, 0x73, 0x61, 0x6c, 0x65, 0x45, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x73, 0x61, 0x6c, 0x65, 0x45, 0x6e, 0x64,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x61, 0x6c,
	0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x1f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x73, 0x61, 0x6c, 0x65, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x79, 0x0a, 0x11, 0x53,
	0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x65, 0x72, 0x6d, 0x73,
	0x12, 0x35, 0x0a, 0x0f, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e, 0x67, 0x50, 0x65, 0x72,
	0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54, 0x69, 0x6d, 0x65,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x0f, 0x72, 0x65, 0x63, 0x75, 0x72, 0x72, 0x69, 0x6e,
	0x67, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x12, 0x2d, 0x0a, 0x0b, 0x74, 0x72, 0x69, 0x61, 0x6c,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x52, 0x0b, 0x74, 0x72, 0x69, 0x61, 0x6c,
	0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x36, 0x0a, 0x0a, 0x54, 0x69, 0x6d, 0x65, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x04, 0x75, 0x6e, 0x69, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x67,
	0x0a, 0x17, 0x43, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x34, 0x0a, 0x0d, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x52, 0x0d, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12,
	0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x22, 0xbb, 0x02, 0x0a, 0x11, 0x43, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a,
	0x09, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x09, 0x62, 0x72, 0x6f, 0x77, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x6e,
	0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0b, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x1c, 0x0a,
	0x09, 0x72, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x01,
	0x52, 0x09, 0x72, 0x65, 0x6c, 0x65, 0x76, 0x61, 0x6e, 0x63, 0x65, 0x12, 0x2a, 0x0a, 0x10, 0x65,
	0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x10, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79,
	0x74, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69,
	0x65, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x07, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x65, 0x64, 0x12, 0x34, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x18, 0x07, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x56, 0x69,
	0x65, 0x77, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x56, 0x69, 0x65,
	0x77, 0x12, 0x22, 0x0a, 0x08, 0x6c, 0x65, 0x66, 0x74, 0x49, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x08, 0x6c, 0x65, 0x66,
	0x74, 0x49, 0x63, 0x6f, 0x6e, 0x22, 0x87, 0x01, 0x0a, 0x0d, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x56, 0x69, 0x65, 0x77, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x73, 0x65, 0x6c, 0x65, 0x63,
	0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x6c, 0x69, 0x73,
	0x74, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x6c, 0x69, 0x73, 0x74,
	0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x67,
	0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x22,
	0x8a, 0x01, 0x0a, 0x09, 0x44, 0x65, 0x62, 0x75, 0x67, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x18, 0x0a,
	0x07, 0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07,
	0x6d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x29, 0x0a, 0x06, 0x74, 0x69, 0x6d, 0x69, 0x6e,
	0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0a, 0x32, 0x11, 0x2e, 0x44, 0x65, 0x62, 0x75, 0x67, 0x49,
	0x6e, 0x66, 0x6f, 0x2e, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x06, 0x74, 0x69, 0x6d, 0x69,
	0x6e, 0x67, 0x1a, 0x38, 0x0a, 0x06, 0x54, 0x69, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x4d, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x01, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x49, 0x6e, 0x4d, 0x73, 0x22, 0x70, 0x0a, 0x10,
	0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x19, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x3a, 0x01, 0x31, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x41, 0x0a, 0x0f, 0x61,
	0x70, 0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x41, 0x70,
	0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x52, 0x0f, 0x61,
	0x70, 0x70, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2d,
	0x0a, 0x10, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x19, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x05, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x22, 0xe6, 0x01,
	0x0a, 0x12, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x05, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x10, 0x69, 0x6e,
	0x63, 0x6c, 0x75, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x44, 0x6f, 0x63, 0x73, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x10, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x44, 0x6f, 0x63, 0x73, 0x12, 0x26, 0x0a, 0x0e,
	0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x0e, 0x69, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x11, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x50, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61,
	0x6d, 0x65, 0x12, 0x32, 0x0a, 0x14, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x56,
	0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x07, 0x20, 0x03, 0x28, 0x05,
	0x52, 0x14, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x3e, 0x0a, 0x13, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x27, 0x0a,
	0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x42,
	0x75, 0x6c, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52,
	0x05, 0x65, 0x6e, 0x74, 0x72, 0x79, 0x22, 0xc2, 0x03, 0x0a, 0x0f, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x6e,
	0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x6e, 0x61, 0x6c, 0x79, 0x74, 0x69, 0x63, 0x73, 0x43, 0x6f,
	0x6f, 0x6b, 0x69, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x69, 0x74, 0x65, 0x6d, 0x12,
	0x1e, 0x0a, 0x0a, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0a, 0x66, 0x6f, 0x6f, 0x74, 0x65, 0x72, 0x48, 0x74, 0x6d, 0x6c, 0x12,
	0x2a, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x6f,
	0x6b, 0x69, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x64,
	0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x42, 0x61, 0x64, 0x67, 0x65, 0x18, 0x07, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x52, 0x0e, 0x64, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x42,
	0x61, 0x64, 0x67, 0x65, 0x12, 0x2a, 0x0a, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65,
	0x76, 0x69, 0x65, 0x77, 0x73, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75,
	0x65, 0x52, 0x0d, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73,
	0x12, 0x25, 0x0a, 0x08, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x18, 0x0c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x09, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x52, 0x08, 0x66,
	0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x10, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d,
	0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65,
	0x77, 0x55, 0x72, 0x6c, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x75, 0x73, 0x65, 0x72,
	0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x55, 0x72, 0x6c, 0x12, 0x40, 0x0a, 0x1b, 0x70, 0x6f, 0x73,
	0x74, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b,
	0x70, 0x6f, 0x73, 0x74, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x22, 0xc5, 0x03, 0x0a, 0x0e,
	0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72, 0x79, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x14,
	0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x12, 0x1c, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64,
	0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x62, 0x61, 0x63,
	0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x12, 0x3d, 0x0a, 0x0f,
	0x62, 0x61, 0x64, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x31, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0f, 0x62, 0x61, 0x64, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x31, 0x12, 0x2a, 0x0a, 0x10, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x67,
	0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x50, 0x6c, 0x75,
	0x73, 0x4f, 0x6e, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x50, 0x6c,
	0x75, 0x73, 0x4f, 0x6e, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61,
	0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x07, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0f,
	0x61, 0x67, 0x67, 0x72, 0x65, 0x67, 0x61, 0x74, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12,
	0x26, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e,
	0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c,
	0x6f, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x24, 0x0a,
	0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x6e, 0x69, 0x74, 0x73, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x55, 0x6e,
	0x69, 0x74, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74,
	0x69, 0x6f, 0x6e, 0x22, 0x83, 0x01, 0x0a, 0x12, 0x44, 0x69, 0x73, 0x63, 0x6f, 0x76, 0x65, 0x72,
	0x79, 0x42, 0x61, 0x64, 0x67, 0x65, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x19, 0x0a, 0x04, 0x6c, 0x69,
	0x6e, 0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x4c, 0x69, 0x6e, 0x6b, 0x52,
	0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x52, 0x65, 0x76,
	0x69, 0x65, 0x77, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x75,
	0x73, 0x65, 0x72, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a,
	0x10, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x55, 0x72,
	0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x63, 0x72, 0x69, 0x74, 0x69, 0x63, 0x52,
	0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x55, 0x72, 0x6c, 0x22, 0x6e, 0x0a, 0x08, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x73, 0x12, 0x32, 0x0a, 0x0f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08,
	0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0f, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x50, 0x72, 0x65, 0x73, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x2e, 0x0a, 0x0d, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x08, 0x2e, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0d, 0x66, 0x65, 0x61, 0x74,
	0x75, 0x72, 0x65, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x22, 0x35, 0x0a, 0x07, 0x46, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65,
	0x22, 0x89, 0x08, 0x0a, 0x18, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x20, 0x0a,
	0x0b, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0b, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x12,
	0x1a, 0x0a, 0x08, 0x6b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x08, 0x6b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x6e,
	0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0a, 0x6e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x73,
	0x63, 0x72, 0x65, 0x65, 0x6e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x4c, 0x61, 0x79, 0x6f, 0x75, 0x74, 0x12,
	0x28, 0x0a, 0x0f, 0x68, 0x61, 0x73, 0x48, 0x61, 0x72, 0x64, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61,
	0x72, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x68, 0x61, 0x73, 0x48, 0x61, 0x72,
	0x64, 0x4b, 0x65, 0x79, 0x62, 0x6f, 0x61, 0x72, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x68, 0x61, 0x73,
	0x46, 0x69, 0x76, 0x65, 0x57, 0x61, 0x79, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x14, 0x68, 0x61, 0x73, 0x46, 0x69, 0x76, 0x65,
	0x57, 0x61, 0x79, 0x4e, 0x61, 0x76, 0x69, 0x67, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x24, 0x0a,
	0x0d, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x44, 0x65, 0x6e, 0x73, 0x69, 0x74, 0x79, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x44, 0x65, 0x6e, 0x73,
	0x69, 0x74, 0x79, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x6c, 0x45, 0x73, 0x56, 0x65, 0x72, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x67, 0x6c, 0x45, 0x73, 0x56, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x30, 0x0a, 0x13, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53,
	0x68, 0x61, 0x72, 0x65, 0x64, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x18, 0x09, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x13, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x68, 0x61, 0x72, 0x65, 0x64,
	0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x36, 0x0a, 0x16, 0x73, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72,
	0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x16, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12,
	0x26, 0x0a, 0x0e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50, 0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72,
	0x6d, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x6e, 0x61, 0x74, 0x69, 0x76, 0x65, 0x50,
	0x6c, 0x61, 0x74, 0x66, 0x6f, 0x72, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x73, 0x63,
	0x72, 0x65, 0x65, 0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x63, 0x72,
	0x65, 0x65, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x0c, 0x73, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x48, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x34, 0x0a,
	0x15, 0x73, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x0e, 0x20, 0x03, 0x28, 0x09, 0x52, 0x15, 0x73, 0x79,
	0x73, 0x74, 0x65, 0x6d, 0x53, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x4c, 0x6f, 0x63,
	0x61, 0x6c, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x67, 0x6c, 0x45, 0x78, 0x74, 0x65, 0x6e, 0x73, 0x69,
	0x6f, 0x6e, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x67, 0x6c, 0x45, 0x78, 0x74, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43,
	0x6c, 0x61, 0x73, 0x73, 0x18, 0x10, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x36, 0x0a, 0x14, 0x6d, 0x61, 0x78, 0x41, 0x70,
	0x6b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x4d, 0x62, 0x18,
	0x11, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x02, 0x35, 0x30, 0x52, 0x14, 0x6d, 0x61, 0x78, 0x41, 0x70,
	0x6b, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x4d, 0x62, 0x12,
	0x34, 0x0a, 0x15, 0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x65, 0x73, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65,
	0x6e, 0x57, 0x69, 0x64, 0x74, 0x68, 0x44, 0x50, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05, 0x52, 0x15,
	0x73, 0x6d, 0x61, 0x6c, 0x6c, 0x65, 0x73, 0x74, 0x53, 0x63, 0x72, 0x65, 0x65, 0x6e, 0x57, 0x69,
	0x64, 0x74, 0x68, 0x44, 0x50, 0x12, 0x25, 0x0a, 0x0c, 0x6c, 0x6f, 0x77, 0x52, 0x61, 0x6d, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x13, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30, 0x52, 0x0c,
	0x6c, 0x6f, 0x77, 0x52, 0x61, 0x6d, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x10,
	0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x42, 0x79, 0x74, 0x65, 0x73,
	0x18, 0x14, 0x20, 0x01, 0x28, 0x03, 0x3a, 0x0a, 0x38, 0x33, 0x35, 0x34, 0x39, 0x37, 0x31, 0x36,
	0x34, 0x38, 0x52, 0x10, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x4d, 0x65, 0x6d, 0x6f, 0x72, 0x79, 0x42,
	0x79, 0x74, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x11, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x4f, 0x66,
	0x5f, 0x43, 0x50, 0x55, 0x43, 0x6f, 0x72, 0x65, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28, 0x05, 0x3a,
	0x01, 0x38, 0x52, 0x10, 0x6d, 0x61, 0x78, 0x4e, 0x75, 0x6d, 0x4f, 0x66, 0x43, 0x50, 0x55, 0x43,
	0x6f, 0x72, 0x65, 0x73, 0x12, 0x34, 0x0a, 0x0d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65,
	0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x1a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x52, 0x0d, 0x64, 0x65, 0x76,
	0x69, 0x63, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x1f, 0x0a, 0x09, 0x75, 0x6e,
	0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x32, 0x38, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01, 0x30,
	0x52, 0x09, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x32, 0x38, 0x12, 0x1f, 0x0a, 0x09, 0x75,
	0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x33, 0x30, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x05, 0x3a, 0x01,
	0x34, 0x52, 0x09, 0x75, 0x6e, 0x6b, 0x6e, 0x6f, 0x77, 0x6e, 0x33, 0x30, 0x22, 0x39, 0x0a, 0x0d,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x46, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x22, 0xd8, 0x05, 0x0a, 0x08, 0x44, 0x6f, 0x63, 0x75,
	0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x52, 0x05, 0x44, 0x6f, 0x63,
	0x49, 0x64, 0x12, 0x26, 0x0a, 0x0a, 0x66, 0x65, 0x74, 0x63, 0x68, 0x44, 0x6f, 0x63, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x52, 0x0a,
	0x66, 0x65, 0x74, 0x63, 0x68, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x28, 0x0a, 0x0b, 0x73, 0x61,
	0x6d, 0x70, 0x6c, 0x65, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x52, 0x0b, 0x73, 0x61, 0x6d, 0x70, 0x6c, 0x65, 0x44,
	0x6f, 0x63, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07,
	0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73,
	0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12, 0x30, 0x0a, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x44,
	0x65, 0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x0f, 0x70, 0x72, 0x69, 0x63, 0x65, 0x44, 0x65,
	0x70, 0x72, 0x65, 0x63, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x1c, 0x0a, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72,
	0x18, 0x0e, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f, 0x66, 0x66, 0x65, 0x72, 0x52, 0x05,
	0x6f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x3d, 0x0a, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61,
	0x74, 0x65, 0x64, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78,
	0x74, 0x52, 0x11, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x53, 0x6e, 0x69,
	0x70, 0x70, 0x65, 0x74, 0x12, 0x3a, 0x0a, 0x0f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74,
	0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x18, 0x10, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e,
	0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x52,
	0x0f, 0x64, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x56, 0x61, 0x72, 0x69, 0x61, 0x6e, 0x74,
	0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18, 0x11,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64,
	0x12, 0x29, 0x0a, 0x0a, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x12,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52,
	0x0a, 0x64, 0x65, 0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x21, 0x0a, 0x06, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x18, 0x13, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x06, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x12, 0x2a,
	0x0a, 0x10, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55,
	0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0e, 0x63, 0x6f,
	0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x72, 0x6c, 0x18, 0x15, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x55,
	0x72, 0x6c, 0x12, 0x32, 0x0a, 0x14, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x4e,
	0x75, 0x6d, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x14, 0x65, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x4e, 0x75, 0x6d, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x22, 0xaa, 0x03, 0x0a, 0x0f, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x56,
	0x61, 0x72, 0x69, 0x61, 0x6e, 0x74, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x61, 0x72, 0x69, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x76,
	0x61, 0x72, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x18, 0x04, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x12, 0x24, 0x0a, 0x0d,
	0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67,
	0x65, 0x73, 0x12, 0x39, 0x0a, 0x0f, 0x61, 0x75, 0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x54, 0x72,
	0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65, 0x78, 0x74, 0x52, 0x0f, 0x61, 0x75,
	0x74, 0x6f, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a,
	0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f,
	0x66, 0x66, 0x65, 0x72, 0x52, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x09, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09,
	0x63, 0x68, 0x61, 0x6e, 0x6e, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1f, 0x0a, 0x05, 0x63, 0x68, 0x69,
	0x6c, 0x64, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09, 0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x52, 0x05, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x12, 0x29, 0x0a, 0x0a, 0x64, 0x65,
	0x63, 0x6f, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x09,
	0x2e, 0x44, 0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x52, 0x0a, 0x64, 0x65, 0x63, 0x6f, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0c,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x18, 0x0d, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18,
	0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x22,
	0x47, 0x0a, 0x0c, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x37, 0x0a, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65,
	0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x0e, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x43,
	0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x2e, 0x0a, 0x0e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x05, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22, 0xe8, 0x06, 0x0a, 0x05, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x2e, 0x0a, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0a, 0x32, 0x10, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x44, 0x69, 0x6d, 0x65,
	0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x52, 0x09, 0x64, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e,
	0x12, 0x1a, 0x0a, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x10,
	0x61, 0x6c, 0x74, 0x54, 0x65, 0x78, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x61, 0x6c, 0x74, 0x54, 0x65, 0x78, 0x74, 0x4c,
	0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x63,
	0x75, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69,
	0x6f, 0x6e, 0x49, 0x6e, 0x53, 0x65, 0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x12, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x53, 0x65,
	0x71, 0x75, 0x65, 0x6e, 0x63, 0x65, 0x12, 0x36, 0x0a, 0x16, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72,
	0x74, 0x73, 0x46, 0x69, 0x66, 0x65, 0x55, 0x72, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x16, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73,
	0x46, 0x69, 0x66, 0x65, 0x55, 0x72, 0x6c, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x2b,
	0x0a, 0x08, 0x63, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0a,
	0x32, 0x0f, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x2e, 0x43, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x63, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x64,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x18, 0x0e,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x64, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x65,
	0x63, 0x6f, 0x6e, 0x64, 0x73, 0x12, 0x22, 0x0a, 0x0c, 0x66, 0x69, 0x6c, 0x6c, 0x43, 0x6f, 0x6c,
	0x6f, 0x72, 0x52, 0x47, 0x42, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x66, 0x69, 0x6c,
	0x6c, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x47, 0x42, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x75, 0x74,
	0x6f, 0x67, 0x65, 0x6e, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x61, 0x75, 0x74, 0x6f,
	0x67, 0x65, 0x6e, 0x12, 0x2e, 0x0a, 0x0b, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x11, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x74, 0x74, 0x72, 0x69,
	0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72, 0x52, 0x67, 0x62, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x43, 0x6f, 0x6c, 0x6f, 0x72,
	0x52, 0x67, 0x62, 0x12, 0x27, 0x0a, 0x07, 0x70, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x18, 0x14,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x50, 0x61, 0x6c, 0x65,
	0x74, 0x74, 0x65, 0x52, 0x07, 0x70, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x18, 0x15, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x12, 0x3e,
	0x0a, 0x1a, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x46, 0x69, 0x66, 0x65, 0x4d, 0x6f,
	0x6e, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x16, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x1a, 0x73, 0x75, 0x70, 0x70, 0x6f, 0x72, 0x74, 0x73, 0x46, 0x69, 0x66, 0x65,
	0x4d, 0x6f, 0x6e, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x4f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20,
	0x0a, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x41, 0x6c, 0x74, 0x18, 0x1c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x41, 0x6c, 0x74,
	0x1a, 0x5b, 0x0a, 0x09, 0x44, 0x69, 0x6d, 0x65, 0x6e, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a,
	0x05, 0x77, 0x69, 0x64, 0x74, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x05, 0x77, 0x69,
	0x64, 0x74, 0x68, 0x12, 0x16, 0x0a, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x68, 0x65, 0x69, 0x67, 0x68, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x61,
	0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x18, 0x12, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x0b, 0x61, 0x73, 0x70, 0x65, 0x63, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6f, 0x1a, 0x44, 0x0a,
	0x08, 0x43, 0x69, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x18, 0x0b, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65,
	0x64, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03,
	0x75, 0x72, 0x6c, 0x22, 0x91, 0x01, 0x0a, 0x0b, 0x41, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x54, 0x69, 0x74,
	0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55,
	0x72, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x22, 0x0a, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e, 0x73, 0x65, 0x54, 0x69,
	0x74, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x54, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6c, 0x69, 0x63, 0x65, 0x6e,
	0x73, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x6c, 0x69, 0x63,
	0x65, 0x6e, 0x73, 0x65, 0x55, 0x72, 0x6c, 0x22, 0xe6, 0x01, 0x0a, 0x0c, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x50, 0x61, 0x6c, 0x65, 0x74, 0x74, 0x65, 0x12, 0x28, 0x0a, 0x0f, 0x6c, 0x69, 0x67, 0x68,
	0x74, 0x56, 0x69, 0x62, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x47, 0x42, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x56, 0x69, 0x62, 0x72, 0x61, 0x6e, 0x74, 0x52,
	0x47, 0x42, 0x12, 0x1e, 0x0a, 0x0a, 0x76, 0x69, 0x62, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x47, 0x42,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x76, 0x69, 0x62, 0x72, 0x61, 0x6e, 0x74, 0x52,
	0x47, 0x42, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x61, 0x72, 0x6b, 0x56, 0x69, 0x62, 0x72, 0x61, 0x6e,
	0x74, 0x52, 0x47, 0x42, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64, 0x61, 0x72, 0x6b,
	0x56, 0x69, 0x62, 0x72, 0x61, 0x6e, 0x74, 0x52, 0x47, 0x42, 0x12, 0x24, 0x0a, 0x0d, 0x6c, 0x69,
	0x67, 0x68, 0x74, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x52, 0x47, 0x42, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0d, 0x6c, 0x69, 0x67, 0x68, 0x74, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x52, 0x47, 0x42,
	0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x52, 0x47, 0x42, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x52, 0x47, 0x42, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x61, 0x72, 0x6b, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x52, 0x47, 0x42, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x72, 0x6b, 0x4d, 0x75, 0x74, 0x65, 0x64, 0x52, 0x47, 0x42,
	0x22, 0x6c, 0x0a, 0x0e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65,
	0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x74, 0x61,
	0x72, 0x67, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x4c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x22, 0xe5,
	0x0e, 0x0a, 0x0a, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x24, 0x0a,
	0x0d, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x4e,
	0x61, 0x6d, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73,
	0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x12, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f,
	0x64, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x76, 0x65,
	0x72, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x69, 0x6e, 0x67, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x07, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x79, 0x12, 0x24, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x52, 0x61,
	0x74, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x74,
	0x65, 0x6e, 0x74, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x10, 0x69, 0x6e, 0x66,
	0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x09, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x10, 0x69, 0x6e, 0x66, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0a, 0x70, 0x65, 0x72, 0x6d, 0x69,
	0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64,
	0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x2a, 0x0a,
	0x10, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74,
	0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70,
	0x65, 0x72, 0x57, 0x65, 0x62, 0x73, 0x69, 0x74, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x66,
	0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0c, 0x69, 0x6e, 0x66, 0x6f, 0x44, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x20, 0x0a,
	0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x0e, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x72, 0x65, 0x63, 0x65, 0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73,
	0x48, 0x74, 0x6d, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x63, 0x65,
	0x6e, 0x74, 0x43, 0x68, 0x61, 0x6e, 0x67, 0x65, 0x73, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x24, 0x0a,
	0x0d, 0x69, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x4f, 0x6e, 0x18, 0x10,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x69, 0x6e, 0x66, 0x6f, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x4f, 0x6e, 0x12, 0x21, 0x0a, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x18, 0x11, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x0d, 0x2e, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x52, 0x04, 0x66, 0x69, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70,
	0x65, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x70, 0x70, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x28, 0x0a, 0x0f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x48,
	0x61, 0x73, 0x68, 0x18, 0x13, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x63, 0x65, 0x72, 0x74, 0x69,
	0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x12, 0x30, 0x0a, 0x10, 0x76, 0x61,
	0x72, 0x69, 0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x15,
	0x20, 0x01, 0x28, 0x08, 0x3a, 0x04, 0x74, 0x72, 0x75, 0x65, 0x52, 0x10, 0x76, 0x61, 0x72, 0x69,
	0x65, 0x73, 0x57, 0x69, 0x74, 0x68, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37, 0x0a, 0x0e,
	0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x18, 0x16,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x74, 0x52, 0x0e, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61,
	0x74, 0x65, 0x53, 0x65, 0x74, 0x12, 0x64, 0x0a, 0x2d, 0x61, 0x75, 0x74, 0x6f, 0x41, 0x63, 0x71,
	0x75, 0x69, 0x72, 0x65, 0x46, 0x72, 0x65, 0x65, 0x41, 0x70, 0x70, 0x49, 0x66, 0x48, 0x69, 0x67,
	0x68, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x54, 0x61, 0x67, 0x18, 0x17, 0x20, 0x03, 0x28, 0x09, 0x52, 0x2d, 0x61, 0x75,
	0x74, 0x6f, 0x41, 0x63, 0x71, 0x75, 0x69, 0x72, 0x65, 0x46, 0x72, 0x65, 0x65, 0x41, 0x70, 0x70,
	0x49, 0x66, 0x48, 0x69, 0x67, 0x68, 0x65, 0x72, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x41,
	0x76, 0x61, 0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x54, 0x61, 0x67, 0x12, 0x26, 0x0a, 0x0e, 0x68,
	0x61, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x18, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x0e, 0x68, 0x61, 0x73, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4c,
	0x69, 0x6e, 0x6b, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x49, 0x64, 0x18, 0x19,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x49, 0x64, 0x12, 0x28, 0x0a,
	0x0f, 0x67, 0x61, 0x6d, 0x65, 0x70, 0x61, 0x64, 0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x67, 0x61, 0x6d, 0x65, 0x70, 0x61, 0x64, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x2a, 0x0a, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x6c, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x18, 0x1b, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x10, 0x65, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x6c, 0x79, 0x48, 0x6f, 0x73,
	0x74, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x14, 0x65, 0x76, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x6c, 0x79, 0x48, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x18, 0x1c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x14, 0x65, 0x76, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x6c,
	0x79, 0x48, 0x6f, 0x73, 0x74, 0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x73, 0x74, 0x61,
	0x6c, 0x6c, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4e, 0x6f, 0x74, 0x65, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x69,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1f,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x4c, 0x6f, 0x63,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53,
	0x64, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x20, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x10, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x64, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f,
	0x6e, 0x12, 0x40, 0x0a, 0x1b, 0x68, 0x61, 0x73, 0x50, 0x72, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73,
	0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x21, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1b, 0x68, 0x61, 0x73, 0x50, 0x72, 0x65, 0x72, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x6d, 0x6f, 0x43,
	0x6f, 0x64, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63,
	0x69, 0x65, 0x73, 0x18, 0x22, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x44, 0x65, 0x70, 0x65,
	0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x52, 0x0c, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x43, 0x0a, 0x12, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x23, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x13, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x12, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x3a, 0x0a, 0x0f, 0x65,
	0x61, 0x72, 0x6c, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x24,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x45, 0x61, 0x72, 0x6c, 0x79, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x65, 0x61, 0x72, 0x6c, 0x79, 0x41, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x31, 0x0a, 0x0c, 0x65, 0x64, 0x69, 0x74, 0x6f,
	0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x18, 0x29, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e,
	0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x52, 0x0c, 0x65, 0x64,
	0x69, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x6f, 0x69, 0x63, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x69, 0x6e,
	0x73, 0x74, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x2b, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x69, 0x6e, 0x73, 0x74, 0x61, 0x6e, 0x74, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x2a, 0x0a, 0x10,
	0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65, 0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73,
	0x18, 0x2d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x76, 0x65, 0x6c, 0x6f, 0x70, 0x65,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x28, 0x0a, 0x09, 0x70, 0x75, 0x62, 0x6c,
	0x69, 0x73, 0x68, 0x65, 0x72, 0x18, 0x2e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0a, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x52, 0x09, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61,
	0x6d, 0x65, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f,
	0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x35, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0d, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x32, 0x0a, 0x14,
	0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x69, 0x73,
	0x70, 0x6c, 0x61, 0x79, 0x18, 0x3d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x64, 0x6f, 0x77, 0x6e,
	0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x44, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79,
	0x12, 0x22, 0x0a, 0x0c, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74,
	0x18, 0x43, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x12, 0x3a, 0x0a, 0x18, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x41, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69, 0x61, 0x74, 0x65, 0x64,
	0x18, 0x4d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x18, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x4c, 0x61, 0x62, 0x65, 0x6c, 0x41, 0x62, 0x62, 0x72, 0x65, 0x76, 0x69, 0x61, 0x74, 0x65, 0x64,
	0x12, 0x24, 0x0a, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x4c, 0x61, 0x62, 0x65,
	0x6c, 0x18, 0x4e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x22, 0x6d, 0x0a, 0x0d, 0x4d, 0x6f, 0x64, 0x69, 0x66, 0x79,
	0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x70, 0x61, 0x63, 0x6b, 0x61,
	0x67, 0x65, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x41, 0x64, 0x64, 0x12, 0x28, 0x0a, 0x0f, 0x70,
	0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x52, 0x65, 0x6d, 0x6f, 0x76, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x52,
	0x65, 0x6d, 0x6f, 0x76, 0x65, 0x22, 0x47, 0x0a, 0x09, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68,
	0x65, 0x72, 0x12, 0x3a, 0x0a, 0x0f, 0x70, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x53,
	0x74, 0x72, 0x65, 0x61, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x50, 0x75,
	0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x52, 0x0f, 0x70,
	0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x22, 0x41,
	0x0a, 0x0f, 0x50, 0x75, 0x62, 0x6c, 0x69, 0x73, 0x68, 0x65, 0x72, 0x53, 0x74, 0x72, 0x65, 0x61,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x6d, 0x6f, 0x72, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x14, 0x0a, 0x05, 0x71,
	0x75, 0x65, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x71, 0x75, 0x65, 0x72,
	0x79, 0x22, 0x80, 0x01, 0x0a, 0x0c, 0x45, 0x64, 0x69, 0x74, 0x6f, 0x72, 0x43, 0x68, 0x6f, 0x69,
	0x63, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x69, 0x6e, 0x73, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x62, 0x75, 0x6c, 0x6c, 0x65, 0x74, 0x69, 0x6e, 0x73,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x75, 0x62, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x22, 0x52, 0x0a, 0x0e, 0x43, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63,
	0x61, 0x74, 0x65, 0x53, 0x65, 0x74, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66,
	0x69, 0x63, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x18, 0x02, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x06, 0x73, 0x68, 0x61, 0x32, 0x35, 0x36, 0x22, 0xa5, 0x01, 0x0a, 0x0c, 0x44, 0x65, 0x70,
	0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x69, 0x65, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x75, 0x6e, 0x6b,
	0x6e, 0x6f, 0x77, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x75, 0x6e, 0x6b, 0x6e,
	0x6f, 0x77, 0x6e, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x12, 0x2b, 0x0a, 0x0a, 0x64, 0x65, 0x70, 0x65, 0x6e,
	0x64, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0b, 0x2e, 0x44, 0x65,
	0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x52, 0x0a, 0x64, 0x65, 0x70, 0x65, 0x6e, 0x64,
	0x65, 0x6e, 0x63, 0x79, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53, 0x64,
	0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x74, 0x61, 0x72, 0x67, 0x65, 0x74, 0x53,
	0x64, 0x6b, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x41, 0x70, 0x6b, 0x73, 0x18,
	0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x41, 0x70, 0x6b, 0x73,
	0x22, 0x48, 0x0a, 0x0a, 0x44, 0x65, 0x70, 0x65, 0x6e, 0x64, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x20,
	0x0a, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x12, 0x18, 0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x22, 0xc2, 0x01, 0x0a, 0x12, 0x54,
	0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x64, 0x12, 0x36, 0x0a, 0x16, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x41,
	0x6e, 0x64, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x16, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x41, 0x6e, 0x64,
	0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61,
	0x69, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x12,
	0x20, 0x0a, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x4e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x22,
	0x27, 0x0a, 0x0f, 0x45, 0x61, 0x72, 0x6c, 0x79, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x65, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x86, 0x01, 0x0a, 0x0f, 0x44, 0x6f, 0x63,
	0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2b, 0x0a, 0x0a,
	0x61, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0b, 0x2e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0a, 0x61,
	0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x46, 0x0a, 0x13, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x13, 0x73, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x22, 0x4c, 0x0a, 0x0c, 0x50, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x28, 0x0a, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e,
	0x43, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0f, 0x62, 0x61, 0x73, 0x65,
	0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x73,
	0x69, 0x7a, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x22,
	0xd5, 0x01, 0x0a, 0x0c, 0x46, 0x69, 0x6c, 0x65, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61,
	0x12, 0x1a, 0x0a, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x66, 0x69, 0x6c, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b,
	0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x0b, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x73, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x73, 0x69,
	0x7a, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x07, 0x73, 0x70, 0x6c, 0x69, 0x74, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e,
	0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x72, 0x65, 0x73, 0x73, 0x65, 0x64,
	0x53, 0x69, 0x7a, 0x65, 0x12, 0x31, 0x0a, 0x0c, 0x70, 0x61, 0x74, 0x63, 0x68, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x50, 0x61, 0x74,
	0x63, 0x68, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0c, 0x70, 0x61, 0x74, 0x63, 0x68,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x45, 0x0a, 0x13, 0x53, 0x75, 0x62, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2e,
	0x0a, 0x12, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65,
	0x72, 0x69, 0x6f, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x12, 0x73, 0x75, 0x62, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x65, 0x72, 0x69, 0x6f, 0x64, 0x22, 0x91,
	0x09, 0x0a, 0x04, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x73, 0x75, 0x62, 0x49, 0x64, 0x12, 0x12, 0x0a,
	0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x74, 0x79, 0x70,
	0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e,
	0x48, 0x74, 0x6d, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x1c, 0x0a, 0x05, 0x6f,
	0x66, 0x66, 0x65, 0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x4f, 0x66, 0x66,
	0x65, 0x72, 0x52, 0x05, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x05, 0x69, 0x6d, 0x61,
	0x67, 0x65, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x07, 0x73, 0x75, 0x62, 0x49, 0x74,
	0x65, 0x6d, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x05, 0x2e, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x07, 0x73, 0x75, 0x62, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x40, 0x0a, 0x11, 0x63, 0x6f, 0x6e, 0x74,
	0x61, 0x69, 0x6e, 0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x4d,
	0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x11, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e,
	0x65, 0x72, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x07, 0x64, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x6f,
	0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x07, 0x64,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x41, 0x6e,
	0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x55, 0x72, 0x6c, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x1a, 0x0a, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x55,
	0x72, 0x6c, 0x18, 0x11, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x73, 0x68, 0x61, 0x72, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x55, 0x72, 0x6c,
	0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x73, 0x55,
	0x72, 0x6c, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x55, 0x72, 0x6c,
	0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x55,
	0x72, 0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x14, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x55,
	0x72, 0x6c, 0x12, 0x28, 0x0a, 0x0f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x75,
	0x73, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x75, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x73, 0x75, 0x62, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x3c, 0x0a, 0x19, 0x74, 0x72, 0x61, 0x6e,
	0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x17, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x74, 0x72, 0x61,
	0x6e, 0x73, 0x6c, 0x61, 0x74, 0x65, 0x64, 0x44, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72,
	0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x18, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x10, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x73, 0x43, 0x6f, 0x6f, 0x6b,
	0x69, 0x65, 0x12, 0x22, 0x0a, 0x07, 0x61, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x19, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61,
	0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x18, 0x1a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x06, 0x6d, 0x61, 0x74, 0x75, 0x72, 0x65, 0x12, 0x36,
	0x0a, 0x16, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x16,
	0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x61, 0x6c, 0x44, 0x65, 0x73, 0x63, 0x72,
	0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x1b, 0x61, 0x76, 0x61, 0x69, 0x6c, 0x61,
	0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x72, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1b, 0x61, 0x76, 0x61,
	0x69, 0x6c, 0x61, 0x62, 0x6c, 0x65, 0x46, 0x6f, 0x72, 0x50, 0x72, 0x65, 0x72, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x11, 0x72, 0x65, 0x76, 0x69,
	0x65, 0x77, 0x53, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x1f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x11, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x6e, 0x69, 0x70, 0x70,
	0x65, 0x74, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x3e, 0x0a, 0x1a, 0x75, 0x73, 0x65, 0x57, 0x69, 0x73,
	0x68, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79, 0x41, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x21, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x75, 0x73, 0x65, 0x57,
	0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x41, 0x73, 0x50, 0x72, 0x69, 0x6d, 0x61, 0x72, 0x79,
	0x41, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x51, 0x75, 0x65, 0x73, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x55, 0x72, 0x6c, 0x18, 0x22, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x12, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x51, 0x75, 0x65, 0x73, 0x74, 0x69,
	0x6f, 0x6e, 0x73, 0x55, 0x72, 0x6c, 0x12, 0x2a, 0x0a, 0x10, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x27, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x10, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x53, 0x75, 0x6d, 0x6d, 0x61, 0x72, 0x79, 0x55,
	0x72, 0x6c, 0x22, 0x4a, 0x0a, 0x07, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69,
	0x74, 0x6c, 0x65, 0x12, 0x29, 0x0a, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x07, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x57,
	0x0a, 0x0e, 0x41, 0x70, 0x70, 0x49, 0x6e, 0x66, 0x6f, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x14, 0x0a, 0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x6c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x2f, 0x0a, 0x09, 0x63, 0x6f, 0x6e, 0x74, 0x61, 0x69,
	0x6e, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x41, 0x70, 0x70, 0x49,
	0x6e, 0x66, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x52, 0x09, 0x63, 0x6f,
	0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x22, 0x52, 0x0a, 0x10, 0x41, 0x70, 0x70, 0x49, 0x6e,
	0x66, 0x6f, 0x43, 0x6f, 0x6e, 0x74, 0x61, 0x69, 0x6e, 0x65, 0x72, 0x12, 0x1c, 0x0a, 0x05, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73,
	0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xb6, 0x07, 0x0a, 0x0b,
	0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x22, 0x0a, 0x07, 0x77,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x57,
	0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x07, 0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x30, 0x0a, 0x0f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74,
	0x6f, 0x72, 0x18, 0x08, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65,
	0x52, 0x0f, 0x62, 0x61, 0x64, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x43, 0x72, 0x65, 0x61, 0x74, 0x6f,
	0x72, 0x12, 0x24, 0x0a, 0x09, 0x69, 0x6e, 0x66, 0x6f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x18, 0x09,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x09, 0x69, 0x6e,
	0x66, 0x6f, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x37, 0x0a, 0x0e, 0x61, 0x6e, 0x6e, 0x6f, 0x74,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x41, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b,
	0x52, 0x0e, 0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b,
	0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x18, 0x0e, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x6f, 0x66, 0x66, 0x65, 0x72, 0x4e, 0x6f, 0x74, 0x65, 0x12, 0x2a,
	0x0a, 0x10, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63, 0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55,
	0x72, 0x6c, 0x18, 0x12, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x70, 0x72, 0x69, 0x76, 0x61, 0x63,
	0x79, 0x50, 0x6f, 0x6c, 0x69, 0x63, 0x79, 0x55, 0x72, 0x6c, 0x12, 0x46, 0x0a, 0x19, 0x6f, 0x70,
	0x74, 0x69, 0x6d, 0x61, 0x6c, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73,
	0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x18, 0x14, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e,
	0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x52, 0x19, 0x6f, 0x70, 0x74, 0x69, 0x6d, 0x61, 0x6c,
	0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6c, 0x61, 0x73, 0x73, 0x57, 0x61, 0x72, 0x6e, 0x69,
	0x6e, 0x67, 0x12, 0x28, 0x0a, 0x0f, 0x61, 0x74, 0x74, 0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f,
	0x6e, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x1b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x61, 0x74, 0x74,
	0x72, 0x69, 0x62, 0x75, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x74, 0x6d, 0x6c, 0x12, 0x4f, 0x0a, 0x16,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x1c, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x16, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x48,
	0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x3a, 0x0a,
	0x14, 0x62, 0x61, 0x64, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x4c, 0x65, 0x67, 0x61, 0x63, 0x79, 0x52,
	0x61, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x1d, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x42, 0x61,
	0x64, 0x67, 0x65, 0x52, 0x14, 0x62, 0x61, 0x64, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x4c, 0x65, 0x67,
	0x61, 0x63, 0x79, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x2a, 0x0a, 0x0c, 0x66, 0x65, 0x61,
	0x74, 0x75, 0x72, 0x65, 0x42, 0x61, 0x64, 0x67, 0x65, 0x18, 0x27, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x06, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x0c, 0x66, 0x65, 0x61, 0x74, 0x75, 0x72, 0x65,
	0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61,
	0x64, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x18, 0x30, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x64,
	0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x73, 0x4c, 0x61, 0x62, 0x65, 0x6c, 0x12, 0x2e, 0x0a,
	0x0e, 0x62, 0x61, 0x64, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x18,
	0x32, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x0e, 0x62,
	0x61, 0x64, 0x67, 0x65, 0x46, 0x6f, 0x72, 0x52, 0x61, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x31, 0x0a,
	0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x18, 0x35, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f,
	0x12, 0x22, 0x0a, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x42, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x19, 0x0a, 0x04, 0x63, 0x68, 0x69, 0x70, 0x18, 0x47, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x05, 0x2e, 0x43, 0x68, 0x69, 0x70, 0x52, 0x04, 0x63, 0x68, 0x69, 0x70, 0x12,
	0x2a, 0x0a, 0x0c, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x42, 0x61, 0x64, 0x67, 0x65, 0x18,
	0x48, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x42, 0x61, 0x64, 0x67, 0x65, 0x52, 0x0c, 0x64,
	0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x6c,
	0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x18, 0x50, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0d, 0x6c, 0x69, 0x76, 0x65, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x72,
	0x6c, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74,
	0x72, 0x65, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x18, 0x55, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x70,
	0x72, 0x6f, 0x6d, 0x6f, 0x74, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x72,
	0x6c, 0x12, 0x31, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x18, 0x5e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x53, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x22, 0x35, 0x0a, 0x07, 0x57, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x12,
	0x2a, 0x0a, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6c, 0x6f, 0x63, 0x61, 0x6c,
	0x69, 0x7a, 0x65, 0x64, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x22, 0x75, 0x0a, 0x0e, 0x41,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x10, 0x0a,
	0x03, 0x75, 0x72, 0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12,
	0x31, 0x0a, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64,
	0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x4c, 0x69,
	0x6e, 0x6b, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x72, 0x69, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x72, 0x69, 0x42, 0x61, 0x63, 0x6b, 0x65,
	0x6e, 0x64, 0x22, 0x69, 0x0a, 0x05, 0x52, 0x61, 0x74, 0x65, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c,
	0x61, 0x62, 0x65, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6c, 0x61, 0x62, 0x65,
	0x6c, 0x12, 0x1c, 0x0a, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x06, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12,
	0x2c, 0x0a, 0x11, 0x6c, 0x65, 0x61, 0x72, 0x6e, 0x4d, 0x6f, 0x72, 0x65, 0x48, 0x74, 0x6d, 0x6c,
	0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x6c, 0x65, 0x61, 0x72,
	0x6e, 0x4d, 0x6f, 0x72, 0x65, 0x48, 0x74, 0x6d, 0x6c, 0x4c, 0x69, 0x6e, 0x6b, 0x22, 0xb2, 0x01,
	0x0a, 0x05, 0x42, 0x61, 0x64, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x61, 0x6a, 0x6f, 0x72, 0x12, 0x1c, 0x0a,
	0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x49,
	0x6d, 0x61, 0x67, 0x65, 0x52, 0x05, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x6d,
	0x69, 0x6e, 0x6f, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x69, 0x6e, 0x6f,
	0x72, 0x12, 0x1c, 0x0a, 0x09, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x48, 0x74, 0x6d, 0x6c, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6d, 0x69, 0x6e, 0x6f, 0x72, 0x48, 0x74, 0x6d, 0x6c, 0x12,
	0x1f, 0x0a, 0x04, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0b, 0x2e,
	0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x52, 0x04, 0x6c, 0x69, 0x6e, 0x6b,
	0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69,
	0x6f, 0x6e, 0x22, 0x6b, 0x0a, 0x04, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x10, 0x0a, 0x03, 0x75, 0x72,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x69, 0x12, 0x31, 0x0a, 0x0c,
	0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x0d, 0x2e, 0x52, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x4c, 0x69, 0x6e,
	0x6b, 0x52, 0x0c, 0x72, 0x65, 0x73, 0x6f, 0x6c, 0x76, 0x65, 0x64, 0x4c, 0x69, 0x6e, 0x6b, 0x12,
	0x1e, 0x0a, 0x0a, 0x75, 0x72, 0x69, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0a, 0x75, 0x72, 0x69, 0x42, 0x61, 0x63, 0x6b, 0x65, 0x6e, 0x64, 0x22,
	0xa4, 0x01, 0x0a, 0x0a, 0x53, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x10,
	0x0a, 0x03, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x75, 0x72, 0x6c,
	0x12, 0x1c, 0x0a, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x74, 0x72, 0x65, 0x61, 0x6d, 0x55, 0x72, 0x6c, 0x12, 0x1c,
	0x0a, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x72, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x55, 0x72, 0x6c, 0x12, 0x26, 0x0a, 0x0e,
	0x73, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x55, 0x72, 0x6c, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x75, 0x62, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72,
	0x79, 0x55, 0x72, 0x6c, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x51, 0x75,
	0x65, 0x72, 0x79, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x65, 0x61, 0x72, 0x63,
	0x68, 0x51, 0x75, 0x65, 0x72, 0x79, 0x22, 0x1c, 0x0a, 0x04, 0x43, 0x68, 0x69, 0x70, 0x12, 0x14,
	0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x22, 0x4c, 0x0a, 0x0c, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x1a, 0x0a, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79,
	0x12, 0x20, 0x0a, 0x0b, 0x61, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x61, 0x70, 0x70, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x22, 0xbd, 0x01, 0x0a, 0x11, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x41, 0x70,
	0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x28, 0x0a, 0x0f, 0x63, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x48, 0x61, 0x73, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0f, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x65, 0x48, 0x61,
	0x73, 0x68, 0x12, 0x36, 0x0a, 0x16, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x6f, 0x75, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x16, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65, 0x6f, 0x75,
	0x74, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x46, 0x0a, 0x1e, 0x70, 0x6f,
	0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x66, 0x75, 0x6e, 0x64,
	0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4d, 0x69, 0x6c, 0x6c, 0x69, 0x73, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x1e, 0x70, 0x6f, 0x73, 0x74, 0x44, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79,
	0x52, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x57, 0x69, 0x6e, 0x64, 0x6f, 0x77, 0x4d, 0x69, 0x6c, 0x6c,
	0x69, 0x73, 0x22, 0x63, 0x0a, 0x13, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x41,
	0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x2e, 0x0a, 0x12, 0x73, 0x69, 0x67,
	0x6e, 0x65, 0x64, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x75, 0x72,
	0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x69, 0x67,
	0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x69,
	0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xc8, 0x02, 0x0a, 0x0f, 0x4c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x05, 0x44,
	0x6f, 0x63, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x06, 0x2e, 0x44, 0x6f, 0x63,
	0x49, 0x64, 0x52, 0x05, 0x44, 0x6f, 0x63, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6f, 0x66, 0x66,
	0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x09, 0x6f, 0x66,
	0x66, 0x65, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x6f, 0x63, 0x75, 0x6d,
	0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0c, 0x64,
	0x6f, 0x63, 0x75, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x61, 0x73, 0x68, 0x12, 0x18, 0x0a, 0x07, 0x64,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x64, 0x65,
	0x6c, 0x65, 0x74, 0x65, 0x64, 0x12, 0x32, 0x0a, 0x0a, 0x61, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x4c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x0a, 0x61,
	0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x4d, 0x0a, 0x13, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x53, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x52, 0x13, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f,
	0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x38, 0x0a, 0x0c, 0x69, 0x6e, 0x41, 0x70,
	0x70, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x49, 0x6e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x0c, 0x69, 0x6e, 0x41, 0x70, 0x70, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x73, 0x22, 0xa4, 0x02, 0x0a, 0x1a, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x53, 0x75,
	0x62, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x12, 0x30, 0x0a, 0x13, 0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13,
	0x69, 0x6e, 0x69, 0x74, 0x69, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x30, 0x0a, 0x13, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69,
	0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x13, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65,
	0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x61, 0x75, 0x74, 0x6f, 0x52, 0x65, 0x6e,
	0x65, 0x77, 0x69, 0x6e, 0x67, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x61, 0x75, 0x74,
	0x6f, 0x52, 0x65, 0x6e, 0x65, 0x77, 0x69, 0x6e, 0x67, 0x12, 0x30, 0x0a, 0x13, 0x74, 0x72, 0x69,
	0x61, 0x6c, 0x55, 0x6e, 0x74, 0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x13, 0x74, 0x72, 0x69, 0x61, 0x6c, 0x55, 0x6e, 0x74,
	0x69, 0x6c, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x2e, 0x0a, 0x12, 0x73,
	0x69, 0x67, 0x6e, 0x65, 0x64, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x64, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x69, 0x67, 0x6e, 0x61, 0x74, 0x75, 0x72, 0x65, 0x22, 0xc7, 0x01, 0x0a, 0x0d, 0x4c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73,
	0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x72, 0x70, 0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73,
	0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0c,
	0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x2c, 0x0a,
	0x08, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x4c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79, 0x4d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x08, 0x6d, 0x75, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x68,
	0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68, 0x61,
	0x73, 0x4d, 0x6f, 0x72, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72, 0x79,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x49, 0x64, 0x22, 0xb3, 0x01, 0x0a, 0x03, 0x54, 0x69, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x70, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x70, 0x49,
	0x64, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x6f, 0x6c, 0x61, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x20, 0x0a, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f, 0x75, 0x6e, 0x74,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x72, 0x65, 0x76, 0x69, 0x65, 0x77, 0x43, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12,
	0x28, 0x0a, 0x0f, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65, 0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77,
	0x49, 0x64, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x73, 0x6e, 0x69, 0x70, 0x70, 0x65,
	0x74, 0x52, 0x65, 0x76, 0x69, 0x65, 0x77, 0x49, 0x64, 0x22, 0xf1, 0x04, 0x0a, 0x0b, 0x54, 0x6f,
	0x63, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x74, 0x6f, 0x73,
	0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74,
	0x6f, 0x73, 0x43, 0x6f, 0x6e, 0x74, 0x65, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x68, 0x6f, 0x6d,
	0x65, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x68, 0x6f, 0x6d, 0x65,
	0x55, 0x72, 0x6c, 0x12, 0x46, 0x0a, 0x1e, 0x74, 0x6f, 0x73, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x62,
	0x6f, 0x78, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x69, 0x6e, 0x67, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1e, 0x74, 0x6f, 0x73,
	0x43, 0x68, 0x65, 0x63, 0x6b, 0x62, 0x6f, 0x78, 0x54, 0x65, 0x78, 0x74, 0x4d, 0x61, 0x72, 0x6b,
	0x65, 0x74, 0x69, 0x6e, 0x67, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x73, 0x12, 0x1a, 0x0a, 0x08, 0x74,
	0x6f, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74,
	0x6f, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x28, 0x0a, 0x0f, 0x69, 0x63, 0x6f, 0x6e, 0x4f,
	0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0f, 0x69, 0x63, 0x6f, 0x6e, 0x4f, 0x76, 0x65, 0x72, 0x72, 0x69, 0x64, 0x65, 0x55, 0x72,
	0x6c, 0x12, 0x3e, 0x0a, 0x1a, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x55, 0x70, 0x6c,
	0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x1a, 0x72, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x73, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x63, 0x73, 0x57, 0x69, 0x64, 0x67, 0x65, 0x74, 0x55,
	0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x72, 0x65, 0x63, 0x73, 0x57, 0x69,
	0x64, 0x67, 0x65, 0x74, 0x55, 0x72, 0x6c, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x6f, 0x63, 0x69, 0x61,
	0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d,
	0x73, 0x6f, 0x63, 0x69, 0x61, 0x6c, 0x48, 0x6f, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x38, 0x0a,
	0x17, 0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x18, 0x10, 0x20, 0x01, 0x28, 0x08, 0x52, 0x17,
	0x61, 0x67, 0x65, 0x56, 0x65, 0x72, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x69, 0x72, 0x65, 0x64, 0x12, 0x2e, 0x0a, 0x12, 0x67, 0x50, 0x6c, 0x75, 0x73,
	0x53, 0x69, 0x67, 0x6e, 0x75, 0x70, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x12, 0x67, 0x50, 0x6c, 0x75, 0x73, 0x53, 0x69, 0x67, 0x6e, 0x75, 0x70,
	0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x72, 0x65, 0x64, 0x65, 0x65,
	0x6d, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x12, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0d,
	0x72, 0x65, 0x64, 0x65, 0x65, 0x6d, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x18, 0x0a,
	0x07, 0x68, 0x65, 0x6c, 0x70, 0x55, 0x72, 0x6c, 0x18, 0x13, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07,
	0x68, 0x65, 0x6c, 0x70, 0x55, 0x72, 0x6c, 0x12, 0x18, 0x0a, 0x07, 0x74, 0x68, 0x65, 0x6d, 0x65,
	0x49, 0x64, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x07, 0x74, 0x68, 0x65, 0x6d, 0x65, 0x49,
	0x64, 0x12, 0x32, 0x0a, 0x14, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65,
	0x6e, 0x74, 0x48, 0x6f, 0x6d, 0x65, 0x55, 0x72, 0x6c, 0x18, 0x15, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x14, 0x65, 0x6e, 0x74, 0x65, 0x72, 0x74, 0x61, 0x69, 0x6e, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x6f,
	0x6d, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18,
	0x16, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x22, 0xd0, 0x05,
	0x0a, 0x07, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x3a, 0x0a, 0x0f, 0x64, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x10, 0x2e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0f, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x62, 0x75, 0x79, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x42, 0x75, 0x79,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x62, 0x75, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x2e, 0x0a, 0x0b, 0x74, 0x6f, 0x63, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0c, 0x2e, 0x54, 0x6f, 0x63,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0b, 0x74, 0x6f, 0x63, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a, 0x16, 0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73,
	0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x16,
	0x70, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x46, 0x0a, 0x13, 0x62, 0x75, 0x6c, 0x6b, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x13, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x42, 0x75, 0x6c, 0x6b, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x13, 0x62, 0x75, 0x6c, 0x6b, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x3d,
	0x0a, 0x10, 0x64, 0x65, 0x6c, 0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x18, 0x15, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x11, 0x2e, 0x44, 0x65, 0x6c, 0x69, 0x76,
	0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x10, 0x64, 0x65, 0x6c,
	0x69, 0x76, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4f, 0x0a,
	0x16, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x1a, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e,
	0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x16, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x5b,
	0x0a, 0x1a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x1c, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x55, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63,
	0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52,
	0x1a, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x52, 0x0a, 0x17, 0x63,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x1e, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x43,
	0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x50, 0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x17, 0x63, 0x6f, 0x6e, 0x73, 0x75, 0x6d, 0x65, 0x50,
	0x75, 0x72, 0x63, 0x68, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12,
	0x4f, 0x0a, 0x16, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61,
	0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x18, 0x50, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x16, 0x74, 0x65, 0x73, 0x74, 0x69, 0x6e,
	0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x35, 0x0a, 0x0f, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x57, 0x72, 0x61, 0x70,
	0x70, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x07, 0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x08, 0x2e, 0x50, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x52, 0x07,
	0x70, 0x61, 0x79, 0x6c, 0x6f, 0x61, 0x64, 0x22, 0x47, 0x0a, 0x16, 0x54, 0x65, 0x73, 0x74, 0x69,
	0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73,
	0x65, 0x12, 0x2d, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x22, 0x48, 0x0a, 0x14, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72,
	0x61, 0x6d, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x30, 0x0a, 0x07, 0x64, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x54, 0x65, 0x73, 0x74,
	0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x73, 0x52, 0x07, 0x64, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x73, 0x22, 0x6b, 0x0a, 0x15, 0x54, 0x65,
	0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x61, 0x6d, 0x44, 0x65, 0x74, 0x61,
	0x69, 0x6c, 0x73, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x64, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x02, 0x69, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x75, 0x6e, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x75, 0x6e, 0x73, 0x75, 0x62,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x64, 0x22, 0x68, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61,
	0x6d, 0x70, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74,
	0x61, 0x6d, 0x70, 0x12, 0x3c, 0x0a, 0x19, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64, 0x43,
	0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72, 0x79,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x64, 0x6f, 0x77, 0x6e, 0x6c, 0x6f, 0x61, 0x64,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x72, 0x6d, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x51, 0x75, 0x65, 0x72,
	0x79, 0x22, 0x57, 0x0a, 0x15, 0x54, 0x65, 0x73, 0x74, 0x69, 0x6e, 0x67, 0x50, 0x72, 0x6f, 0x67,
	0x72, 0x61, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x70, 0x61,
	0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x70, 0x61, 0x63, 0x6b, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x09, 0x73, 0x75, 0x62, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22, 0xba, 0x01, 0x0a, 0x19, 0x55,
	0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x4b, 0x0a, 0x13, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63,
	0x74, 0x75, 0x72, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e,
	0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x11, 0x67, 0x63, 0x6d,
	0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x11, 0x67, 0x63, 0x6d, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x22, 0x56, 0x0a, 0x1a, 0x55, 0x70, 0x6c, 0x6f, 0x61,
	0x64, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x38, 0x0a, 0x17, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44,
	0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x17, 0x75, 0x70, 0x6c, 0x6f, 0x61, 0x64, 0x44, 0x65,
	0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x22,
	0xd9, 0x05, 0x0a, 0x15, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b,
	0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x6d, 0x65,
	0x69, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x6d, 0x65, 0x69, 0x12, 0x11, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x3a, 0x01, 0x30, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x12, 0x2e, 0x0a, 0x07, 0x63, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x41, 0x6e, 0x64, 0x72,
	0x6f, 0x69, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52,
	0x07, 0x63, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x65, 0x73, 0x69,
	0x72, 0x65, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x64, 0x65, 0x73, 0x69, 0x72, 0x65, 0x64, 0x42, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x16, 0x0a, 0x06,
	0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x6c, 0x6f,
	0x63, 0x61, 0x6c, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67, 0x49,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x6c, 0x6f, 0x67, 0x67, 0x69, 0x6e, 0x67,
	0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x43, 0x68, 0x65, 0x63,
	0x6b, 0x69, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6d, 0x61, 0x72, 0x6b, 0x65,
	0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x61, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x18, 0x09, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6d, 0x61, 0x63, 0x41, 0x64,
	0x64, 0x72, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x65, 0x69, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6d, 0x65, 0x69, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x43, 0x6f, 0x6f, 0x6b, 0x69, 0x65, 0x12, 0x1a, 0x0a, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x74, 0x69, 0x6d, 0x65, 0x5a, 0x6f, 0x6e, 0x65, 0x12, 0x24, 0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75,
	0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x06, 0x52,
	0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x18,
	0x0a, 0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x07, 0x76, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x18, 0x0a, 0x07, 0x6f, 0x74, 0x61, 0x43,
	0x65, 0x72, 0x74, 0x18, 0x0f, 0x20, 0x03, 0x28, 0x09, 0x52, 0x07, 0x6f, 0x74, 0x61, 0x43, 0x65,
	0x72, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62,
	0x65, 0x72, 0x18, 0x10, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x73, 0x65, 0x72, 0x69, 0x61, 0x6c,
	0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x65, 0x73, 0x6e, 0x18, 0x11, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x03, 0x65, 0x73, 0x6e, 0x12, 0x4b, 0x0a, 0x13, 0x64, 0x65, 0x76, 0x69,
	0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18,
	0x12, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x44, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x74, 0x6f,
	0x52, 0x13, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x6d, 0x61, 0x63, 0x41, 0x64, 0x64, 0x72,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x13, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0b, 0x6d, 0x61, 0x63, 0x41,
	0x64, 0x64, 0x72, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x66, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x18, 0x14, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x66, 0x72, 0x61, 0x67, 0x6d,
	0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x18,
	0x15, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x4e, 0x61, 0x6d, 0x65, 0x12,
	0x2a, 0x0a, 0x10, 0x75, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d,
	0x62, 0x65, 0x72, 0x18, 0x16, 0x20, 0x01, 0x28, 0x05, 0x52, 0x10, 0x75, 0x73, 0x65, 0x72, 0x53,
	0x65, 0x72, 0x69, 0x61, 0x6c, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0xd6, 0x02, 0x0a, 0x16,
	0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x73, 0x74, 0x61, 0x74, 0x73, 0x4f,
	0x6b, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x73, 0x74, 0x61, 0x74, 0x73, 0x4f, 0x6b,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x4d, 0x73, 0x65, 0x63, 0x12, 0x16, 0x0a, 0x06,
	0x64, 0x69, 0x67, 0x65, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x69,
	0x67, 0x65, 0x73, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x6b,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x6d, 0x61, 0x72, 0x6b, 0x65, 0x74, 0x4f, 0x6b,
	0x12, 0x1c, 0x0a, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x06, 0x52, 0x09, 0x61, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x49, 0x64, 0x12, 0x24,
	0x0a, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x08, 0x20, 0x01, 0x28, 0x06, 0x52, 0x0d, 0x73, 0x65, 0x63, 0x75, 0x72, 0x69, 0x74, 0x79, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x73,
	0x44, 0x69, 0x66, 0x66, 0x18, 0x09, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c, 0x73, 0x65, 0x74, 0x74,
	0x69, 0x6e, 0x67, 0x73, 0x44, 0x69, 0x66, 0x66, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x18, 0x0a, 0x20, 0x03, 0x28, 0x09, 0x52,
	0x0d, 0x64, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x53, 0x65, 0x74, 0x74, 0x69, 0x6e, 0x67, 0x12, 0x44,
	0x0a, 0x1d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x43,
	0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x1d, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x69, 0x6e, 0x43, 0x6f, 0x6e, 0x73, 0x69, 0x73, 0x74, 0x65, 0x6e, 0x63, 0x79, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x22, 0xa5, 0x03, 0x0a, 0x11, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64,
	0x42, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x72,
	0x6f, 0x64, 0x75, 0x63, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x70, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x63, 0x61, 0x72, 0x72, 0x69, 0x65, 0x72, 0x12, 0x14,
	0x0a, 0x05, 0x72, 0x61, 0x64, 0x69, 0x6f, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x72,
	0x61, 0x64, 0x69, 0x6f, 0x12, 0x1e, 0x0a, 0x0a, 0x62, 0x6f, 0x6f, 0x74, 0x6c, 0x6f, 0x61, 0x64,
	0x65, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x62, 0x6f, 0x6f, 0x74, 0x6c, 0x6f,
	0x61, 0x64, 0x65, 0x72, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x18, 0x06,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x63, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x09, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x12, 0x26, 0x0a, 0x0e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x0e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63,
	0x65, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x06, 0x64, 0x65, 0x76, 0x69, 0x63, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x73, 0x64,
	0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x73, 0x64, 0x6b, 0x56, 0x65, 0x72, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x6c, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x12, 0x22, 0x0a, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74, 0x75, 0x72, 0x65, 0x72,
	0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x6d, 0x61, 0x6e, 0x75, 0x66, 0x61, 0x63, 0x74,
	0x75, 0x72, 0x65, 0x72, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x50, 0x72, 0x6f,
	0x64, 0x75, 0x63, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x75, 0x69, 0x6c,
	0x64, 0x50, 0x72, 0x6f, 0x64, 0x75, 0x63, 0x74, 0x12, 0x22, 0x0a, 0x0c, 0x6f, 0x74, 0x61, 0x49,
	0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0c,
	0x6f, 0x74, 0x61, 0x49, 0x6e, 0x73, 0x74, 0x61, 0x6c, 0x6c, 0x65, 0x64, 0x22, 0xbb, 0x02, 0x0a,
	0x13, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x50,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x28, 0x0a, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69, 0x64, 0x42, 0x75, 0x69,
	0x6c, 0x64, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x62, 0x75, 0x69, 0x6c, 0x64, 0x12, 0x28,
	0x0a, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x69, 0x6e, 0x4d, 0x73, 0x65,
	0x63, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0f, 0x6c, 0x61, 0x73, 0x74, 0x43, 0x68, 0x65,
	0x63, 0x6b, 0x69, 0x6e, 0x4d, 0x73, 0x65, 0x63, 0x12, 0x28, 0x0a, 0x05, 0x65, 0x76, 0x65, 0x6e,
	0x74, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x41, 0x6e, 0x64, 0x72, 0x6f, 0x69,
	0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x52, 0x05, 0x65, 0x76, 0x65,
	0x6e, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x72, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x65, 0x64, 0x47,
	0x72, 0x6f, 0x75, 0x70, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0e, 0x72, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x65, 0x64, 0x47, 0x72, 0x6f, 0x75, 0x70, 0x12, 0x22, 0x0a, 0x0c, 0x63, 0x65,
	0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0c, 0x63, 0x65, 0x6c, 0x6c, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x20,
	0x0a, 0x0b, 0x73, 0x69, 0x6d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0b, 0x73, 0x69, 0x6d, 0x4f, 0x70, 0x65, 0x72, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x18, 0x0a, 0x07, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x72, 0x6f, 0x61, 0x6d, 0x69, 0x6e, 0x67, 0x12, 0x1e, 0x0a, 0x0a, 0x75, 0x73,
	0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x18, 0x09, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a,
	0x75, 0x73, 0x65, 0x72, 0x4e, 0x75, 0x6d, 0x62, 0x65, 0x72, 0x22, 0x57, 0x0a, 0x11, 0x41, 0x6e,
	0x64, 0x72, 0x6f, 0x69, 0x64, 0x45, 0x76, 0x65, 0x6e, 0x74, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x10, 0x0a, 0x03, 0x74, 0x61, 0x67, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x74, 0x61,
	0x67, 0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x4d,
	0x73, 0x65, 0x63, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x74, 0x69, 0x6d, 0x65, 0x4d,
	0x73, 0x65, 0x63, 0x22, 0xb0, 0x01, 0x0a, 0x12, 0x43, 0x6c, 0x69, 0x65, 0x6e, 0x74, 0x4c, 0x69,
	0x62, 0x72, 0x61, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x63, 0x6f,
	0x72, 0x70, 0x75, 0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x63, 0x6f, 0x72, 0x70,
	0x75, 0x73, 0x12, 0x20, 0x0a, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x73, 0x65, 0x72, 0x76, 0x65, 0x72, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x20, 0x0a, 0x0b, 0x68, 0x61, 0x73, 0x68, 0x43, 0x6f, 0x64, 0x65,
	0x53, 0x75, 0x6d, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0b, 0x68, 0x61, 0x73, 0x68, 0x43,
	0x6f, 0x64, 0x65, 0x53, 0x75, 0x6d, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x69, 0x62, 0x72, 0x61, 0x72,
	0x79, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x6c, 0x69, 0x62, 0x72,
	0x61, 0x72, 0x79, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x6c, 0x69, 0x62,
	0x72, 0x61, 0x72, 0x79, 0x49, 0x64, 0x42, 0x03, 0x5a, 0x01, 0x2e,
}

var (
	file_GooglePlay_proto_rawDescOnce sync.Once
	file_GooglePlay_proto_rawDescData = file_GooglePlay_proto_rawDesc
)

func file_GooglePlay_proto_rawDescGZIP() []byte {
	file_GooglePlay_proto_rawDescOnce.Do(func() {
		file_GooglePlay_proto_rawDescData = protoimpl.X.CompressGZIP(file_GooglePlay_proto_rawDescData)
	})
	return file_GooglePlay_proto_rawDescData
}

var file_GooglePlay_proto_msgTypes = make([]protoimpl.MessageInfo, 105)
var file_GooglePlay_proto_goTypes = []interface{}{
	(*AndroidAppDeliveryData)(nil),                  // 0: AndroidAppDeliveryData
	(*SplitDeliveryData)(nil),                       // 1: SplitDeliveryData
	(*AndroidAppPatchData)(nil),                     // 2: AndroidAppPatchData
	(*CompressedAppData)(nil),                       // 3: CompressedAppData
	(*AppFileMetadata)(nil),                         // 4: AppFileMetadata
	(*EncryptionParams)(nil),                        // 5: EncryptionParams
	(*HttpCookie)(nil),                              // 6: HttpCookie
	(*Address)(nil),                                 // 7: Address
	(*DirectPurchase)(nil),                          // 8: DirectPurchase
	(*ResolvedLink)(nil),                            // 9: ResolvedLink
	(*QuickLink)(nil),                               // 10: QuickLink
	(*BuyResponse)(nil),                             // 11: BuyResponse
	(*LineItem)(nil),                                // 12: LineItem
	(*Money)(nil),                                   // 13: Money
	(*PurchaseNotificationResponse)(nil),            // 14: PurchaseNotificationResponse
	(*PurchaseStatusResponse)(nil),                  // 15: PurchaseStatusResponse
	(*PurchaseHistoryDetails)(nil),                  // 16: PurchaseHistoryDetails
	(*AddressChallenge)(nil),                        // 17: AddressChallenge
	(*AuthenticationChallenge)(nil),                 // 18: AuthenticationChallenge
	(*Challenge)(nil),                               // 19: Challenge
	(*Country)(nil),                                 // 20: Country
	(*FormCheckbox)(nil),                            // 21: FormCheckbox
	(*InputValidationError)(nil),                    // 22: InputValidationError
	(*WebViewChallenge)(nil),                        // 23: WebViewChallenge
	(*DocId)(nil),                                   // 24: DocId
	(*Offer)(nil),                                   // 25: Offer
	(*SubscriptionTerms)(nil),                       // 26: SubscriptionTerms
	(*TimePeriod)(nil),                              // 27: TimePeriod
	(*ConsumePurchaseResponse)(nil),                 // 28: ConsumePurchaseResponse
	(*ContainerMetadata)(nil),                       // 29: ContainerMetadata
	(*ContainerView)(nil),                           // 30: ContainerView
	(*DebugInfo)(nil),                               // 31: DebugInfo
	(*DeliveryResponse)(nil),                        // 32: DeliveryResponse
	(*BulkDetailsEntry)(nil),                        // 33: BulkDetailsEntry
	(*BulkDetailsRequest)(nil),                      // 34: BulkDetailsRequest
	(*BulkDetailsResponse)(nil),                     // 35: BulkDetailsResponse
	(*DetailsResponse)(nil),                         // 36: DetailsResponse
	(*DiscoveryBadge)(nil),                          // 37: DiscoveryBadge
	(*DiscoveryBadgeLink)(nil),                      // 38: DiscoveryBadgeLink
	(*Features)(nil),                                // 39: Features
	(*Feature)(nil),                                 // 40: Feature
	(*DeviceConfigurationProto)(nil),                // 41: DeviceConfigurationProto
	(*DeviceFeature)(nil),                           // 42: DeviceFeature
	(*Document)(nil),                                // 43: Document
	(*DocumentVariant)(nil),                         // 44: DocumentVariant
	(*SectionImage)(nil),                            // 45: SectionImage
	(*ImageContainer)(nil),                          // 46: ImageContainer
	(*Image)(nil),                                   // 47: Image
	(*Attribution)(nil),                             // 48: Attribution
	(*ImagePalette)(nil),                            // 49: ImagePalette
	(*TranslatedText)(nil),                          // 50: TranslatedText
	(*AppDetails)(nil),                              // 51: AppDetails
	(*ModifyLibrary)(nil),                           // 52: ModifyLibrary
	(*Publisher)(nil),                               // 53: Publisher
	(*PublisherStream)(nil),                         // 54: PublisherStream
	(*EditorChoice)(nil),                            // 55: EditorChoice
	(*CertificateSet)(nil),                          // 56: CertificateSet
	(*Dependencies)(nil),                            // 57: Dependencies
	(*Dependency)(nil),                              // 58: Dependency
	(*TestingProgramInfo)(nil),                      // 59: TestingProgramInfo
	(*EarlyAccessInfo)(nil),                         // 60: EarlyAccessInfo
	(*DocumentDetails)(nil),                         // 61: DocumentDetails
	(*PatchDetails)(nil),                            // 62: PatchDetails
	(*FileMetadata)(nil),                            // 63: FileMetadata
	(*SubscriptionDetails)(nil),                     // 64: SubscriptionDetails
	(*Item)(nil),                                    // 65: Item
	(*AppInfo)(nil),                                 // 66: AppInfo
	(*AppInfoSection)(nil),                          // 67: AppInfoSection
	(*AppInfoContainer)(nil),                        // 68: AppInfoContainer
	(*Annotations)(nil),                             // 69: Annotations
	(*Warning)(nil),                                 // 70: Warning
	(*AnnotationLink)(nil),                          // 71: AnnotationLink
	(*Rated)(nil),                                   // 72: Rated
	(*Badge)(nil),                                   // 73: Badge
	(*Link)(nil),                                    // 74: Link
	(*StreamLink)(nil),                              // 75: StreamLink
	(*Chip)(nil),                                    // 76: Chip
	(*CategoryInfo)(nil),                            // 77: CategoryInfo
	(*LibraryAppDetails)(nil),                       // 78: LibraryAppDetails
	(*LibraryInAppDetails)(nil),                     // 79: LibraryInAppDetails
	(*LibraryMutation)(nil),                         // 80: LibraryMutation
	(*LibrarySubscriptionDetails)(nil),              // 81: LibrarySubscriptionDetails
	(*LibraryUpdate)(nil),                           // 82: LibraryUpdate
	(*Tip)(nil),                                     // 83: Tip
	(*TocResponse)(nil),                             // 84: TocResponse
	(*Payload)(nil),                                 // 85: Payload
	(*ResponseWrapper)(nil),                         // 86: ResponseWrapper
	(*TestingProgramResponse)(nil),                  // 87: TestingProgramResponse
	(*TestingProgramResult)(nil),                    // 88: TestingProgramResult
	(*TestingProgramDetails)(nil),                   // 89: TestingProgramDetails
	(*LogRequest)(nil),                              // 90: LogRequest
	(*TestingProgramRequest)(nil),                   // 91: TestingProgramRequest
	(*UploadDeviceConfigRequest)(nil),               // 92: UploadDeviceConfigRequest
	(*UploadDeviceConfigResponse)(nil),              // 93: UploadDeviceConfigResponse
	(*AndroidCheckinRequest)(nil),                   // 94: AndroidCheckinRequest
	(*AndroidCheckinResponse)(nil),                  // 95: AndroidCheckinResponse
	(*AndroidBuildProto)(nil),                       // 96: AndroidBuildProto
	(*AndroidCheckinProto)(nil),                     // 97: AndroidCheckinProto
	(*AndroidEventProto)(nil),                       // 98: AndroidEventProto
	(*ClientLibraryState)(nil),                      // 99: ClientLibraryState
	(*BuyResponse_CheckoutInfo)(nil),                // 100: BuyResponse.CheckoutInfo
	(*BuyResponse_CheckoutInfo_CheckoutOption)(nil), // 101: BuyResponse.CheckoutInfo.CheckoutOption
	(*DebugInfo_Timing)(nil),                        // 102: DebugInfo.Timing
	(*Image_Dimension)(nil),                         // 103: Image.Dimension
	(*Image_Citation)(nil),                          // 104: Image.Citation
}
var file_GooglePlay_proto_depIdxs = []int32{
	4,   // 0: AndroidAppDeliveryData.additionalFile:type_name -> AppFileMetadata
	6,   // 1: AndroidAppDeliveryData.downloadAuthCookie:type_name -> HttpCookie
	2,   // 2: AndroidAppDeliveryData.patchData:type_name -> AndroidAppPatchData
	5,   // 3: AndroidAppDeliveryData.encryptionParams:type_name -> EncryptionParams
	1,   // 4: AndroidAppDeliveryData.splitDeliveryData:type_name -> SplitDeliveryData
	3,   // 5: AndroidAppDeliveryData.compressedAppData:type_name -> CompressedAppData
	2,   // 6: SplitDeliveryData.patchData:type_name -> AndroidAppPatchData
	3,   // 7: SplitDeliveryData.compressedAppData:type_name -> CompressedAppData
	2,   // 8: AppFileMetadata.patchData:type_name -> AndroidAppPatchData
	8,   // 9: ResolvedLink.directPurchase:type_name -> DirectPurchase
	24,  // 10: ResolvedLink.DocId:type_name -> DocId
	47,  // 11: QuickLink.image:type_name -> Image
	9,   // 12: QuickLink.link:type_name -> ResolvedLink
	14,  // 13: BuyResponse.purchaseResponse:type_name -> PurchaseNotificationResponse
	100, // 14: BuyResponse.checkoutinfo:type_name -> BuyResponse.CheckoutInfo
	15,  // 15: BuyResponse.purchaseStatusResponse:type_name -> PurchaseStatusResponse
	19,  // 16: BuyResponse.challenge:type_name -> Challenge
	25,  // 17: LineItem.offer:type_name -> Offer
	13,  // 18: LineItem.amount:type_name -> Money
	31,  // 19: PurchaseNotificationResponse.debugInfo:type_name -> DebugInfo
	82,  // 20: PurchaseStatusResponse.libraryUpdate:type_name -> LibraryUpdate
	0,   // 21: PurchaseStatusResponse.appDeliveryData:type_name -> AndroidAppDeliveryData
	25,  // 22: PurchaseHistoryDetails.offer:type_name -> Offer
	47,  // 23: PurchaseHistoryDetails.purchaseDetailsImage:type_name -> Image
	21,  // 24: AddressChallenge.checkbox:type_name -> FormCheckbox
	7,   // 25: AddressChallenge.address:type_name -> Address
	22,  // 26: AddressChallenge.errorInputField:type_name -> InputValidationError
	20,  // 27: AddressChallenge.supportedCountry:type_name -> Country
	21,  // 28: AuthenticationChallenge.gaiaOptOutCheckbox:type_name -> FormCheckbox
	17,  // 29: Challenge.addressChallenge:type_name -> AddressChallenge
	18,  // 30: Challenge.authenticationChallenge:type_name -> AuthenticationChallenge
	23,  // 31: Challenge.webViewChallenge:type_name -> WebViewChallenge
	25,  // 32: Offer.convertedPrice:type_name -> Offer
	26,  // 33: Offer.subscriptionTerms:type_name -> SubscriptionTerms
	27,  // 34: SubscriptionTerms.recurringPeriod:type_name -> TimePeriod
	27,  // 35: SubscriptionTerms.trialPeriod:type_name -> TimePeriod
	82,  // 36: ConsumePurchaseResponse.libraryUpdate:type_name -> LibraryUpdate
	30,  // 37: ContainerMetadata.containerView:type_name -> ContainerView
	47,  // 38: ContainerMetadata.leftIcon:type_name -> Image
	102, // 39: DebugInfo.timing:type_name -> DebugInfo.Timing
	0,   // 40: DeliveryResponse.appDeliveryData:type_name -> AndroidAppDeliveryData
	65,  // 41: BulkDetailsEntry.item:type_name -> Item
	33,  // 42: BulkDetailsResponse.entry:type_name -> BulkDetailsEntry
	65,  // 43: DetailsResponse.item:type_name -> Item
	37,  // 44: DetailsResponse.discoveryBadge:type_name -> DiscoveryBadge
	39,  // 45: DetailsResponse.features:type_name -> Features
	47,  // 46: DiscoveryBadge.image:type_name -> Image
	38,  // 47: DiscoveryBadge.badgeContainer1:type_name -> DiscoveryBadgeLink
	74,  // 48: DiscoveryBadgeLink.link:type_name -> Link
	40,  // 49: Features.featurePresence:type_name -> Feature
	40,  // 50: Features.featureRating:type_name -> Feature
	42,  // 51: DeviceConfigurationProto.deviceFeature:type_name -> DeviceFeature
	24,  // 52: Document.DocId:type_name -> DocId
	24,  // 53: Document.fetchDocId:type_name -> DocId
	24,  // 54: Document.sampleDocId:type_name -> DocId
	25,  // 55: Document.priceDeprecated:type_name -> Offer
	47,  // 56: Document.image:type_name -> Image
	43,  // 57: Document.child:type_name -> Document
	25,  // 58: Document.offer:type_name -> Offer
	50,  // 59: Document.translatedSnippet:type_name -> TranslatedText
	44,  // 60: Document.documentVariant:type_name -> DocumentVariant
	43,  // 61: Document.decoration:type_name -> Document
	43,  // 62: Document.parent:type_name -> Document
	50,  // 63: DocumentVariant.autoTranslation:type_name -> TranslatedText
	25,  // 64: DocumentVariant.offer:type_name -> Offer
	43,  // 65: DocumentVariant.child:type_name -> Document
	43,  // 66: DocumentVariant.decoration:type_name -> Document
	47,  // 67: DocumentVariant.image:type_name -> Image
	46,  // 68: SectionImage.imageContainer:type_name -> ImageContainer
	47,  // 69: ImageContainer.image:type_name -> Image
	103, // 70: Image.dimension:type_name -> Image.Dimension
	104, // 71: Image.citation:type_name -> Image.Citation
	48,  // 72: Image.attribution:type_name -> Attribution
	49,  // 73: Image.palette:type_name -> ImagePalette
	63,  // 74: AppDetails.file:type_name -> FileMetadata
	56,  // 75: AppDetails.certificateSet:type_name -> CertificateSet
	57,  // 76: AppDetails.dependencies:type_name -> Dependencies
	59,  // 77: AppDetails.testingProgramInfo:type_name -> TestingProgramInfo
	60,  // 78: AppDetails.earlyAccessInfo:type_name -> EarlyAccessInfo
	55,  // 79: AppDetails.editorChoice:type_name -> EditorChoice
	53,  // 80: AppDetails.publisher:type_name -> Publisher
	54,  // 81: Publisher.publisherStream:type_name -> PublisherStream
	58,  // 82: Dependencies.dependency:type_name -> Dependency
	47,  // 83: TestingProgramInfo.image:type_name -> Image
	51,  // 84: DocumentDetails.appDetails:type_name -> AppDetails
	64,  // 85: DocumentDetails.subscriptionDetails:type_name -> SubscriptionDetails
	62,  // 86: FileMetadata.patchDetails:type_name -> PatchDetails
	25,  // 87: Item.offer:type_name -> Offer
	47,  // 88: Item.image:type_name -> Image
	65,  // 89: Item.subItem:type_name -> Item
	29,  // 90: Item.containerMetadata:type_name -> ContainerMetadata
	61,  // 91: Item.details:type_name -> DocumentDetails
	69,  // 92: Item.annotations:type_name -> Annotations
	66,  // 93: Item.appInfo:type_name -> AppInfo
	67,  // 94: AppInfo.section:type_name -> AppInfoSection
	68,  // 95: AppInfoSection.container:type_name -> AppInfoContainer
	47,  // 96: AppInfoContainer.image:type_name -> Image
	70,  // 97: Annotations.warning:type_name -> Warning
	73,  // 98: Annotations.badgeForCreator:type_name -> Badge
	73,  // 99: Annotations.infoBadge:type_name -> Badge
	71,  // 100: Annotations.annotationLink:type_name -> AnnotationLink
	70,  // 101: Annotations.optimalDeviceClassWarning:type_name -> Warning
	16,  // 102: Annotations.purchaseHistoryDetails:type_name -> PurchaseHistoryDetails
	73,  // 103: Annotations.badgeForLegacyRating:type_name -> Badge
	73,  // 104: Annotations.featureBadge:type_name -> Badge
	73,  // 105: Annotations.badgeForRating:type_name -> Badge
	77,  // 106: Annotations.categoryInfo:type_name -> CategoryInfo
	76,  // 107: Annotations.chip:type_name -> Chip
	73,  // 108: Annotations.displayBadge:type_name -> Badge
	45,  // 109: Annotations.sectionImage:type_name -> SectionImage
	9,   // 110: AnnotationLink.resolvedLink:type_name -> ResolvedLink
	47,  // 111: Rated.image:type_name -> Image
	47,  // 112: Badge.image:type_name -> Image
	75,  // 113: Badge.link:type_name -> StreamLink
	9,   // 114: Link.resolvedLink:type_name -> ResolvedLink
	24,  // 115: LibraryMutation.DocId:type_name -> DocId
	78,  // 116: LibraryMutation.appDetails:type_name -> LibraryAppDetails
	81,  // 117: LibraryMutation.subscriptionDetails:type_name -> LibrarySubscriptionDetails
	79,  // 118: LibraryMutation.inAppDetails:type_name -> LibraryInAppDetails
	80,  // 119: LibraryUpdate.mutation:type_name -> LibraryMutation
	36,  // 120: Payload.detailsResponse:type_name -> DetailsResponse
	11,  // 121: Payload.buyResponse:type_name -> BuyResponse
	84,  // 122: Payload.tocResponse:type_name -> TocResponse
	15,  // 123: Payload.purchaseStatusResponse:type_name -> PurchaseStatusResponse
	35,  // 124: Payload.bulkDetailsResponse:type_name -> BulkDetailsResponse
	32,  // 125: Payload.deliveryResponse:type_name -> DeliveryResponse
	95,  // 126: Payload.androidCheckinResponse:type_name -> AndroidCheckinResponse
	93,  // 127: Payload.uploadDeviceConfigResponse:type_name -> UploadDeviceConfigResponse
	28,  // 128: Payload.consumePurchaseResponse:type_name -> ConsumePurchaseResponse
	87,  // 129: Payload.testingProgramResponse:type_name -> TestingProgramResponse
	85,  // 130: ResponseWrapper.payload:type_name -> Payload
	88,  // 131: TestingProgramResponse.result:type_name -> TestingProgramResult
	89,  // 132: TestingProgramResult.details:type_name -> TestingProgramDetails
	41,  // 133: UploadDeviceConfigRequest.deviceConfiguration:type_name -> DeviceConfigurationProto
	97,  // 134: AndroidCheckinRequest.checkin:type_name -> AndroidCheckinProto
	41,  // 135: AndroidCheckinRequest.deviceConfiguration:type_name -> DeviceConfigurationProto
	96,  // 136: AndroidCheckinProto.build:type_name -> AndroidBuildProto
	98,  // 137: AndroidCheckinProto.event:type_name -> AndroidEventProto
	12,  // 138: BuyResponse.CheckoutInfo.item:type_name -> LineItem
	12,  // 139: BuyResponse.CheckoutInfo.subItem:type_name -> LineItem
	101, // 140: BuyResponse.CheckoutInfo.checkoutoption:type_name -> BuyResponse.CheckoutInfo.CheckoutOption
	12,  // 141: BuyResponse.CheckoutInfo.CheckoutOption.item:type_name -> LineItem
	12,  // 142: BuyResponse.CheckoutInfo.CheckoutOption.subItem:type_name -> LineItem
	12,  // 143: BuyResponse.CheckoutInfo.CheckoutOption.total:type_name -> LineItem
	12,  // 144: BuyResponse.CheckoutInfo.CheckoutOption.summary:type_name -> LineItem
	145, // [145:145] is the sub-list for method output_type
	145, // [145:145] is the sub-list for method input_type
	145, // [145:145] is the sub-list for extension type_name
	145, // [145:145] is the sub-list for extension extendee
	0,   // [0:145] is the sub-list for field type_name
}

func init() { file_GooglePlay_proto_init() }
func file_GooglePlay_proto_init() {
	if File_GooglePlay_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_GooglePlay_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidAppDeliveryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SplitDeliveryData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidAppPatchData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CompressedAppData); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppFileMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EncryptionParams); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*HttpCookie); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Address); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DirectPurchase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResolvedLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QuickLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LineItem); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Money); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseNotificationResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PurchaseHistoryDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AddressChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AuthenticationChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Challenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Country); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FormCheckbox); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*InputValidationError); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WebViewChallenge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocId); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Offer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[26].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionTerms); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[27].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TimePeriod); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[28].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ConsumePurchaseResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[29].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[30].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ContainerView); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[31].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[32].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeliveryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[33].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkDetailsEntry); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[34].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkDetailsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[35].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BulkDetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[36].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DetailsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[37].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoveryBadge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[38].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DiscoveryBadgeLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[39].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Features); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[40].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Feature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[41].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceConfigurationProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[42].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeviceFeature); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[43].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Document); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[44].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentVariant); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[45].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SectionImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[46].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImageContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[47].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[48].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Attribution); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[49].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ImagePalette); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[50].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TranslatedText); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[51].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[52].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ModifyLibrary); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[53].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Publisher); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[54].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PublisherStream); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[55].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EditorChoice); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[56].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CertificateSet); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[57].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dependencies); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[58].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Dependency); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[59].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestingProgramInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[60].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EarlyAccessInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[61].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DocumentDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[62].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PatchDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[63].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FileMetadata); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[64].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubscriptionDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[65].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Item); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[66].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[67].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfoSection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[68].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AppInfoContainer); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[69].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Annotations); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[70].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Warning); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[71].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AnnotationLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[72].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Rated); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[73].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Badge); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[74].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Link); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[75].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*StreamLink); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[76].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[77].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CategoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[78].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LibraryAppDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[79].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LibraryInAppDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[80].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LibraryMutation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[81].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LibrarySubscriptionDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[82].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LibraryUpdate); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[83].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Tip); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[84].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TocResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[85].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Payload); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[86].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResponseWrapper); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[87].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestingProgramResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[88].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestingProgramResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[89].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestingProgramDetails); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[90].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LogRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[91].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TestingProgramRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[92].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadDeviceConfigRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[93].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UploadDeviceConfigResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[94].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidCheckinRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[95].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidCheckinResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[96].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidBuildProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[97].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidCheckinProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[98].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AndroidEventProto); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[99].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ClientLibraryState); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[100].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyResponse_CheckoutInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[101].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BuyResponse_CheckoutInfo_CheckoutOption); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[102].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DebugInfo_Timing); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[103].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image_Dimension); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_GooglePlay_proto_msgTypes[104].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Image_Citation); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_GooglePlay_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   105,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_GooglePlay_proto_goTypes,
		DependencyIndexes: file_GooglePlay_proto_depIdxs,
		MessageInfos:      file_GooglePlay_proto_msgTypes,
	}.Build()
	File_GooglePlay_proto = out.File
	file_GooglePlay_proto_rawDesc = nil
	file_GooglePlay_proto_goTypes = nil
	file_GooglePlay_proto_depIdxs = nil
}
